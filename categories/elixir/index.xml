<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>elixir on susilolab</title><link>https://susilolab.github.io/categories/elixir/</link><description>Recent content in elixir on susilolab</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© susilolab</copyright><lastBuildDate>Thu, 14 Oct 2021 07:00:00 +0000</lastBuildDate><atom:link href="https://susilolab.github.io/categories/elixir/index.xml" rel="self" type="application/rss+xml"/><item><title>Contoh Penggunaan Embed Template pada Ecto</title><link>https://susilolab.github.io/posts/2021-10-14-contoh-penggunaan-embed-template-pada-elixir/</link><pubDate>Thu, 14 Oct 2021 07:00:00 +0000</pubDate><guid>https://susilolab.github.io/posts/2021-10-14-contoh-penggunaan-embed-template-pada-elixir/</guid><description>&lt;p>Jika ingin membuat generator untuk Ecto versimu sendiri, templatenya bisa menggunakan fungsi dari
modul &lt;code>Mix.Generator&lt;/code>.&lt;/p></description></item><item><title>Seting .iex.exs untuk mempercepat debugging Elixir</title><link>https://susilolab.github.io/posts/2020-11-14-seting-iex-exs-untuk-mempercepat-debugging-elixir/</link><pubDate>Sat, 14 Nov 2020 06:00:00 +0000</pubDate><guid>https://susilolab.github.io/posts/2020-11-14-seting-iex-exs-untuk-mempercepat-debugging-elixir/</guid><description>&lt;p>Bagi programmer Elixir tentu sudah tidak asing lagi dengan aplikasi &lt;code>iex&lt;/code> atau interactive Elixir, aplikasi ini biasanya digunakan untuk tes aplikasi atau sekedar mencoba kode
(fungsi) Elixir sebelum ditulis ke file dll. Biasanya kita menjalankan &lt;code>iex&lt;/code> pada mix project dengan perintah
&lt;code>iex -S mix&lt;/code> maka otomatis modul2 pada project dapat kita akses. Saat kita ingin mencoba query kita harus mengimport dulu modul2 yang bersangkutan dan juga membuat aliasnya.&lt;/p></description></item><item><title>Mengenal fungsi filter, map dan reduce di Elixir</title><link>https://susilolab.github.io/posts/2020-11-10-mengenal-filter-map-dan-reduce-di-elixir/</link><pubDate>Tue, 10 Nov 2020 07:00:00 +0000</pubDate><guid>https://susilolab.github.io/posts/2020-11-10-mengenal-filter-map-dan-reduce-di-elixir/</guid><description>&lt;p>Elixir adalah bahasa pemrograman fungsional, pada saat mengembangkan aplikasi tidak lepas dengan ketiga fungsi tersebut. Nah kali ini saya
ingin berbagi sedikit ilmu tentang 3 fungsi yaitu &lt;code>filter&lt;/code>, &lt;code>map&lt;/code> dan &lt;code>reduce&lt;/code>, apa perbedaannya dan kapan harus menggunakannya.&lt;/p></description></item><item><title>Menulis NIF Rust dengan Rustler</title><link>https://susilolab.github.io/posts/2020-03-29-menulis-nif-rust-dengan-rustler/</link><pubDate>Sun, 29 Mar 2020 08:00:00 +0000</pubDate><guid>https://susilolab.github.io/posts/2020-03-29-menulis-nif-rust-dengan-rustler/</guid><description>&lt;p>Kali ini saya ingin berbagi pengetahuan mengenai cara menulis NIF dengan &lt;code>Rustler&lt;/code> tapi sebelum itu saya ingin mengenalkan apa itu &lt;code>NIF&lt;/code>. NIF kependekan dari Native Implemented Function yaitu memanggil fungsi dari pustaka luar. Kenapa harus menggunakan NIF? alasan pertama karena beberapa fungsi pada pustaka tertentu tidak ada di elixir, alasan kedua yaitu agar performa aplikasi meningkat. NIF biasanya dibuat dengan bahasa C namun kali ini saya ingin menggunakan bahasa Rust karena alasan keamanan dan kecepatan. Pustaka rustler mengklaim library yang ditulis tidak akan menyebabkan virtual mesin BEAM crash sehingga kita tidak perlu khawatir dan fokus ke penulisan pustaka.&lt;/p></description></item><item><title>Register Javascript per modul di Phoenix</title><link>https://susilolab.github.io/posts/2019-09-18-register-javascript-per-module-di-phoenix/</link><pubDate>Wed, 18 Sep 2019 08:00:00 +0000</pubDate><guid>https://susilolab.github.io/posts/2019-09-18-register-javascript-per-module-di-phoenix/</guid><description>&lt;p>Dalam mengembangkan aplikasi web dengan framework &lt;a href="https://phoenixframework.org/">&lt;code>Phoenix&lt;/code>&lt;/a> kadang kita butuh menyertakan file javascript hanya pada halaman tertentu saja. Karena di Phoenix semua file javascript dijadikan satu pada file &lt;code>app.js&lt;/code> yang nantinya akan dikompilasi menggunakan webpack, namun phoenix menyediakan cara untuk merender view hanya jika view tersebut ada yaitu pakai fungsi &lt;code>render_existing/3&lt;/code>.&lt;/p></description></item><item><title>Menghitung total array angka dengan fungsi reduce</title><link>https://susilolab.github.io/posts/2019-09-09-menghitung-total-array-angka-dengan-fungsi-reduce/</link><pubDate>Mon, 09 Sep 2019 08:00:00 +0000</pubDate><guid>https://susilolab.github.io/posts/2019-09-09-menghitung-total-array-angka-dengan-fungsi-reduce/</guid><description>&lt;p>Kali ini saya ingin berbagi tips bagaimana menjumlahkan total array angka di Elixir dengan fungsi &lt;code>Enum.reduce/3&lt;/code>. Bagi yang pernah mengenal bahasa pemrograman seperti C, C++, Java atau PHP tentunya hal ini akan sangat-sangat mudah, saya beri contoh kodenya dalam bahasa PHP.&lt;/p></description></item><item><title>Membuat custom Mix Task di Phoenix</title><link>https://susilolab.github.io/posts/2019-09-07-membuat-custom-mix-task-di-phoenix/</link><pubDate>Sat, 07 Sep 2019 08:00:00 +0000</pubDate><guid>https://susilolab.github.io/posts/2019-09-07-membuat-custom-mix-task-di-phoenix/</guid><description>&lt;p>Kadang kita butuh membuat task versi kita sendiri untuk mempermudah dalam pengembangan web. Bawaan phoenix mendukung pembuatan custom mix task dan gunakan modul &lt;code>OptionParser&lt;/code> untuk mengolah argumennya. Untuk membuat custom mix task bikin folder &lt;code>app_name/lib/mix/tasks&lt;/code> dan buat file baru misalnya &lt;code>hello.ex&lt;/code> kemudian ikuti kode berikut:&lt;/p></description></item><item><title>Run command di Elixir</title><link>https://susilolab.github.io/posts/2019-09-03-run-command-di-elixir/</link><pubDate>Tue, 03 Sep 2019 15:00:00 +0000</pubDate><guid>https://susilolab.github.io/posts/2019-09-03-run-command-di-elixir/</guid><description>&lt;p>Cara menjalankan command cli di elixir bisa langsung dicoba di&lt;code>iex&lt;/code> atau buat file elixir script(&lt;code>.exs&lt;/code>)&lt;/p></description></item><item><title>Generate file xls di Elixir</title><link>https://susilolab.github.io/posts/2019-09-03-generate-xlsx-di-elixir/</link><pubDate>Tue, 03 Sep 2019 09:00:00 +0000</pubDate><guid>https://susilolab.github.io/posts/2019-09-03-generate-xlsx-di-elixir/</guid><description>&lt;p>Tips singkat bagaimana mengenerate file &lt;strong>xlsx&lt;/strong> di Elixir dengan paket &lt;code>elixlsx&lt;/code>. Pertama tambahkan ektensi ke file &lt;code>mix.exs&lt;/code> pada bagian fungsi &lt;code>deps&lt;/code>&lt;/p></description></item><item><title>Multi Alias dalam satu baris</title><link>https://susilolab.github.io/posts/2019-09-03-multi-alias-dalam-satu-baris/</link><pubDate>Tue, 03 Sep 2019 08:00:00 +0000</pubDate><guid>https://susilolab.github.io/posts/2019-09-03-multi-alias-dalam-satu-baris/</guid><description>&lt;p>&lt;code>Alias&lt;/code> digunakan untuk memperpendek nama modul pada Elixir, bayangkan kamu harus memanggil nama modul yang begitu banyak contoh&lt;/p></description></item><item><title>Baca file di Elixir dengan with</title><link>https://susilolab.github.io/posts/2019-09-01-baca-file-di-elixir-dengan-with/</link><pubDate>Sun, 01 Sep 2019 15:00:00 +0000</pubDate><guid>https://susilolab.github.io/posts/2019-09-01-baca-file-di-elixir-dengan-with/</guid><description>&lt;p>Kita tahu elixir kebanyakan menggunakan kembalian berupa tuple &lt;code>{:ok, hasil}&lt;/code> jika sukses dan tuple &lt;code>{:error, alasan}&lt;/code> jika error pada fungsinya. Contoh kita akan membaca file dengan &lt;code>File.read&lt;/code> &lt;strong>tanpa&lt;/strong> &lt;code>with&lt;/code> dan yang kedua &lt;strong>dengan&lt;/strong> &lt;code>with&lt;/code>. Buat file &lt;code>file_read_with.exs&lt;/code>&lt;/p></description></item><item><title>Menambah parameter pada routes helper Phoenix</title><link>https://susilolab.github.io/posts/2019-08-31-menambah-parameter-routes-helper-phoenix/</link><pubDate>Sat, 31 Aug 2019 13:47:42 +0000</pubDate><guid>https://susilolab.github.io/posts/2019-08-31-menambah-parameter-routes-helper-phoenix/</guid><description>&lt;p>Tips singkat ini saya dapat saat membuat aplikasi todo sederhana dengan phoenix. kasusnya saya menambah custom rute &lt;code>get /profile/edit/:id&lt;/code> dengan parameter &lt;code>:id&lt;/code>. awalnya saya pikir harus pakai key dan value.&lt;/p></description></item></channel></rss>