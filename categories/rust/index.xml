<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rust on susilolab</title><link>https://susilolab.github.io/categories/rust/</link><description>Recent content in rust on susilolab</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© susilolab</copyright><lastBuildDate>Thu, 30 Dec 2021 05:00:00 +0000</lastBuildDate><atom:link href="https://susilolab.github.io/categories/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>Mengenal Struct, self dan Self pada Rust</title><link>https://susilolab.github.io/posts/2021-12-30-mengenal-struct-self-pada-rust/</link><pubDate>Thu, 30 Dec 2021 05:00:00 +0000</pubDate><guid>https://susilolab.github.io/posts/2021-12-30-mengenal-struct-self-pada-rust/</guid><description>&lt;p>Rust merupakan bahasa pemrograman sistem yang tidak berbasis objek namun penggunaan &lt;code>struct&lt;/code> dan &lt;code>trait&lt;/code> konsepnya mirip&lt;br>
pada bahasa pemgrograman oop(berbasis objek).
Rust tidak menggunakan klas untuk mengatur struktur kode, melainkan menggunakan struk untuk mewakili object/klas
dan &lt;code>trait&lt;/code> untuk mewakili behaviornya atau dalam bahasa lain disebut dengan &lt;code>interface&lt;/code>.&lt;/p></description></item><item><title>JSON encode dan decode pada Rust</title><link>https://susilolab.github.io/posts/2020-11-13-json-encode-dan-decode-pada-rust/</link><pubDate>Fri, 13 Nov 2020 06:00:00 +0000</pubDate><guid>https://susilolab.github.io/posts/2020-11-13-json-encode-dan-decode-pada-rust/</guid><description>&lt;p>Hari ini saya ingin berbagi sedikit ilmu tentang bagaimana encode dan decode json objek di bahasa pemgrograman Rust. Karena saya masih newbie di Rust mohon dikoreksi jika terdapat
kesalahan pada artikel ini. Ok, langsung saja pertama-tama kita buat project baru dengan nama &lt;code>demo-json&lt;/code>. Silahkan ketikan perintah berikut untuk membuat project baru&lt;/p></description></item><item><title>Perulangan terbalik pada rust</title><link>https://susilolab.github.io/posts/2020-09-23-perulangan-terbalik-pada-rust/</link><pubDate>Wed, 23 Sep 2020 07:00:00 +0000</pubDate><guid>https://susilolab.github.io/posts/2020-09-23-perulangan-terbalik-pada-rust/</guid><description>&lt;p>Kali ini saya ingin berbagi sedikit tip bagaimana melakukan loop secara terbalik pada Rust.
Biasanya kita akan melakukan loop seperti ini:&lt;/p></description></item><item><title>Default run pada cargo run</title><link>https://susilolab.github.io/posts/2020-05-22-default-run-pada-cargo-run/</link><pubDate>Fri, 22 May 2020 08:00:00 +0000</pubDate><guid>https://susilolab.github.io/posts/2020-05-22-default-run-pada-cargo-run/</guid><description>&lt;p>Sebelumnya pada postingan tentang [Cargo run multi binary]({% post_url 2020-04-18-cargo-run-multi-binary %}) saya mencontohkan bagaimana menjalankan binary khusus menggunakan &lt;code>cargo run&lt;/code>, sehingga kita bisa bikin aplikasi secara terpisah berdasarkan nama file.&lt;/p>
&lt;p>Kenapa menggunakan multi binary pada saat menjalankan &lt;code>cargo run&lt;/code> ?. Karena code &lt;code>fn main()&lt;/code> dapat digunakan pada setiap file.&lt;/p></description></item><item><title>Passing argument to app when using cargo run</title><link>https://susilolab.github.io/posts/2020-05-19-passing-argument-to-app-when-using-cargo-run/</link><pubDate>Tue, 19 May 2020 03:00:00 +0000</pubDate><guid>https://susilolab.github.io/posts/2020-05-19-passing-argument-to-app-when-using-cargo-run/</guid><description>&lt;p>Pernahkah membuat aplikasi cli dengan clap kemudian ingin menjalankan dengan &lt;code>cargo run --help&lt;/code> tetapi output yang keluar malah helpnya dari cargo ?. Ternyata cargo punya syntax agar argument yang kita lewatkan ditujukan ke aplikasi bukan untuk cargo. Cukup tambahkan &lt;code>--&lt;/code> sebelum argument yang ada pada aplikasi.&lt;/p></description></item><item><title>Mengenal Tipe Data Dasar pada Rust</title><link>https://susilolab.github.io/posts/2020-05-15-mengenal-tipe-data-dasar-pada-rust/</link><pubDate>Fri, 15 May 2020 03:00:00 +0000</pubDate><guid>https://susilolab.github.io/posts/2020-05-15-mengenal-tipe-data-dasar-pada-rust/</guid><description>&lt;p>Rust memiliki beberapa tipe data dasar antara lain&lt;/p>
&lt;ul>
&lt;li>booleans - &lt;code>bool&lt;/code> untuk data berupa benar/salah true dan false&lt;/li>
&lt;li>integer tak bertanda - &lt;code>u8&lt;/code>, &lt;code>u32&lt;/code>, &lt;code>u64&lt;/code>, &lt;code>u128&lt;/code> untuk mewakili bilangan bulat positif&lt;/li>
&lt;li>integer bertanda - &lt;code>i8&lt;/code>, &lt;code>i32&lt;/code>, &lt;code>i64&lt;/code>, &lt;code>i128&lt;/code> untuk mewakili bilangan bulat positif dan negatif&lt;/li>
&lt;li>pointer sized integer - &lt;code>usize&lt;/code>, &lt;code>isize&lt;/code> untuk mewakili data yang berindex dan memiliki ukuran dimemori&lt;/li>
&lt;li>bilangan pecah - &lt;code>f32&lt;/code>, &lt;code>f64&lt;/code>&lt;/li>
&lt;li>terkait text - &lt;code>str&lt;/code>, &lt;code>chr&lt;/code>&lt;/li>
&lt;li>tuple - &lt;code>(value, value, ...)&lt;/code> untuk data berurutan dengan ukuran tetap&lt;/li>
&lt;li>slices - &lt;code>&amp;amp;[T]&lt;/code> untuk mewakili data berurutan pada memori atau biasa dikenal dengan nama array/larik&lt;/li>
&lt;/ul></description></item><item><title>Mengenal Bahasa Pemrograman Rust</title><link>https://susilolab.github.io/posts/2020-05-14-mengenal-bahasa-pemrograman-rust/</link><pubDate>Thu, 14 May 2020 08:00:00 +0000</pubDate><guid>https://susilolab.github.io/posts/2020-05-14-mengenal-bahasa-pemrograman-rust/</guid><description>&lt;p>Rust adalah bahasa pemrograman multi-paradigma yang fokus pada performa dan keamanan terutama &lt;code>safe concurrency&lt;/code>,
Rust secara syntax mirip C++ tetapi menyediakan kemanan memory tanpa menggunakan Garbage Collector pada pengelolaan memorinya. (wikipedia)&lt;/p></description></item><item><title>Cargo run multi binary</title><link>https://susilolab.github.io/posts/2020-04-18-cargo-run-multi-binary/</link><pubDate>Sat, 18 Apr 2020 08:00:00 +0000</pubDate><guid>https://susilolab.github.io/posts/2020-04-18-cargo-run-multi-binary/</guid><description>&lt;p>Pada saat kita menjalankan &lt;code>cargo run&lt;/code> maka secara default &lt;code>cargo&lt;/code> akan mencari file dengan nama &lt;code>main.rs&lt;/code>, bagaimana jika kita ingin menjalankan aplikasi yang berbeda nama file, misal kita ingin agar cargo dapat menjalankan file &lt;code>publisher.rs&lt;/code> atau &lt;code>subscriber.rs&lt;/code> pada saat kita ketik perintah &lt;code>cargo run&lt;/code>. Maka kita bisa menggunakan parameter &lt;code>--bin nama_binary&lt;/code>:&lt;/p></description></item></channel></rss>