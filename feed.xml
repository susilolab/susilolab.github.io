<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="http://localhost:4040/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4040/" rel="alternate" type="text/html" /><updated>2020-05-25T06:05:55+07:00</updated><id>http://localhost:4040/feed.xml</id><title type="html">susilolab</title><subtitle>“Sebaik-baik manusia adalah yang paling bermanfaat bagi manusia” (HR. Ahmad, ath-Thabrani, ad-Daruqutni)</subtitle><author><name>Agus Susilo</name></author><entry><title type="html">Menulis Syntax Kode Template Jekyll di dalam Contoh Kode</title><link href="http://localhost:4040/ruby/2020/05/25/menulis-syntax-kode-template-jekyll-di-dalam-contoh-kode.html" rel="alternate" type="text/html" title="Menulis Syntax Kode Template Jekyll di dalam Contoh Kode" /><published>2020-05-25T05:00:00+07:00</published><updated>2020-05-25T05:00:00+07:00</updated><id>http://localhost:4040/ruby/2020/05/25/menulis-syntax-kode-template-jekyll-di-dalam-contoh-kode</id><content type="html" xml:base="http://localhost:4040/ruby/2020/05/25/menulis-syntax-kode-template-jekyll-di-dalam-contoh-kode.html">&lt;p&gt;Buat temen-temen yang pake jekyll untuk menulis blognya pasti tahu syntax dari template jekyll. Nah pernahkah temen-temen ingin men-share kode dari template jekyll?. Sudah mencari-cari digoogle tapi belum ketemu?. Kali saya ingin berbagi bagaimana men-share kode dari syntax template jekyll ke blog.&lt;/p&gt;

&lt;p&gt;Untuk bisa menuliskan kode dari jekyll kita bisa memakai syntax &lt;code class=&quot;highlighter-rouge&quot;&gt;raw&lt;/code&gt; dan &lt;code class=&quot;highlighter-rouge&quot;&gt;endraw&lt;/code&gt;, karena saya belum menemukan bagaimana men-share kode &lt;code class=&quot;highlighter-rouge&quot;&gt;raw&lt;/code&gt; di dalam &lt;code class=&quot;highlighter-rouge&quot;&gt;raw&lt;/code&gt; maka saya pake screenshot saja. Jadi setelah syntax kode &lt;code class=&quot;highlighter-rouge&quot;&gt;highlight&lt;/code&gt; kita bisa tambahkan &lt;code class=&quot;highlighter-rouge&quot;&gt;raw&lt;/code&gt; kemudian baru menulis kode template. &lt;code class=&quot;highlighter-rouge&quot;&gt;raw&lt;/code&gt; akan memproses apa yang ada di dalamnya sesuai format, tanpa merubah isinya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/20200522-syntax-jekyll.png&quot; alt=&quot;mix-deps-get&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Contoh outputnya bisa dilihat pada postingan saya berikut &lt;a href=&quot;/ruby/2020/05/21/link-internal-post-pada-artikel-di-jekyll.html&quot;&gt;Link Internal Post pada Artikel di Jekyll&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sekian semoga bermanfaat.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Buat temen-temen yang pake jekyll untuk menulis blognya pasti tahu syntax dari template jekyll. Nah pernahkah temen-temen ingin men-share kode dari template jekyll?. Sudah mencari-cari digoogle tapi belum ketemu?. Kali saya ingin berbagi bagaimana men-share kode dari syntax template jekyll ke blog. Untuk bisa menuliskan kode dari jekyll kita bisa memakai syntax raw dan endraw, karena saya belum menemukan bagaimana men-share kode raw di dalam raw maka saya pake screenshot saja. Jadi setelah syntax kode highlight kita bisa tambahkan raw kemudian baru menulis kode template. raw akan memproses apa yang ada di dalamnya sesuai format, tanpa merubah isinya. Contoh outputnya bisa dilihat pada postingan saya berikut Link Internal Post pada Artikel di Jekyll Sekian semoga bermanfaat.</summary></entry><entry><title type="html">Mengenal Trait di PHP</title><link href="http://localhost:4040/php/2020/05/23/mengenal-trait-php.html" rel="alternate" type="text/html" title="Mengenal Trait di PHP" /><published>2020-05-23T00:00:00+07:00</published><updated>2020-05-23T00:00:00+07:00</updated><id>http://localhost:4040/php/2020/05/23/mengenal-trait-php</id><content type="html" xml:base="http://localhost:4040/php/2020/05/23/mengenal-trait-php.html">&lt;p&gt;Trait adalah mekanisme untuk penggunaan kembali kode dalam single inheritance. Trait dimaksudkan untuk mengurangi beberapa keterbatasan dari turunan tunggal dengan memungkinkan pengembang untuk menggunakan kembali serangkain fungsi-fungsi secara bebas pada beberapa klas yang independen yang hidup dalam hirarki klas yang berbeda.&lt;/p&gt;

&lt;p&gt;Trait mirip dengan klas, hanya saja trait dimaksudkan untuk mengelompokan fungsi menjadi kecil dan konsisten. Kita tidak bisa meng-instansi trait pada dirinya sendiri tetapi kita bisa menggunakannya tanpa harus menurukannya(inheritance).&lt;/p&gt;

&lt;p&gt;Daftar Isi:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#precedence&quot;&gt;Precedence&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#trait-multiple&quot;&gt;Trait Multiple&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#conflict-resolution&quot;&gt;Resolusi Konflik&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#visibility&quot;&gt;Merubah visibility metode&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#composed&quot;&gt;Trait disusun dari Trait&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#abstract-trait&quot;&gt;Anggota Trait Abstract&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#static-trait&quot;&gt;Anggota Static Trait&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#property&quot;&gt;Property&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Contoh trait:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app\traits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Foo&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Untuk menggunakan trait pada klas kita cukup gunakan keyword &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;/code&gt; didalam definisi klas.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\app\traits\Foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// kita dapat menggunakan fungsi dari trait Foo &lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// secara langsung menggunakan $this&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;world&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' world!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;hal-mendahului-precedence&quot;&gt;&lt;a name=&quot;precedence&quot;&gt;&lt;/a&gt;Hal mendahului/ Precedence&lt;/h4&gt;

&lt;p&gt;Anggota turunan dari klas dasar ditumpuki oleh anggota yang disisipi oleh Trait. Urutan precedence adalah bahwa member dari klas saat ini ditumpuk oleh trait yang disisipkan.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Contoh&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Fungsi turunan dari klas dasar (&lt;code class=&quot;highlighter-rouge&quot;&gt;Base&lt;/code&gt;) ditumpuk oleh fungsi yang disisipkan pada klas &lt;code class=&quot;highlighter-rouge&quot;&gt;MyHelloWorld&lt;/code&gt; yaitu dari trait &lt;code class=&quot;highlighter-rouge&quot;&gt;SayWorld&lt;/code&gt;. Aturan ini akan sama untuk fungsi yang didefinisikan di dalam klas &lt;code class=&quot;highlighter-rouge&quot;&gt;MyHelloWorld&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Base&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SayWorld&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'World!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyHelloWorld&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SayWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyHelloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// output:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// World&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Contoh lain dari urutan precedence&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloWorld&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello World!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DuniaTidakCukup&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;HelloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Halo Dunia!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DuniaTidakCukup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Contoh di atas akan menghasilkan keluaran:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Halo Dunia!&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;trait-multiple&quot;&gt;&lt;a name=&quot;trait-multiple&quot;&gt;&lt;/a&gt;Trait Multiple&lt;/h4&gt;

&lt;p&gt;Multiple trait dapat disisipkan ke dalam klas dengan mendaftarkannya pada statemen &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;/code&gt;, dipisahkan dengan koma.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Hello&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;World&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'World'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyHelloWorld&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;, World&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayExclamationMark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyHelloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sayWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sayExclamationMark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;resolusi-konflik&quot;&gt;&lt;a name=&quot;conflict-resolution&quot;&gt;&lt;/a&gt;Resolusi Konflik&lt;/h4&gt;

&lt;p&gt;Jika dua Trait disisipkan dengan nama yang sama maka akan terjadi kesalahan fatal, jika masalah tidak dipecahkan secara eksplisit. Untuk memecahkan konflik penamaan antara Trait pada klas yang sama, operator &lt;code class=&quot;highlighter-rouge&quot;&gt;insteadof&lt;/code&gt; diperlukan untuk memilih tepat satu dari method yang konflik. Karena hal ini hanya boleh membuat satu pengecualian, operator &lt;code class=&quot;highlighter-rouge&quot;&gt;as&lt;/code&gt; dapat digunakan untuk menambah alias ke suatu method. Perlu dicatat bahwa operator &lt;code class=&quot;highlighter-rouge&quot;&gt;as&lt;/code&gt; tidak merubah nama method dan tidak mempengaruhi method lain.&lt;/p&gt;

&lt;p&gt;Contoh&lt;/p&gt;

&lt;p&gt;Pada contoh ini, klas &lt;code class=&quot;highlighter-rouge&quot;&gt;Talker&lt;/code&gt; menggunakan trait &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt; dan &lt;code class=&quot;highlighter-rouge&quot;&gt;B&lt;/code&gt;. Karena trait &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt; dan &lt;code class=&quot;highlighter-rouge&quot;&gt;B&lt;/code&gt; memiliki konflik, maka klas ini akan perlu mendefinisikan penggunaan method &lt;code class=&quot;highlighter-rouge&quot;&gt;smallTalk&lt;/code&gt; dari trait &lt;code class=&quot;highlighter-rouge&quot;&gt;B&lt;/code&gt; dan method &lt;code class=&quot;highlighter-rouge&quot;&gt;bigTalk&lt;/code&gt; dari trait &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Klas &lt;code class=&quot;highlighter-rouge&quot;&gt;Alias_Talker&lt;/code&gt; menggunakan operator &lt;code class=&quot;highlighter-rouge&quot;&gt;as&lt;/code&gt; untuk dapat menggunakan method &lt;code class=&quot;highlighter-rouge&quot;&gt;bigTalk&lt;/code&gt; dari trait &lt;code class=&quot;highlighter-rouge&quot;&gt;B&lt;/code&gt; dengan nama alias &lt;code class=&quot;highlighter-rouge&quot;&gt;talk&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;smallTalk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bigTalk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;smallTalk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bigTalk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Talker&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;, B {
        B::smallTalk insteadof A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bigTalk&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;insteadof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Aliased_Talker&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;, B {
        B::smallTalk insteadof A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bigTalk&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;insteadof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bigTalk&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;talk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;merubah-visibility-metode&quot;&gt;&lt;a name=&quot;visibility&quot;&gt;&lt;/a&gt;Merubah visibility metode&lt;/h4&gt;

&lt;p&gt;Dengan menggunakan syntax &lt;code class=&quot;highlighter-rouge&quot;&gt;as&lt;/code&gt; method pada trait dapat dirubah visibilitynya pada klas yang menggunakan trait.&lt;/p&gt;

&lt;p&gt;Contoh&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloWorld&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello world!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Merubah visibility fungsi sayHello&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyClass1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;HelloWorld&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; { sayHello&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;protected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Alias method dengan perubahan visibility&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Visibility sayHello tetap tidak berubah&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyClass2&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;HelloWorld&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; { sayHello&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;private&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; myPrivateHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;trait-disusun-dari-trait&quot;&gt;&lt;a name=&quot;composed&quot;&gt;&lt;/a&gt;Trait disusun dari Trait&lt;/h4&gt;

&lt;p&gt;Seperti pada klas yang dapat menggunakan trait, jadi trait juga dapat menggunakan trait lain. Dengan menggunakan satu atau lebih trait di dalam definisi trait, trait ini dapat disusun sebagian atau semuanya dari anggota yang mendefinisikan pada trait lain.&lt;/p&gt;

&lt;p&gt;Contoh&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Hello&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;World&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'World'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloWorld&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;, World&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyHelloWorld&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;HelloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyHelloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sayWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;anggota-trait-abstract&quot;&gt;&lt;a name=&quot;abstract-trait&quot;&gt;&lt;/a&gt;Anggota Trait Abstract&lt;/h4&gt;

&lt;p&gt;Trait mendukung penggunaan abstract method untuk memaksa kebutuhan pada class yang menggunakan trait.&lt;/p&gt;

&lt;p&gt;Contoh abstract method&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Hello&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayHelloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyHelloWorld&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$world&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;world&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;world&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;anggota-static-trait&quot;&gt;&lt;a name=&quot;static-trait&quot;&gt;&lt;/a&gt;Anggota Static Trait&lt;/h4&gt;

&lt;p&gt;Trait dapat mendefinisikan static property dan static method&lt;/p&gt;

&lt;p&gt;Contoh static variabel&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Counter&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;C1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;C2&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;C1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// echo 1&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;C2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// echo 1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Contoh static method&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StaticExample&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Doing Something'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Example&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;StaticExample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Example&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;property&quot;&gt;&lt;a name=&quot;property&quot;&gt;&lt;/a&gt;Property&lt;/h4&gt;

&lt;p&gt;Di dalam Trait kita juga dapat mendefinisikan &lt;code class=&quot;highlighter-rouge&quot;&gt;property&lt;/code&gt; sama seperti pada klas.&lt;/p&gt;

&lt;p&gt;Contoh&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PropertiesTrait&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PropertiesExample&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PropertiesTrait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropertiesExample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;sekian.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;sumber: php.net&lt;/em&gt;&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Trait adalah mekanisme untuk penggunaan kembali kode dalam single inheritance. Trait dimaksudkan untuk mengurangi beberapa keterbatasan dari turunan tunggal dengan memungkinkan pengembang untuk menggunakan kembali serangkain fungsi-fungsi secara bebas pada beberapa klas yang independen yang hidup dalam hirarki klas yang berbeda. Trait mirip dengan klas, hanya saja trait dimaksudkan untuk mengelompokan fungsi menjadi kecil dan konsisten. Kita tidak bisa meng-instansi trait pada dirinya sendiri tetapi kita bisa menggunakannya tanpa harus menurukannya(inheritance). Daftar Isi: Precedence Trait Multiple Resolusi Konflik Merubah visibility metode Trait disusun dari Trait Anggota Trait Abstract Anggota Static Trait Property Contoh trait: &amp;lt;?php namespace app\traits; trait Foo { public function hello() { return 'Hello'; } } Untuk menggunakan trait pada klas kita cukup gunakan keyword use didalam definisi klas. &amp;lt;?php class User { use \app\traits\Foo; // kita dapat menggunakan fungsi dari trait Foo // secara langsung menggunakan $this public function world() { echo $this-&amp;gt;hello() . ' world!'; } } Hal mendahului/ Precedence Anggota turunan dari klas dasar ditumpuki oleh anggota yang disisipi oleh Trait. Urutan precedence adalah bahwa member dari klas saat ini ditumpuk oleh trait yang disisipkan. Contoh Fungsi turunan dari klas dasar (Base) ditumpuk oleh fungsi yang disisipkan pada klas MyHelloWorld yaitu dari trait SayWorld. Aturan ini akan sama untuk fungsi yang didefinisikan di dalam klas MyHelloWorld. &amp;lt;?php class Base { public function sayHello() { echo 'Hello '; } } trait SayWorld { public function sayHello() { echo 'World!'; } } class MyHelloWorld extends Base { use SayWorld; } $o = new MyHelloWorld(); $o-&amp;gt;sayHello(); // output: // World Contoh lain dari urutan precedence &amp;lt;?php trait HelloWorld { public function sayHello() { echo 'Hello World!'; } } class DuniaTidakCukup { use HelloWorld; public function sayHello() { echo 'Halo Dunia!'; } } $o = new DuniaTidakCukup(); $o-&amp;gt;sayHello(); Contoh di atas akan menghasilkan keluaran: Halo Dunia! Trait Multiple Multiple trait dapat disisipkan ke dalam klas dengan mendaftarkannya pada statemen use, dipisahkan dengan koma. &amp;lt;?php trait Hello { public function sayHello() { echo 'Hello '; } } trait World { public function sayWorld() { echo 'World'; } } class MyHelloWorld { use Hello, World; public function sayExclamationMark() { echo '!'; } } $o = new MyHelloWorld(); $o-&amp;gt;sayHello(); $o-&amp;gt;sayWorld(); $o-&amp;gt;sayExclamationMark(); Resolusi Konflik Jika dua Trait disisipkan dengan nama yang sama maka akan terjadi kesalahan fatal, jika masalah tidak dipecahkan secara eksplisit. Untuk memecahkan konflik penamaan antara Trait pada klas yang sama, operator insteadof diperlukan untuk memilih tepat satu dari method yang konflik. Karena hal ini hanya boleh membuat satu pengecualian, operator as dapat digunakan untuk menambah alias ke suatu method. Perlu dicatat bahwa operator as tidak merubah nama method dan tidak mempengaruhi method lain. Contoh Pada contoh ini, klas Talker menggunakan trait A dan B. Karena trait A dan B memiliki konflik, maka klas ini akan perlu mendefinisikan penggunaan method smallTalk dari trait B dan method bigTalk dari trait A. Klas Alias_Talker menggunakan operator as untuk dapat menggunakan method bigTalk dari trait B dengan nama alias talk. &amp;lt;?php trait A { public function smallTalk() { echo 'a'; } public function bigTalk() { echo 'A'; } } trait B { public function smallTalk() { echo 'b'; } public function bigTalk() { echo 'B'; } } class Talker { use A, B { B::smallTalk insteadof A; A::bigTalk insteadof B; } } class Aliased_Talker { use A, B { B::smallTalk insteadof A; A::bigTalk insteadof B; B::bigTalk as talk; } } Merubah visibility metode Dengan menggunakan syntax as method pada trait dapat dirubah visibilitynya pada klas yang menggunakan trait. Contoh &amp;lt;?php trait HelloWorld { public function sayHello() { echo 'Hello world!'; } } // Merubah visibility fungsi sayHello class MyClass1 { use HelloWorld { sayHello as protected; } } // Alias method dengan perubahan visibility // Visibility sayHello tetap tidak berubah class MyClass2 { use HelloWorld { sayHello as private myPrivateHello; } } Trait disusun dari Trait Seperti pada klas yang dapat menggunakan trait, jadi trait juga dapat menggunakan trait lain. Dengan menggunakan satu atau lebih trait di dalam definisi trait, trait ini dapat disusun sebagian atau semuanya dari anggota yang mendefinisikan pada trait lain. Contoh &amp;lt;?php trait Hello { public function sayHello() { echo 'Hello'; } } trait World { public function sayWorld() { echo 'World'; } } trait HelloWorld { use Hello, World; } class MyHelloWorld { use HelloWorld; } $o = new MyHelloWorld(); $o-&amp;gt;sayHello(); $o-&amp;gt;sayWorld(); Anggota Trait Abstract Trait mendukung penggunaan abstract method untuk memaksa kebutuhan pada class yang menggunakan trait. Contoh abstract method &amp;lt;?php trait Hello { public function sayHelloWorld() { echo 'Hello' . $this-&amp;gt;getWorld(); } abstract public function getWorld(); } class MyHelloWorld { private $world; use Hello; public function getWorld() { return $this-&amp;gt;world; } public function setWorld($val) { $this-&amp;gt;world = $val; } } Anggota Static Trait Trait dapat mendefinisikan static property dan static method Contoh static variabel &amp;lt;?php trait Counter { public function inc() { static $c = 0; $c = $c + 1; echo &quot;$c\n&quot;; } } class C1 { use Counter; } class C2 { use Counter; } $o = new C1(); $o-&amp;gt;inc(); // echo 1 $p = new C2(); $p-&amp;gt;inc(); // echo 1 Contoh static method &amp;lt;?php trait StaticExample { public static function doSomething() { return 'Doing Something'; } } class Example { use StaticExample; } Example::doSomething(); Property Di dalam Trait kita juga dapat mendefinisikan property sama seperti pada klas. Contoh trait PropertiesTrait { public $x = 1; } class PropertiesExample { use PropertiesTrait; } $ex = new PropertiesExample(); $ex-&amp;gt;x; sekian. sumber: php.net</summary></entry><entry><title type="html">Default run pada cargo run</title><link href="http://localhost:4040/rust/2020/05/22/default-run-pada-cargo-run.html" rel="alternate" type="text/html" title="Default run pada cargo run" /><published>2020-05-22T08:00:00+07:00</published><updated>2020-05-22T08:00:00+07:00</updated><id>http://localhost:4040/rust/2020/05/22/default-run-pada-cargo-run</id><content type="html" xml:base="http://localhost:4040/rust/2020/05/22/default-run-pada-cargo-run.html">&lt;p&gt;Sebelumnya pada postingan tentang &lt;a href=&quot;/rust/2020/04/18/cargo-run-multi-binary.html&quot;&gt;Cargo run multi binary&lt;/a&gt; saya mencontohkan bagaimana menjalankan binary khusus menggunakan &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo run&lt;/code&gt;, sehingga kita bisa bikin aplikasi secara terpisah berdasarkan nama file.&lt;/p&gt;

&lt;p&gt;Kenapa menggunakan multi binary pada saat menjalankan &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo run&lt;/code&gt; ?. Karena code &lt;code class=&quot;highlighter-rouge&quot;&gt;fn main()&lt;/code&gt; dapat digunakan pada setiap file.&lt;/p&gt;

&lt;p&gt;Nah pada artikel sebelumnya saya tidak menjelaskan bagaimana kalau kita menjalankan &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo run&lt;/code&gt; tanpa parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;--bin nama&lt;/code&gt;?, ternyata cargo akan menampilkan pesan error bahwa tidak ada default run binary yang harus dijalankan ketika parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;--bin&lt;/code&gt; tidak disertakan.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cargo run
error: &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;cargo run&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; could not determine which binary to run. 
Use the &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--bin&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; option to specify a binary, or the &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;default-run&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; manifest key.
available binaries: main, basic, simple_server&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Untuk itu kita perlu mendefinisikan juga untuk file &lt;code class=&quot;highlighter-rouge&quot;&gt;main.rs&lt;/code&gt; sebagai default jika kita menjalankan &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo run&lt;/code&gt; tanpa parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;--bin&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;[package]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;rabbit&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;authors&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Name &amp;lt;name@example.com&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;edition&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;2018&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;default-run&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;main&quot;&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;[[bin]]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;main&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;src/main.rs&quot;&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;[[bin]]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;publisher&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;src/publisher.rs&quot;&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;[[bin]]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;subscriber&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;src/subscriber.rs&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Dapat dilihat bahwa kita menambahkan keyword &lt;code class=&quot;highlighter-rouge&quot;&gt;default-run&lt;/code&gt; pada section &lt;code class=&quot;highlighter-rouge&quot;&gt;package&lt;/code&gt; untuk memberitahu cargo file mana yang akan dijadikan bootstrap pada saat perintah &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo run&lt;/code&gt; dijalankan tanpa parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;--bin&lt;/code&gt;. Dan juga membuat definisi khusus untuk file &lt;code class=&quot;highlighter-rouge&quot;&gt;main.rs&lt;/code&gt; dengan nama &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;[package]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;default-run&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;main&quot;&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;[[bin]]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;main&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;src/main.rs&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Setelah kita menambahkan default-run maka cargo tidak akan komplain pada saat menjalankan &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo run&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cargo run     
Finished dev &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;unoptimized + debuginfo] target&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.06s
Running &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;target/debug/main&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
Hello, world!&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Sekian.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Sebelumnya pada postingan tentang Cargo run multi binary saya mencontohkan bagaimana menjalankan binary khusus menggunakan cargo run, sehingga kita bisa bikin aplikasi secara terpisah berdasarkan nama file. Kenapa menggunakan multi binary pada saat menjalankan cargo run ?. Karena code fn main() dapat digunakan pada setiap file. Nah pada artikel sebelumnya saya tidak menjelaskan bagaimana kalau kita menjalankan cargo run tanpa parameter --bin nama?, ternyata cargo akan menampilkan pesan error bahwa tidak ada default run binary yang harus dijalankan ketika parameter --bin tidak disertakan. $ cargo run error: `cargo run` could not determine which binary to run. Use the `--bin` option to specify a binary, or the `default-run` manifest key. available binaries: main, basic, simple_server Untuk itu kita perlu mendefinisikan juga untuk file main.rs sebagai default jika kita menjalankan cargo run tanpa parameter --bin. [package] name = &quot;rabbit&quot; version = &quot;0.1.0&quot; authors = [&quot;Name &amp;lt;name@example.com&amp;gt;&quot;] edition = &quot;2018&quot; default-run = &quot;main&quot; [[bin]] name = &quot;main&quot; path = &quot;src/main.rs&quot; [[bin]] name = &quot;publisher&quot; path = &quot;src/publisher.rs&quot; [[bin]] name = &quot;subscriber&quot; path = &quot;src/subscriber.rs&quot; Dapat dilihat bahwa kita menambahkan keyword default-run pada section package untuk memberitahu cargo file mana yang akan dijadikan bootstrap pada saat perintah cargo run dijalankan tanpa parameter --bin. Dan juga membuat definisi khusus untuk file main.rs dengan nama main. [package] default-run = &quot;main&quot; [[bin]] name = &quot;main&quot; path = &quot;src/main.rs&quot; Setelah kita menambahkan default-run maka cargo tidak akan komplain pada saat menjalankan cargo run. $ cargo run Finished dev [unoptimized + debuginfo] target(s) in 0.06s Running `target/debug/main` Hello, world! Sekian.</summary></entry><entry><title type="html">Link Internal Post pada Artikel di Jekyll</title><link href="http://localhost:4040/ruby/2020/05/21/link-internal-post-pada-artikel-di-jekyll.html" rel="alternate" type="text/html" title="Link Internal Post pada Artikel di Jekyll" /><published>2020-05-21T08:00:00+07:00</published><updated>2020-05-21T08:00:00+07:00</updated><id>http://localhost:4040/ruby/2020/05/21/link-internal-post-pada-artikel-di-jekyll</id><content type="html" xml:base="http://localhost:4040/ruby/2020/05/21/link-internal-post-pada-artikel-di-jekyll.html">&lt;p&gt;Saya ingin berbagi tips singkat bagaimana membuat link yang merujuk ke &lt;code class=&quot;highlighter-rouge&quot;&gt;internal post&lt;/code&gt; di jekyll. Contoh berikut ini untuk postingan bertipe markdown.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Judul&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]({&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% post_url &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;05&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;judul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Perlu diperhatikan bahwa nama artikel setelah variabel &lt;code class=&quot;highlighter-rouge&quot;&gt;post_url&lt;/code&gt; harus benar dan artikelnya ada. Dan semua kata dipisah dengan tanda dash(-).&lt;/p&gt;

&lt;p&gt;Sekian, semoga bermanfaat.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Saya ingin berbagi tips singkat bagaimana membuat link yang merujuk ke internal post di jekyll. Contoh berikut ini untuk postingan bertipe markdown. [Judul Post]({% post_url 2020-05-15-judul-post %}) Perlu diperhatikan bahwa nama artikel setelah variabel post_url harus benar dan artikelnya ada. Dan semua kata dipisah dengan tanda dash(-). Sekian, semoga bermanfaat.</summary></entry><entry><title type="html">Passing argument to app when using cargo run</title><link href="http://localhost:4040/rust/2020/05/19/passing-argument-to-app-when-using-cargo-run.html" rel="alternate" type="text/html" title="Passing argument to app when using cargo run" /><published>2020-05-19T03:00:00+07:00</published><updated>2020-05-19T03:00:00+07:00</updated><id>http://localhost:4040/rust/2020/05/19/passing-argument-to-app-when-using-cargo-run</id><content type="html" xml:base="http://localhost:4040/rust/2020/05/19/passing-argument-to-app-when-using-cargo-run.html">&lt;p&gt;Pernahkah membuat aplikasi cli dengan clap kemudian ingin menjalankan dengan &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo run --help&lt;/code&gt; tetapi output yang keluar malah helpnya dari cargo ?. Ternyata cargo punya syntax agar argument yang kita lewatkan ditujukan ke aplikasi bukan untuk cargo. Cukup tambahkan &lt;code class=&quot;highlighter-rouge&quot;&gt;--&lt;/code&gt; sebelum argument yang ada pada aplikasi.&lt;/p&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cargo run &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--help&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cargo run &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;app.toml &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Maka argument setelah setelah tanda &lt;code class=&quot;highlighter-rouge&quot;&gt;--&lt;/code&gt; hanya akan diproses oleh aplikasi yang kita kembangkan.&lt;/p&gt;

&lt;p&gt;Sekian, semoga bermanfaat.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Pernahkah membuat aplikasi cli dengan clap kemudian ingin menjalankan dengan cargo run --help tetapi output yang keluar malah helpnya dari cargo ?. Ternyata cargo punya syntax agar argument yang kita lewatkan ditujukan ke aplikasi bukan untuk cargo. Cukup tambahkan -- sebelum argument yang ada pada aplikasi. Contoh: $ cargo run -- --help $ cargo run -- --config=app.toml -v Maka argument setelah setelah tanda -- hanya akan diproses oleh aplikasi yang kita kembangkan. Sekian, semoga bermanfaat.</summary></entry><entry><title type="html">Cara Aman Mendapatkan data dari POST/GET pada Yii2</title><link href="http://localhost:4040/yii2/2020/05/15/cara-aman-mendapatkan-data-dari-post-get-pada-yii2.html" rel="alternate" type="text/html" title="Cara Aman Mendapatkan data dari POST/GET pada Yii2" /><published>2020-05-15T04:00:00+07:00</published><updated>2020-05-15T04:00:00+07:00</updated><id>http://localhost:4040/yii2/2020/05/15/cara-aman-mendapatkan-data-dari-post-get-pada-yii2</id><content type="html" xml:base="http://localhost:4040/yii2/2020/05/15/cara-aman-mendapatkan-data-dari-post-get-pada-yii2.html">&lt;p&gt;Yii2 menyertakan fungsi-fungsi yang biasa sering kita gunakan secara lengkap dan aman, biasanya kita sering menggunakan fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;$_GET['nama_var']&lt;/code&gt; dan &lt;code class=&quot;highlighter-rouge&quot;&gt;$_POST['nama_var']&lt;/code&gt; untuk mendapatkan data dari user yang dikirim melalui post/get. namun cara tersebut kurang aman karena tidak adanya nilai default jika variabelnya kosong.&lt;/p&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;SELECT * FROM user WHERE id = &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Agar variabel &lt;code class=&quot;highlighter-rouge&quot;&gt;$id&lt;/code&gt; lebih aman maka gunakan fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;get&lt;/code&gt; atau &lt;code class=&quot;highlighter-rouge&quot;&gt;post&lt;/code&gt; yang terdapat pada class &lt;code class=&quot;highlighter-rouge&quot;&gt;yii\web\Request&lt;/code&gt; yang secara global terdapat pada &lt;code class=&quot;highlighter-rouge&quot;&gt;Yii::$app-&amp;gt;request&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Yii&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Atau bisa ditambahkan kondisi untuk memeriksa variabel id&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// if ((int)$id &amp;lt; 1) {&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//     throw new \yii\web\HttpException(403, 'ID tidak benar');&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// }&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;SELECT * FROM user WHERE id = &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Untuk query-nya agar lebih aman biasakan pakai punyanya Yii2 yaitu class &lt;code class=&quot;highlighter-rouge&quot;&gt;yii\db\Command&lt;/code&gt; atau &lt;code class=&quot;highlighter-rouge&quot;&gt;yii\db\Query&lt;/code&gt; karena minim kemungkinan terkena SQLInjection.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Yii&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Yii&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;db&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'SELECT * FROM user WHERE id = :id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;':id'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;queryOne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Untuk variabel &lt;code class=&quot;highlighter-rouge&quot;&gt;$_POST&lt;/code&gt; juga sama dengan get, tinggal ganti fungsi get dengan post.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Yii&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Demikian semoga dapat bermanfaat dan terima kasih sudah mampir ke blog saya ini.&lt;/p&gt;

&lt;p&gt;Sekian.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Yii2 menyertakan fungsi-fungsi yang biasa sering kita gunakan secara lengkap dan aman, biasanya kita sering menggunakan fungsi $_GET['nama_var'] dan $_POST['nama_var'] untuk mendapatkan data dari user yang dikirim melalui post/get. namun cara tersebut kurang aman karena tidak adanya nilai default jika variabelnya kosong. Contoh: $id = $_GET['id']; $query = &quot;SELECT * FROM user WHERE id = $id&quot;; Agar variabel $id lebih aman maka gunakan fungsi get atau post yang terdapat pada class yii\web\Request yang secara global terdapat pada Yii::$app-&amp;gt;request. $id = Yii::$app-&amp;gt;request-&amp;gt;get('id', 0); // Atau bisa ditambahkan kondisi untuk memeriksa variabel id // if ((int)$id &amp;lt; 1) { // throw new \yii\web\HttpException(403, 'ID tidak benar'); // } $query = &quot;SELECT * FROM user WHERE id = $id&quot;; Untuk query-nya agar lebih aman biasakan pakai punyanya Yii2 yaitu class yii\db\Command atau yii\db\Query karena minim kemungkinan terkena SQLInjection. $id = Yii::$app-&amp;gt;request-&amp;gt;get('id', 0); $result = Yii::$app-&amp;gt;db -&amp;gt;createCommand('SELECT * FROM user WHERE id = :id', [':id' =&amp;gt; $id]) -&amp;gt;queryOne(); Untuk variabel $_POST juga sama dengan get, tinggal ganti fungsi get dengan post. $id = Yii::$app-&amp;gt;request-&amp;gt;post('id', 0); Demikian semoga dapat bermanfaat dan terima kasih sudah mampir ke blog saya ini. Sekian.</summary></entry><entry><title type="html">Mengenal Tipe Data Dasar pada Rust</title><link href="http://localhost:4040/rust/2020/05/15/mengenal-tipe-data-dasar-pada-rust.html" rel="alternate" type="text/html" title="Mengenal Tipe Data Dasar pada Rust" /><published>2020-05-15T03:00:00+07:00</published><updated>2020-05-15T03:00:00+07:00</updated><id>http://localhost:4040/rust/2020/05/15/mengenal-tipe-data-dasar-pada-rust</id><content type="html" xml:base="http://localhost:4040/rust/2020/05/15/mengenal-tipe-data-dasar-pada-rust.html">&lt;p&gt;Rust memiliki beberapa tipe data dasar antara lain&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;booleans - &lt;code class=&quot;highlighter-rouge&quot;&gt;bool&lt;/code&gt; untuk data berupa benar/salah true dan false&lt;/li&gt;
  &lt;li&gt;integer tak bertanda - &lt;code class=&quot;highlighter-rouge&quot;&gt;u8&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;u32&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;u64&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;u128&lt;/code&gt; untuk mewakili bilangan bulat positif&lt;/li&gt;
  &lt;li&gt;integer bertanda - &lt;code class=&quot;highlighter-rouge&quot;&gt;i8&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;i32&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;i64&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;i128&lt;/code&gt; untuk mewakili bilangan bulat positif dan negatif&lt;/li&gt;
  &lt;li&gt;pointer sized integer - &lt;code class=&quot;highlighter-rouge&quot;&gt;usize&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;isize&lt;/code&gt; untuk mewakili data yang berindex dan memiliki ukuran dimemori&lt;/li&gt;
  &lt;li&gt;bilangan pecah - &lt;code class=&quot;highlighter-rouge&quot;&gt;f32&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;f64&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;terkait text - &lt;code class=&quot;highlighter-rouge&quot;&gt;str&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;chr&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;tuple - &lt;code class=&quot;highlighter-rouge&quot;&gt;(value, value, ...)&lt;/code&gt; untuk data berurutan dengan ukuran tetap&lt;/li&gt;
  &lt;li&gt;slices - &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;[T]&lt;/code&gt; untuk mewakili data berurutan pada memori atau biasa dikenal dengan nama array/larik&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Untuk tipe data text mungkin akan lebih komplek dari pada yang biasa kamu gunakan pada bahasa pemrogramana lain dan tidak akan dibahas disini.&lt;/p&gt;

&lt;p&gt;Catatan bahwa tipe data numerik dapat ditulis tipenya secara eksplisit dengan menambahkan tipe setelah angka. (contoh: 12u32)&lt;/p&gt;

&lt;p&gt;Contoh kodenya&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angka&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nama&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Agus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Untuk membuat variabel Rust memiliki keyword &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt; yang berguna untuk mendefinisikan variabel dan default variabelnya immutable atau tidak dapat dirubah.&lt;/p&gt;

&lt;p&gt;Rust memiliki fitur Type Inference yang sangat berguna bagi pengembang, jadi kita boleh membuat variabel tanpa menyebutkan tipe datanya seperti pada contoh di atas.&lt;/p&gt;

&lt;p&gt;Contoh kode lengkap:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angka&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// defaultnya i32&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nama&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Agus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// defaultnya &amp;amp;str&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angka_lain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20u32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;usize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1u&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jutaan&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1_000_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bil_pecah&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;f64&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello world!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tuple&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slices&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{} {} {} {} {} {} {} {:?} {:?}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;angka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;nama&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;angka_lain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;memsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jutaan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bil_pecah&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tuple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;slices&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Pada variabel &lt;code class=&quot;highlighter-rouge&quot;&gt;jutaan&lt;/code&gt; di atas Rust juga membolehkan menulis angka dengan menambahkan underscore agar angka lebih mudah terbaca.&lt;/p&gt;

&lt;p&gt;Selain tipe data yang saya sebutkan di atas Rust masih memiliki tipe data lain seperti &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Vector&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;HashMap&lt;/code&gt;. Insya Allah pada kesempatan berikutnya saya akan membahasa tentang konversi dari tipe data satu ke tipe data lain dan juga tentang &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;str&lt;/code&gt; dan &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Semoga pengenalan tipe data ini dapat bermanfaat. sekian.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Rust memiliki beberapa tipe data dasar antara lain booleans - bool untuk data berupa benar/salah true dan false integer tak bertanda - u8, u32, u64, u128 untuk mewakili bilangan bulat positif integer bertanda - i8, i32, i64, i128 untuk mewakili bilangan bulat positif dan negatif pointer sized integer - usize, isize untuk mewakili data yang berindex dan memiliki ukuran dimemori bilangan pecah - f32, f64 terkait text - str, chr tuple - (value, value, ...) untuk data berurutan dengan ukuran tetap slices - &amp;amp;[T] untuk mewakili data berurutan pada memori atau biasa dikenal dengan nama array/larik Untuk tipe data text mungkin akan lebih komplek dari pada yang biasa kamu gunakan pada bahasa pemrogramana lain dan tidak akan dibahas disini. Catatan bahwa tipe data numerik dapat ditulis tipenya secara eksplisit dengan menambahkan tipe setelah angka. (contoh: 12u32) Contoh kodenya let angka = 10; let nama = &quot;Agus&quot;; Untuk membuat variabel Rust memiliki keyword let yang berguna untuk mendefinisikan variabel dan default variabelnya immutable atau tidak dapat dirubah. Rust memiliki fitur Type Inference yang sangat berguna bagi pengembang, jadi kita boleh membuat variabel tanpa menyebutkan tipe datanya seperti pada contoh di atas. Contoh kode lengkap: let angka = 10; // defaultnya i32 let nama = &quot;Agus&quot;; // defaultnya &amp;amp;str let angka_lain = 20u32; let memsize: usize = 1usize; let jutaan = 1_000_000; let bil_pecah: f64 = 1.00; let hello: String = String::from(&quot;Hello world!&quot;); let tuple = (1, 2, 3); let slices = &amp;amp;[1, 2, 3]; println!(&quot;{} {} {} {} {} {} {} {:?} {:?}&quot;, angka, nama, angka_lain, memsize, jutaan, bil_pecah, hello, tuple, slices ); Pada variabel jutaan di atas Rust juga membolehkan menulis angka dengan menambahkan underscore agar angka lebih mudah terbaca. Selain tipe data yang saya sebutkan di atas Rust masih memiliki tipe data lain seperti String, Vector, HashMap. Insya Allah pada kesempatan berikutnya saya akan membahasa tentang konversi dari tipe data satu ke tipe data lain dan juga tentang &amp;amp;str dan String Semoga pengenalan tipe data ini dapat bermanfaat. sekian.</summary></entry><entry><title type="html">Mengenal Bahasa Pemrograman Rust</title><link href="http://localhost:4040/rust/2020/05/14/mengenal-bahasa-pemrograman-rust.html" rel="alternate" type="text/html" title="Mengenal Bahasa Pemrograman Rust" /><published>2020-05-14T08:00:00+07:00</published><updated>2020-05-14T08:00:00+07:00</updated><id>http://localhost:4040/rust/2020/05/14/mengenal-bahasa-pemrograman-rust</id><content type="html" xml:base="http://localhost:4040/rust/2020/05/14/mengenal-bahasa-pemrograman-rust.html">&lt;p&gt;Rust adalah bahasa pemrograman multi-paradigma yang fokus pada performa dan keamanan terutama &lt;code class=&quot;highlighter-rouge&quot;&gt;safe concurrency&lt;/code&gt;, 
Rust secara syntax mirip C++ tetapi menyediakan kemanan memory tanpa menggunakan Garbage Collector pada pengelolaan memorinya. (wikipedia)&lt;/p&gt;

&lt;p&gt;Menurut website resmi rust-lang.org yang lama, rust adalah&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;itu artinya Rust berjalan sangat cepat, mencegah segfaults dan menjamin keamanan thread tanpa garbage collector.&lt;/p&gt;

&lt;p&gt;dengan beberapa fitur seperti&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;zero-cost abstractions&lt;/li&gt;
  &lt;li&gt;move semantics&lt;/li&gt;
  &lt;li&gt;guaranteed memory safety&lt;/li&gt;
  &lt;li&gt;threads without data races&lt;/li&gt;
  &lt;li&gt;trait-based generics&lt;/li&gt;
  &lt;li&gt;pattern matching&lt;/li&gt;
  &lt;li&gt;type inference&lt;/li&gt;
  &lt;li&gt;minimal runtime&lt;/li&gt;
  &lt;li&gt;efficient C bindings&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;menginstall-rust&quot;&gt;Menginstall Rust&lt;/h3&gt;

&lt;p&gt;Salah satu yang membuat saya tertarik termasuk pada instalasinya yang sangat mudah dan rust juga menyediakan &lt;a href=&quot;https://play.rust-lang.org/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Rust Playground&lt;/code&gt;&lt;/a&gt; sebagai tempat mencoba kode rust tanpa harus menginstal dikomputermu.&lt;/p&gt;

&lt;h4 id=&quot;rustup-installer-rust-dan-alat-pengelola-versi&quot;&gt;Rustup: Installer rust dan alat pengelola versi&lt;/h4&gt;

&lt;p&gt;Cara install paling adalah mudah adalah menggunakan rustup yang merupakan installer resmi dari rust-lang. Installer ini mendukung 3 sistem operasi seperti linux, mac dan windows. Jika kamu menggunakan sistem operasi berbasis unix, cukup copas kode berikut ke terminal Anda&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;curl &lt;span class=&quot;nt&quot;&gt;--proto&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'=https'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--tlsv1&lt;/span&gt;.2 &lt;span class=&quot;nt&quot;&gt;-sSf&lt;/span&gt; https://sh.rustup.rs | sh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Jika kamu menggunakan windows 64bit download dan jalankan file berikut &lt;a href=&quot;https://win.rustup.rs/x86_64&quot;&gt;rustup-init.exe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Jika kamu menggunakan windows 32bit download dan jalankan file berikut &lt;a href=&quot;https://win.rustup.rs/i686&quot;&gt;rustup-init.exe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Setelah instalasi selesai kamu bisa memeriksa di terminal untuk memastikan apakah Rust sudah terinstall atau belum dengan mengetik perintah berikut ini, jika outputnya seperti pada gambar berikut ini maka instalasi Rust sukses.
&lt;img src=&quot;/assets/img/20200406-rustup-show.png&quot; alt=&quot;rustup-show&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;hello-world&quot;&gt;Hello World&lt;/h4&gt;

&lt;p&gt;Untuk pengenalan dasar rust kita akan membuat aplikasi sederhana yang hanya akan mencetak tulisan &lt;code class=&quot;highlighter-rouge&quot;&gt;Hello World&lt;/code&gt; pada konsole.&lt;/p&gt;

&lt;p&gt;Buat file dengan &lt;code class=&quot;highlighter-rouge&quot;&gt;hello.rs&lt;/code&gt; kemudian ketikan kode seperti berikut ini.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Kemudian kompile dengan mengetikan perintah berikut ini pada terminal.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rustc hello.rs&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Lalu jalankan dengan perintah&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./hello
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;Hello World&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;cargo&quot;&gt;Cargo&lt;/h4&gt;

&lt;p&gt;Untuk aplikasi sederhana penggunaan file tunggal tidak ada masalah namun untuk aplikasi besar disarankan untuk menggunakan aplikasi bernama &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo&lt;/code&gt; adalah alat untuk membangun aplikasi dan pengelola paket bawaan dari Rust. Dengan adanya cargo membuat aplikasi kecil ataupun besar menjadi mudah.&lt;/p&gt;

&lt;p&gt;Nah untuk pengenalan kita akan membuat aplikasi sederhana dengan menggunakan cargo dan aplikasi ini hanya akan mencetak &lt;code class=&quot;highlighter-rouge&quot;&gt;Hello, world!&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ok berikut ini perintah dari cargo yang akan kita gunakan&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt; untuk membuat project baru&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt; untuk menjalankan project&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Buat project dengan nama &lt;code class=&quot;highlighter-rouge&quot;&gt;hello_rust&lt;/code&gt; dengan mengetik perintah berikut ini ke terminal&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cargo new hello_rust&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Maka cargo akan mengenerate-kan project seperti ini&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;hello_rust
|-- Cargo.toml
|-- src
   |-- main.rs&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Cargo.toml&lt;/code&gt; adalah file manifest dari Rust, dimana menyimpan metadata project kita dan dependecy-nya.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;main.rs&lt;/code&gt; adalah file dimana aplikasi kita akan ditulis.&lt;/p&gt;

&lt;p&gt;Kita langsung bisa menjalankan aplikasi dengan mengetik&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cargo run
   Compiling hello_rust v0.1.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/tmp/hello_rust&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    Finished dev &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;unoptimized + debuginfo] target&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.63s
     Running &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;target/debug/hello_rust&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
Hello, world!&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Cukup sekian dari saya tentang pengenalan bahasa pemrograman Rust, semoga bermanfaat.&lt;/p&gt;

&lt;p&gt;Jika kamu berkenan membaca artikel dengan bahasa inggris saya sarankan langsung ke &lt;a href=&quot;https://www.rust-lang.org/learn&quot;&gt;website resmi rust&lt;/a&gt; untuk mempelajari lebih lanjut tentang rust&lt;/p&gt;

&lt;p&gt;Wassalam.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Rust adalah bahasa pemrograman multi-paradigma yang fokus pada performa dan keamanan terutama safe concurrency, Rust secara syntax mirip C++ tetapi menyediakan kemanan memory tanpa menggunakan Garbage Collector pada pengelolaan memorinya. (wikipedia) Menurut website resmi rust-lang.org yang lama, rust adalah Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety. itu artinya Rust berjalan sangat cepat, mencegah segfaults dan menjamin keamanan thread tanpa garbage collector. dengan beberapa fitur seperti zero-cost abstractions move semantics guaranteed memory safety threads without data races trait-based generics pattern matching type inference minimal runtime efficient C bindings Menginstall Rust Salah satu yang membuat saya tertarik termasuk pada instalasinya yang sangat mudah dan rust juga menyediakan Rust Playground sebagai tempat mencoba kode rust tanpa harus menginstal dikomputermu. Rustup: Installer rust dan alat pengelola versi Cara install paling adalah mudah adalah menggunakan rustup yang merupakan installer resmi dari rust-lang. Installer ini mendukung 3 sistem operasi seperti linux, mac dan windows. Jika kamu menggunakan sistem operasi berbasis unix, cukup copas kode berikut ke terminal Anda curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh Jika kamu menggunakan windows 64bit download dan jalankan file berikut rustup-init.exe Jika kamu menggunakan windows 32bit download dan jalankan file berikut rustup-init.exe Setelah instalasi selesai kamu bisa memeriksa di terminal untuk memastikan apakah Rust sudah terinstall atau belum dengan mengetik perintah berikut ini, jika outputnya seperti pada gambar berikut ini maka instalasi Rust sukses. Hello World Untuk pengenalan dasar rust kita akan membuat aplikasi sederhana yang hanya akan mencetak tulisan Hello World pada konsole. Buat file dengan hello.rs kemudian ketikan kode seperti berikut ini. fn main() { println!(&quot;Hello World&quot;); } Kemudian kompile dengan mengetikan perintah berikut ini pada terminal. $ rustc hello.rs Lalu jalankan dengan perintah $ ./hello $ Hello World Cargo Untuk aplikasi sederhana penggunaan file tunggal tidak ada masalah namun untuk aplikasi besar disarankan untuk menggunakan aplikasi bernama cargo. cargo adalah alat untuk membangun aplikasi dan pengelola paket bawaan dari Rust. Dengan adanya cargo membuat aplikasi kecil ataupun besar menjadi mudah. Nah untuk pengenalan kita akan membuat aplikasi sederhana dengan menggunakan cargo dan aplikasi ini hanya akan mencetak Hello, world!. Ok berikut ini perintah dari cargo yang akan kita gunakan new untuk membuat project baru run untuk menjalankan project Buat project dengan nama hello_rust dengan mengetik perintah berikut ini ke terminal $ cargo new hello_rust Maka cargo akan mengenerate-kan project seperti ini hello_rust |-- Cargo.toml |-- src |-- main.rs Cargo.toml adalah file manifest dari Rust, dimana menyimpan metadata project kita dan dependecy-nya. main.rs adalah file dimana aplikasi kita akan ditulis. Kita langsung bisa menjalankan aplikasi dengan mengetik $ cargo run Compiling hello_rust v0.1.0 (/tmp/hello_rust) Finished dev [unoptimized + debuginfo] target(s) in 0.63s Running `target/debug/hello_rust` Hello, world! Cukup sekian dari saya tentang pengenalan bahasa pemrograman Rust, semoga bermanfaat. Jika kamu berkenan membaca artikel dengan bahasa inggris saya sarankan langsung ke website resmi rust untuk mempelajari lebih lanjut tentang rust Wassalam.</summary></entry><entry><title type="html">Cargo run multi binary</title><link href="http://localhost:4040/rust/2020/04/18/cargo-run-multi-binary.html" rel="alternate" type="text/html" title="Cargo run multi binary" /><published>2020-04-18T08:00:00+07:00</published><updated>2020-04-18T08:00:00+07:00</updated><id>http://localhost:4040/rust/2020/04/18/cargo-run-multi-binary</id><content type="html" xml:base="http://localhost:4040/rust/2020/04/18/cargo-run-multi-binary.html">&lt;p&gt;Pada saat kita menjalankan &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo run&lt;/code&gt; maka secara default &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo&lt;/code&gt; akan mencari file dengan nama &lt;code class=&quot;highlighter-rouge&quot;&gt;main.rs&lt;/code&gt;, bagaimana jika kita ingin menjalankan aplikasi yang berbeda nama file, misal kita ingin agar cargo dapat menjalankan file &lt;code class=&quot;highlighter-rouge&quot;&gt;publisher.rs&lt;/code&gt; atau &lt;code class=&quot;highlighter-rouge&quot;&gt;subscriber.rs&lt;/code&gt; pada saat kita ketik perintah &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo run&lt;/code&gt;. Maka kita bisa menggunakan parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;--bin nama_binary&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cargo run &lt;span class=&quot;nt&quot;&gt;--bin&lt;/span&gt; publisher
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cargo run &lt;span class=&quot;nt&quot;&gt;--bin&lt;/span&gt; subscriber&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Agar cargo mengenali pada saat kita menambahkan parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;--bin nama_binary&lt;/code&gt; maka perlu ditambahkan setingan pada file &lt;code class=&quot;highlighter-rouge&quot;&gt;Cargo.toml&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;[package]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;rabbit&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;authors&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Name &amp;lt;name@example.com&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;edition&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;2018&quot;&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;[[bin]]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;publisher&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;src/publisher.rs&quot;&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;[[bin]]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;subscriber&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;src/subscriber.rs&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Dengan begini cargo akan mengetahui binary mana yang harus dijalankan selain pada &lt;code class=&quot;highlighter-rouge&quot;&gt;main.rs&lt;/code&gt;. Kita dapat mendefinisikan nama binary sebanyak mungkin.&lt;/p&gt;

&lt;p&gt;Sekian, semoga bermanfaat.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Pada saat kita menjalankan cargo run maka secara default cargo akan mencari file dengan nama main.rs, bagaimana jika kita ingin menjalankan aplikasi yang berbeda nama file, misal kita ingin agar cargo dapat menjalankan file publisher.rs atau subscriber.rs pada saat kita ketik perintah cargo run. Maka kita bisa menggunakan parameter --bin nama_binary: $ cargo run --bin publisher $ cargo run --bin subscriber Agar cargo mengenali pada saat kita menambahkan parameter --bin nama_binary maka perlu ditambahkan setingan pada file Cargo.toml. [package] name = &quot;rabbit&quot; version = &quot;0.1.0&quot; authors = [&quot;Name &amp;lt;name@example.com&amp;gt;&quot;] edition = &quot;2018&quot; [[bin]] name = &quot;publisher&quot; path = &quot;src/publisher.rs&quot; [[bin]] name = &quot;subscriber&quot; path = &quot;src/subscriber.rs&quot; Dengan begini cargo akan mengetahui binary mana yang harus dijalankan selain pada main.rs. Kita dapat mendefinisikan nama binary sebanyak mungkin. Sekian, semoga bermanfaat.</summary></entry><entry><title type="html">Setting PATH linux pada shell zsh</title><link href="http://localhost:4040/linux/2020/04/18/setting-path-linux-pada-shell-zsh.html" rel="alternate" type="text/html" title="Setting PATH linux pada shell zsh" /><published>2020-04-18T08:00:00+07:00</published><updated>2020-04-18T08:00:00+07:00</updated><id>http://localhost:4040/linux/2020/04/18/setting-path-linux-pada-shell-zsh</id><content type="html" xml:base="http://localhost:4040/linux/2020/04/18/setting-path-linux-pada-shell-zsh.html">&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt; merupakan variabel shell yang akan menjadi acuan saat kita menjalankan perintah pada terminal dilinux. Shell akan mencari file binary dengan melihat variabel PATH. Misal kita ingin membuat custom command dengan program bash sederhana yang akan menjalankan aplikasi composer tanpa harus harus menyebut command php. contoh:&lt;/p&gt;

&lt;p&gt;simpan dengan nama &lt;code class=&quot;highlighter-rouge&quot;&gt;composer&lt;/code&gt; dan letakkan di $HOME/bin&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

php &lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.local/bin/composer.phar &lt;span class=&quot;nv&quot;&gt;$*&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Agar command &lt;code class=&quot;highlighter-rouge&quot;&gt;composer&lt;/code&gt; yang kita buat di atas dapat dijalankan difolder mana saja maka perlu kita tambahkan pada variabel &lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt;. untuk shell bash bisa kita tambahkan pada file &lt;code class=&quot;highlighter-rouge&quot;&gt;$HOME/.bashrc&lt;/code&gt; atau &lt;code class=&quot;highlighter-rouge&quot;&gt;$HOME/.bash_profile&lt;/code&gt; dan untuk shell zsh semua setingan ada pada lokasi &lt;code class=&quot;highlighter-rouge&quot;&gt;$HOME/.zshrc&lt;/code&gt; atau &lt;code class=&quot;highlighter-rouge&quot;&gt;$HOME/.zprofile&lt;/code&gt;, Kita tinggal menambahkan dengan syntax seperti berikut ini&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/bin:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Kemudian agar zsh/ bash mereload file konfigurasi baru gunakan perintah &lt;code class=&quot;highlighter-rouge&quot;&gt;source ~/.zshrc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;sekian&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">PATH merupakan variabel shell yang akan menjadi acuan saat kita menjalankan perintah pada terminal dilinux. Shell akan mencari file binary dengan melihat variabel PATH. Misal kita ingin membuat custom command dengan program bash sederhana yang akan menjalankan aplikasi composer tanpa harus harus menyebut command php. contoh: simpan dengan nama composer dan letakkan di $HOME/bin #!/bin/bash php $HOME/.local/bin/composer.phar $* Agar command composer yang kita buat di atas dapat dijalankan difolder mana saja maka perlu kita tambahkan pada variabel PATH. untuk shell bash bisa kita tambahkan pada file $HOME/.bashrc atau $HOME/.bash_profile dan untuk shell zsh semua setingan ada pada lokasi $HOME/.zshrc atau $HOME/.zprofile, Kita tinggal menambahkan dengan syntax seperti berikut ini export PATH=$HOME/bin:$PATH Kemudian agar zsh/ bash mereload file konfigurasi baru gunakan perintah source ~/.zshrc. sekian</summary></entry></feed>