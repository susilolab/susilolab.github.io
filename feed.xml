<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://susilolab.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://susilolab.github.io/" rel="alternate" type="text/html" /><updated>2023-12-23T23:48:02+07:00</updated><id>https://susilolab.github.io/feed.xml</id><title type="html">susilolab</title><subtitle>&quot;Sebaik-baik manusia adalah yang paling bermanfaat bagi manusia&quot; (HR. Ahmad, ath-Thabrani, ad-Daruqutni)</subtitle><author><name>Agus Susilo</name></author><entry><title type="html">Scaling PHP Application</title><link href="https://susilolab.github.io/php/2023/12/23/scaling-php-performance.html" rel="alternate" type="text/html" title="Scaling PHP Application" /><published>2023-12-23T07:00:00+07:00</published><updated>2023-12-23T07:00:00+07:00</updated><id>https://susilolab.github.io/php/2023/12/23/scaling-php-performance</id><content type="html" xml:base="https://susilolab.github.io/php/2023/12/23/scaling-php-performance.html">&lt;p&gt;Hari ini saya ingin ngobrol tentang performa aplikasi yang dibuat dengan bahasa &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PHP&lt;/code&gt; karena ditempat kerja 
saya sedang membicarakan tentang berapa banyak pengguna yang dapat online sekaligus pada aplikasi kami. Benarkah aplikasi &lt;strong&gt;PHP&lt;/strong&gt; bisa discale up?
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;Rekan tim kemudian 
membenchmark/mengukur performa dengan tool &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apache benchmark&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ab&lt;/code&gt;) pada halaman landing page saja. Dengan jumlah request 
20k dan concurrentnya 20k lebih dari itu tool benchmark tidak mau jalan. Namun untuk mengetahui berapa jumlah maksimal 
user yang dapat online pada web tidak sesederhana itu. Ada banyak parameter lain yang harus dipertimbangkan.
Mengutip dari &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;servebolt.com&lt;/code&gt; bahwa mengukur jumlah maksimal user yang dapat online harus memperhatikan beberapa parameter 
seperti berapa lama user online pada tiap sesi, rata-rata user mengklik tiap detik, jumlah maksimal request per detik dan
parameter tersebut bisa kita dapatkan dari google analytic.&lt;/p&gt;

&lt;p&gt;Dari data tersebut baru kita bisa mengetahui jumlah maksimal user yang dapat online pada web kita yaitu dengan 
mengkalikan maksimal request perdetik dikali 60, dikali klik frekuensi user perdetik maka akan didapat maksimal user 
yang dapat online secara simultan. Lalu bagaimana cara meningkatkan performa web kita?&lt;/p&gt;

&lt;h3 id=&quot;meningkatkan-performa-aplikasi-php&quot;&gt;Meningkatkan performa aplikasi PHP&lt;/h3&gt;

&lt;p&gt;Ada beberapa cara meningkatkan performa web atau istilahnya optimalisasi yaitu&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Mengoptimalkan query &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;select&lt;/code&gt;. Query yang yang tidak optimal akan memperlambat akses web, hal yang harus adalah 
hindari penggunaan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;select *&lt;/code&gt; pada saat query ke database. Jika tidak membutuhkan semua kolom maka sebutkan 
nama kolom pada saat select.&lt;/li&gt;
  &lt;li&gt;Gunakan index pada tabel secara tepat sesuai kebutuhan. Index pada tabel dapat mempercepat proses query database.&lt;/li&gt;
  &lt;li&gt;Gunakan cache pada data yang sering diakses. Cache dapat mempercepat akses data tanpa perlu query ke database. 
Tool yang bisa digunakan di antaranya &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Redis&lt;/code&gt; atau &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Memcached&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Menyederhanakan dan mengoptimalkan kode. Kode yang tidak optimal dan komplek akan sangat berpengaruh pada kecepatan 
karena terlalu banyak logic yang tidak perlu.&lt;/li&gt;
  &lt;li&gt;Menambah ram, cpu atau bahkan jumlah server. Hal ini merupakan pilihan terakhir jika optimasi dari sisi software 
sudah maksimal.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;penggunaan-job-queue-background-process-worker&quot;&gt;Penggunaan Job Queue, Background Process, Worker&lt;/h3&gt;

&lt;p&gt;Jika kode sudah dioptimalkan, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;query&lt;/code&gt; juga sudah dibuat seminimal mungkin dan sudah menggunakan teknik &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cache&lt;/code&gt; namun proses masih 
lambat maka perlu adanya pemisahan proses yang berat ke dalam &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;job queue&lt;/code&gt; atau &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;background proses&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;penggunaan-teknologi-async&quot;&gt;Penggunaan Teknologi Async&lt;/h3&gt;

&lt;p&gt;Penggunaan async dapat membantu mempercepat proses karena fungsi dapat dieksekusi secara concurent dan non blocking, itu artinya suatu proses 
dapat ditunda dan dilanjut eksekusi berdasarkan dari penjadwalan yang disebut dengan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;event loop&lt;/code&gt;. Untuk &lt;strong&gt;PHP&lt;/strong&gt; merubah fungsi-fungsi pada aplikasi yang sudah berjalan 
dengan fungsi async akan membutuhkan waktu dan sumber daya yang tidak sedikit.&lt;/p&gt;

&lt;p&gt;Karena pada dasarnya &lt;strong&gt;PHP&lt;/strong&gt; tidak dirancang dari awal untuk melakukan sesuatu secara async, bawaan &lt;strong&gt;PHP&lt;/strong&gt; semua fungsi berjalan secara berurutan. Oleh karena menerapkan teknologi async 
akan butuh waktu yang tidak sebentar dan pembiasaanya dengan event loop. Tetapi pada versi 8.1 php mulai menyertakan fitur dasar yang akan memudahkan penggunakan async pada fungsi yaitu
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fiber&lt;/code&gt;, &lt;strong&gt;fiber&lt;/strong&gt; memungkinkan suatu fungsi dapat di pause dan diresume.&lt;/p&gt;

&lt;p&gt;Keuntungan lain dengan adanya fiber ini adalah memungkinkan kode async bisa terlihat seperti sinkronous kode dan pustaka seperti &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;amphp&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reactphp&lt;/code&gt; sudah menerapkan fiber pada pustakanya.&lt;/p&gt;

&lt;p&gt;Jika penggunaan pustaka async dirasa masih kurang cepat maka perlu menginstall modul php seperti &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;event&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ev&lt;/code&gt; atau &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;uv&lt;/code&gt;, modul ini mirip dengan event loop yang dipake pada nodejs.&lt;/p&gt;

&lt;p&gt;Pilihan terakhir adalah bisa menggunakan teknologi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;openswoole&lt;/code&gt; atau &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;swoole&lt;/code&gt;, teknologi ini paket lengkap karena banyar fitur yang ditawarkan seperti event driven, coroutine (mirip goroutine),
websocket server, grpc, multiprocessing dll. Namun modul ini membutuhkan kompilasi waktu yang cukup lama.&lt;/p&gt;

&lt;h3 id=&quot;hybrid-system&quot;&gt;Hybrid System&lt;/h3&gt;

&lt;p&gt;Hybrid sistem artinya menambah bahasa aplikasi baru dan itu artinya butuh programmer lagi yang paham bahasa baru tersebut, seperti Go, Rust atau Nodejs.&lt;/p&gt;

&lt;h3 id=&quot;penggunaan-grpc&quot;&gt;Penggunaan GRPC&lt;/h3&gt;</content><author><name>Agus Susilo</name></author><category term="php" /><summary type="html">Hari ini saya ingin ngobrol tentang performa aplikasi yang dibuat dengan bahasa PHP karena ditempat kerja saya sedang membicarakan tentang berapa banyak pengguna yang dapat online sekaligus pada aplikasi kami. Benarkah aplikasi PHP bisa discale up?</summary></entry><entry><title type="html">Mencari bugs tanpa menjalankan dengan phpstan</title><link href="https://susilolab.github.io/php/2023/12/10/mencari-bugs-tanpa-menjalankan-dengan-phpstan.html" rel="alternate" type="text/html" title="Mencari bugs tanpa menjalankan dengan phpstan" /><published>2023-12-10T05:00:00+07:00</published><updated>2023-12-10T05:00:00+07:00</updated><id>https://susilolab.github.io/php/2023/12/10/mencari-bugs-tanpa-menjalankan-dengan-phpstan</id><content type="html" xml:base="https://susilolab.github.io/php/2023/12/10/mencari-bugs-tanpa-menjalankan-dengan-phpstan.html">&lt;p&gt;Mengelola aplikasi php jadul adalah hal yang mungkin membosankan karena dari versi phpnya sampe paket-paket sudah usang apalagi jika phpnya masih versi 5.6 haduh, belum lagi bugs yang ada karena aplikasi dikembangkan turun 
temurun dengan berbagai latar developer yang berbeda. Untuk cara upgrade php dari versi 5.6 ke 8 Insha Allah akan saya bikinkan artikelnya.&lt;/p&gt;

&lt;p&gt;Namun jangan khawatir para developer php sudah membuat banyak tool untuk mengatasi hal tersebut, salah satu tool yang ingin saya kenalkan adalah &lt;a href=&quot;https://phpstan.org&quot;&gt;&lt;strong&gt;PHPStan&lt;/strong&gt;&lt;/a&gt; sebuah static analysis yang dapat 
membantu menscan kode php tanpa running diproduction untuk mencari bugs yang ada.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/2023-12-10-logo-phpstan.png&quot; alt=&quot;logo-phpstan&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nah kali ini saya ingin berbagi cara penggunaan &lt;strong&gt;PHPStan&lt;/strong&gt;
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;Didalam gRPC aplikasi client dapat langsung memanggil fungsi di server pada mesin yang berbeda seperti jika fungsi tersebut adalah objek lokal, hal ini membuatmu lebih mudah 
untuk membuat aplikasi dan servis yang terdistribusi.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/2023-12-10-demo-phpstan.png&quot; alt=&quot;demo-phpstan&quot; /&gt;
Gambaran tentang gRPC bisa dilihat pada diagram dibawah ini.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/grpc-overview.svg&quot; alt=&quot;diagram-grpc&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dapat dilihat pada gambar bahwa server grpc dibuat dengan bahasa c++ sedangkan 2 client menggunakan Ruby dan Java. Hal ini bisa dilakukan karena masing-masing kode baik 
server maupun client memiliki interface yang sama hasil dari file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.proto&lt;/code&gt;. masing-masing dari server dan client akan digeneratekan kode berdasarkan file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.proto&lt;/code&gt; 
sehingga walaupun hasil generate kodenya berbeda bahasa tetap bisa berkomunikasi.&lt;/p&gt;

&lt;p&gt;Dan kali ini saya ingin mengenalkan cara membuat server grpc dengan Rust dan clientnya dengan PHP. Mengapa memilih menggunakan Rust?. Pertama karena saya ingin lebih mendalami Rust, 
yang kedua adalah karena faktor safety (keamanan) bukan kecepatan. Karena di Rust kalau sudah bisa terkompile Insha Allah kode kita aman hehehe.&lt;/p&gt;

&lt;p&gt;Kemudian kenapa untuk client pake PHP karena bahasa ini sudah lama banget saya pake dari saya SMK dan juga tempat saya bekerja masih menggunakan PHP sebagai bahasa utama walaupun 
sekarang sudah campur dengan bahasa lain.&lt;/p&gt;

&lt;p&gt;Jadi saya ingin menguji gRPC ini ditempat saya bekerja agar kode baru pada fitur baru tidak terlalu semrawut.&lt;/p&gt;

&lt;p&gt;Sebelum kita ngoding saya ingin memberikan daftar kebutuhan yang harus diinstall di lokal development baik Rust maupun PHP.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;protoc&lt;/strong&gt; untuk mengenerate stub kode khusus di PHP, karena di Rust tidak perlu protoc ini.&lt;/li&gt;
  &lt;li&gt;grpc php plugin&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Agus Susilo</name></author><category term="php" /><summary type="html">Mengelola aplikasi php jadul adalah hal yang mungkin membosankan karena dari versi phpnya sampe paket-paket sudah usang apalagi jika phpnya masih versi 5.6 haduh, belum lagi bugs yang ada karena aplikasi dikembangkan turun temurun dengan berbagai latar developer yang berbeda. Untuk cara upgrade php dari versi 5.6 ke 8 Insha Allah akan saya bikinkan artikelnya. Namun jangan khawatir para developer php sudah membuat banyak tool untuk mengatasi hal tersebut, salah satu tool yang ingin saya kenalkan adalah PHPStan sebuah static analysis yang dapat membantu menscan kode php tanpa running diproduction untuk mencari bugs yang ada. Nah kali ini saya ingin berbagi cara penggunaan PHPStan</summary></entry><entry><title type="html">Membuat gRPC Rust Server dan PHP sebagai Client</title><link href="https://susilolab.github.io/rust/2023/11/25/membuat-hello-world-grpc-rust-server-dan-php-client.html" rel="alternate" type="text/html" title="Membuat gRPC Rust Server dan PHP sebagai Client" /><published>2023-11-25T05:00:00+07:00</published><updated>2023-11-25T05:00:00+07:00</updated><id>https://susilolab.github.io/rust/2023/11/25/membuat-hello-world-grpc-rust-server-dan-php-client</id><content type="html" xml:base="https://susilolab.github.io/rust/2023/11/25/membuat-hello-world-grpc-rust-server-dan-php-client.html">&lt;p&gt;gRPC adalah framework remote procedure call(rpc) yang dapat berjalan dilingkungan manapun, grpc mendukung banyak bahasa pemrograman. yang membedakan dengan rpc lainnya 
adalah gRPC menggunakan protokol buffer untuk berbagi data antara server dan client yang dikenal sangat cepat dibanding menggunakan json/xml. grpc ini salah satu cara 
yang digunakan developer untuk membuat microservice.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Didalam gRPC aplikasi client dapat langsung memanggil fungsi di server pada mesin yang berbeda seperti jika fungsi tersebut adalah objek lokal, hal ini membuatmu lebih mudah 
untuk membuat aplikasi dan servis yang terdistribusi.&lt;/p&gt;

&lt;p&gt;Gambaran tentang gRPC bisa dilihat pada diagram dibawah ini.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/grpc-overview.svg&quot; alt=&quot;diagram-grpc&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dapat dilihat pada gambar bahwa server grpc dibuat dengan bahasa c++ sedangkan 2 client menggunakan Ruby dan Java. Hal ini bisa dilakukan karena masing-masing kode baik 
server maupun client memiliki interface yang sama hasil dari file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.proto&lt;/code&gt;. masing-masing dari server dan client akan digeneratekan kode berdasarkan file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.proto&lt;/code&gt; 
sehingga walaupun hasil generate kodenya berbeda bahasa tetap bisa berkomunikasi.&lt;/p&gt;

&lt;p&gt;Dan kali ini saya ingin mengenalkan cara membuat server grpc dengan Rust dan clientnya dengan PHP. Mengapa memilih menggunakan Rust?. Pertama karena saya ingin lebih mendalami Rust, 
yang kedua adalah karena faktor safety (keamanan) bukan kecepatan. Karena di Rust kalau sudah bisa terkompile Insha Allah kode kita aman hehehe.&lt;/p&gt;

&lt;p&gt;Kemudian kenapa untuk client pake PHP karena bahasa ini sudah lama banget saya pake dari saya SMK dan juga tempat saya bekerja masih menggunakan PHP sebagai bahasa utama walaupun 
sekarang sudah campur dengan bahasa lain.&lt;/p&gt;

&lt;p&gt;Jadi saya ingin menguji gRPC ini ditempat saya bekerja agar kode baru pada fitur baru tidak terlalu semrawut.&lt;/p&gt;

&lt;p&gt;Sebelum kita ngoding saya ingin memberikan daftar kebutuhan yang harus diinstall di lokal development baik Rust maupun PHP.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;protoc&lt;/strong&gt; untuk mengenerate stub kode khusus di PHP, karena di Rust tidak perlu protoc ini.&lt;/li&gt;
  &lt;li&gt;grpc php plugin&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Agus Susilo</name></author><category term="rust" /><summary type="html">gRPC adalah framework remote procedure call(rpc) yang dapat berjalan dilingkungan manapun, grpc mendukung banyak bahasa pemrograman. yang membedakan dengan rpc lainnya adalah gRPC menggunakan protokol buffer untuk berbagi data antara server dan client yang dikenal sangat cepat dibanding menggunakan json/xml. grpc ini salah satu cara yang digunakan developer untuk membuat microservice.</summary></entry><entry><title type="html">Merubah Timeout pada job queue Yii2</title><link href="https://susilolab.github.io/php/2023/11/05/merubah-timeout-pada-job-queue-yii2.html" rel="alternate" type="text/html" title="Merubah Timeout pada job queue Yii2" /><published>2023-11-05T05:00:00+07:00</published><updated>2023-11-05T05:00:00+07:00</updated><id>https://susilolab.github.io/php/2023/11/05/merubah-timeout-pada-job-queue-yii2</id><content type="html" xml:base="https://susilolab.github.io/php/2023/11/05/merubah-timeout-pada-job-queue-yii2.html">&lt;p&gt;Default timeout pada job queue yii2 adalah 60 detik, terkadang proses yang berjalan lebih dari 60 detik. Supaya job queue dapat berjalan lebih dari 60 detik 
maka klas job perlu implements dari interface &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yii\queue\RetryableJobInterface&lt;/code&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;contoh:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;yii\base\BaseObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DemoJob&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BaseObject&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;yii\queue\RetryableJobInterface&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;hello world&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getTtr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;120&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;canRetry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$attempt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Agus Susilo</name></author><category term="php" /><summary type="html">Default timeout pada job queue yii2 adalah 60 detik, terkadang proses yang berjalan lebih dari 60 detik. Supaya job queue dapat berjalan lebih dari 60 detik maka klas job perlu implements dari interface yii\queue\RetryableJobInterface.</summary></entry><entry><title type="html">Alternative __dirname di module es6</title><link href="https://susilolab.github.io/javascript/2023/09/28/alternative-dirname-di-modul-es6.html" rel="alternate" type="text/html" title="Alternative __dirname di module es6" /><published>2023-09-28T05:00:00+07:00</published><updated>2023-09-28T05:00:00+07:00</updated><id>https://susilolab.github.io/javascript/2023/09/28/alternative-dirname-di-modul-es6</id><content type="html" xml:base="https://susilolab.github.io/javascript/2023/09/28/alternative-dirname-di-modul-es6.html">&lt;p&gt;Jika kamu seorang programmer Javascript dan sudah mulai menggunakan modul es6 maka kamu perlu tips singkat ini untuk dapat menggunakan variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__dirname&lt;/code&gt; di scriptmu.
Karena pada modul es6 variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__dirname&lt;/code&gt; tidak dapat diakses.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Bagaimana mengetahui bahwa aplikasi kita sudah menggunakan modul es6?. hal ini bisa dilihat dari cara import sebuah modul, sebelum modul es6 cara import modul menggunakan syntax
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;require&lt;/code&gt;. Contoh:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;sedangkan pada modul es6 sudah menggunakan syntax &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;import&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Hal ini ditandai dengan adanya properti konfig dengan nama &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;type&lt;/code&gt; dan bernilai &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module&lt;/code&gt; pada file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;. Nah jika sudah menggunakan modul es6 maka variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__dirname&lt;/code&gt; tidak dapat dipakai lagi.
Untuk itu berikut ini ada caranya membuat semisal &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__dirname&lt;/code&gt;, kamu cukup salin saja kode berikut dan variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__dirname&lt;/code&gt; sudah bisa digunakan.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dirname&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fileURLToPath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;__dirname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fileURLToPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;semoga bermanfaat.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><category term="javascript" /><summary type="html">Jika kamu seorang programmer Javascript dan sudah mulai menggunakan modul es6 maka kamu perlu tips singkat ini untuk dapat menggunakan variable __dirname di scriptmu. Karena pada modul es6 variable __dirname tidak dapat diakses.</summary></entry><entry><title type="html">Fix style kodingmu di PHP dengan php cs fixer</title><link href="https://susilolab.github.io/php/2023/08/20/fix-style-koding-di-php-dengan-php-cs-fixer.html" rel="alternate" type="text/html" title="Fix style kodingmu di PHP dengan php cs fixer" /><published>2023-08-20T05:00:00+07:00</published><updated>2023-08-20T05:00:00+07:00</updated><id>https://susilolab.github.io/php/2023/08/20/fix-style-koding-di-php-dengan-php-cs-fixer</id><content type="html" xml:base="https://susilolab.github.io/php/2023/08/20/fix-style-koding-di-php-dengan-php-cs-fixer.html">&lt;p&gt;Pusing mikir style koding yang berantakan?. ndak usah khawatir, fokus saja pada logik kodemu dan serahkan stylenya pada php coding style fixer.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Komen config neovim jika di tempat saya berlokasi di &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.config/nvim/init.vim&lt;/code&gt; pada keyword &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;set termguicolors&lt;/code&gt; dengan menggunakan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;c&quot;&gt;&quot; set termguicolors&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Kemudian tutup dan buka kembali terminal kamu dan cobalah untuk menjalankan tmux lalu vim maka highlightnya akan berjalan kembali&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/vim-tmux-01.png&quot; alt=&quot;vim+tmux&quot; /&gt;&lt;/p&gt;</content><author><name>Agus Susilo</name></author><category term="php" /><summary type="html">Pusing mikir style koding yang berantakan?. ndak usah khawatir, fokus saja pada logik kodemu dan serahkan stylenya pada php coding style fixer.</summary></entry><entry><title type="html">Membuat Aplikasi Todo dengan Svelte</title><link href="https://susilolab.github.io/javascript/2023/01/22/membuat-aplikasi-todo-dengan-svelte.html" rel="alternate" type="text/html" title="Membuat Aplikasi Todo dengan Svelte" /><published>2023-01-22T05:00:00+07:00</published><updated>2023-01-22T05:00:00+07:00</updated><id>https://susilolab.github.io/javascript/2023/01/22/membuat-aplikasi-todo-dengan-svelte</id><content type="html" xml:base="https://susilolab.github.io/javascript/2023/01/22/membuat-aplikasi-todo-dengan-svelte.html">&lt;p&gt;Svelte adalah pustaka untuk membuat web yang dibuat oleh Rich Harris. Nilai jual utama svelte yaitu tidak menggunakan virutal dom (VDOM) untuk memonitor perubahan data dan
mengkompilasi ulang html. Svelte akan mengkompile komponen html menjadi native javascript sehingga bisa meniadakan adanya runtime, hal ini akan membuat ukuran aplikasi
menjadi lebih kecil dibanding pustaka yang menggunakan vdom dan juga performanya jauh lebih cepat.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-svelte&quot; data-lang=&quot;svelte&quot;&gt;&amp;lt;script&amp;gt;
  let msg = &apos;hello world&apos;
&amp;lt;/script&amp;gt;

&amp;lt;div&amp;gt;{msg}&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Agus Susilo</name></author><category term="javascript" /><summary type="html">Svelte adalah pustaka untuk membuat web yang dibuat oleh Rich Harris. Nilai jual utama svelte yaitu tidak menggunakan virutal dom (VDOM) untuk memonitor perubahan data dan mengkompilasi ulang html. Svelte akan mengkompile komponen html menjadi native javascript sehingga bisa meniadakan adanya runtime, hal ini akan membuat ukuran aplikasi menjadi lebih kecil dibanding pustaka yang menggunakan vdom dan juga performanya jauh lebih cepat.</summary></entry><entry><title type="html">Contoh Closure sederhana pada Rust</title><link href="https://susilolab.github.io/rust/2023/01/08/contoh-anonymous-function-pada-rust.html" rel="alternate" type="text/html" title="Contoh Closure sederhana pada Rust" /><published>2023-01-08T05:00:00+07:00</published><updated>2023-01-08T05:00:00+07:00</updated><id>https://susilolab.github.io/rust/2023/01/08/contoh-anonymous-function-pada-rust</id><content type="html" xml:base="https://susilolab.github.io/rust/2023/01/08/contoh-anonymous-function-pada-rust.html">&lt;p&gt;Rust memiliki function anonymous yang mirip dengan Ruby yang bisa kita lihat penggunaan 
tanda &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;|&lt;/code&gt; walaupun tidak 100% sama. berikut ini contoh penggunaan closure/anonymous function 
pada rust.&lt;/p&gt;

&lt;p&gt;Closure pada Rust bisa kita definisikan menggunakan format &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;||&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;|| {}&lt;/code&gt; jika statementnya lebih dari satu baris atau 
closure memiliki tipe kembalian.
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;Contoh closure paling sederhana tanpa adanya argument dan tipe kembalian.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;demo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello closure.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;demo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Contoh closure dengan argument.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greeting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello {name}.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Contoh closure dengan argument dan tipe kembalian.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hasil 1 + 2 = {res}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Agus Susilo</name></author><category term="rust" /><summary type="html">Rust memiliki function anonymous yang mirip dengan Ruby yang bisa kita lihat penggunaan tanda | walaupun tidak 100% sama. berikut ini contoh penggunaan closure/anonymous function pada rust. Closure pada Rust bisa kita definisikan menggunakan format || dan || {} jika statementnya lebih dari satu baris atau closure memiliki tipe kembalian.</summary></entry><entry><title type="html">Membuat Echo Server TCP dengan Tokio Rust</title><link href="https://susilolab.github.io/rust/2022/09/18/membuat-echo-server-tcp-dengan-rust.html" rel="alternate" type="text/html" title="Membuat Echo Server TCP dengan Tokio Rust" /><published>2022-09-18T05:00:00+07:00</published><updated>2022-09-18T05:00:00+07:00</updated><id>https://susilolab.github.io/rust/2022/09/18/membuat-echo-server-tcp-dengan-rust</id><content type="html" xml:base="https://susilolab.github.io/rust/2022/09/18/membuat-echo-server-tcp-dengan-rust.html">&lt;p&gt;Tokio adalah pustaka untuk membuat aplikasi async di Rust, karena di std lib Rust tidak menyertakan event loop dan lainnya yang berhubungan async await. 
Maka user dapat menggunakan lib dari luar std lib. Pustaka lain yang bisa digunakan adalah &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;async-std&lt;/code&gt;, namun untuk kali ini kita akan menggunakan tokio 
karena alasan lebih familiar saja.&lt;/p&gt;

&lt;p&gt;Kali ini kita akan membuat aplikasi sederhana yaitu TCP Echo Server dan client. Pertama-tama kita buat dulu project baru dengan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cargo&lt;/code&gt;
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;Untuk membuat project baru ketikan perintah ini&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cargo new echo_server&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Lalu masuk ke folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;echo_server&lt;/code&gt; dan tambahkan pustaka tokio pada baris setelah &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[dependencies]&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[dependencies]
tokio = { version = &quot;1&quot;, features = [&quot;full&quot;] }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Kemudian edit file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/main.rs&lt;/code&gt;. Pertama kita akan mengimport struk &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TcpListener&lt;/code&gt; dan trait &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AsyncReadExt&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AsyncWriteExt&lt;/code&gt; dari tokio&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tokio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TcpListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tokio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AsyncReadExt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AsyncWriteExt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Lalu pada main kita rubah menjadi async agar dapat memproses async function.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tokio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TcpListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tokio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AsyncReadExt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AsyncWriteExt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;#[tokio::main]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dyn&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Agus Susilo</name></author><category term="rust" /><summary type="html">Tokio adalah pustaka untuk membuat aplikasi async di Rust, karena di std lib Rust tidak menyertakan event loop dan lainnya yang berhubungan async await. Maka user dapat menggunakan lib dari luar std lib. Pustaka lain yang bisa digunakan adalah async-std, namun untuk kali ini kita akan menggunakan tokio karena alasan lebih familiar saja. Kali ini kita akan membuat aplikasi sederhana yaitu TCP Echo Server dan client. Pertama-tama kita buat dulu project baru dengan cargo</summary></entry><entry><title type="html">Highlight neovim tidak jalan di tmux</title><link href="https://susilolab.github.io/linux/2022/09/05/highlight-neovim-tidak-jalan-di-tmux.html" rel="alternate" type="text/html" title="Highlight neovim tidak jalan di tmux" /><published>2022-09-05T05:00:00+07:00</published><updated>2022-09-05T05:00:00+07:00</updated><id>https://susilolab.github.io/linux/2022/09/05/highlight-neovim-tidak-jalan-di-tmux</id><content type="html" xml:base="https://susilolab.github.io/linux/2022/09/05/highlight-neovim-tidak-jalan-di-tmux.html">&lt;p&gt;&lt;img src=&quot;/assets/img/vim-tmux-02.png&quot; alt=&quot;vim+tmux&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jika highlight line pada vim/neovim kamu tidak jalan pada saat menggunakan tmux kamu bisa edit confignya seperti ini:
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;Komen config neovim jika di tempat saya berlokasi di &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.config/nvim/init.vim&lt;/code&gt; pada keyword &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;set termguicolors&lt;/code&gt; dengan menggunakan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;c&quot;&gt;&quot; set termguicolors&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Kemudian tutup dan buka kembali terminal kamu dan cobalah untuk menjalankan tmux lalu vim maka highlightnya akan berjalan kembali&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/vim-tmux-01.png&quot; alt=&quot;vim+tmux&quot; /&gt;&lt;/p&gt;</content><author><name>Agus Susilo</name></author><category term="linux" /><summary type="html">Jika highlight line pada vim/neovim kamu tidak jalan pada saat menggunakan tmux kamu bisa edit confignya seperti ini:</summary></entry></feed>