<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="https://susilolab.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://susilolab.github.io/" rel="alternate" type="text/html" /><updated>2020-11-12T10:44:18+07:00</updated><id>https://susilolab.github.io/feed.xml</id><title type="html">susilolab</title><subtitle>&quot;Sebaik-baik manusia adalah yang paling bermanfaat bagi manusia&quot; (HR. Ahmad, ath-Thabrani, ad-Daruqutni)</subtitle><author><name>Agus Susilo</name></author><entry><title type="html">Menutup branch pada Mercurial</title><link href="https://susilolab.github.io/hg/mercurial/2020/11/12/menutup-branch-pada-mercurial.html" rel="alternate" type="text/html" title="Menutup branch pada Mercurial" /><published>2020-11-12T06:00:00+07:00</published><updated>2020-11-12T06:00:00+07:00</updated><id>https://susilolab.github.io/hg/mercurial/2020/11/12/menutup-branch-pada-mercurial</id><content type="html" xml:base="https://susilolab.github.io/hg/mercurial/2020/11/12/menutup-branch-pada-mercurial.html">&lt;p&gt;Pada mercurial jika kita membuat cabang kemudian mem-merge cabang baru dengan cabang default, kita akan tetap mendapat cabang dari revisi yang di push oleh rekan satu tim 
jika kita tidak menutup cabang tersebut. Untuk menutup cabang kita harus menyertakan opsi &lt;code class=&quot;highlighter-rouge&quot;&gt;--close-branch&lt;/code&gt; pada saat commit setelah merge cabang. Setelah kita tutup, cabang 
tersebut akan hilang dari repo master sesudah kita push&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hg commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Tutup cabang&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--close-branch&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; agus&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Sekian, semoga bermanfaat&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Pada mercurial jika kita membuat cabang kemudian mem-merge cabang baru dengan cabang default, kita akan tetap mendapat cabang dari revisi yang di push oleh rekan satu tim jika kita tidak menutup cabang tersebut. Untuk menutup cabang kita harus menyertakan opsi --close-branch pada saat commit setelah merge cabang. Setelah kita tutup, cabang tersebut akan hilang dari repo master sesudah kita push $ hg commit -m &quot;Tutup cabang&quot; --close-branch -u agus Sekian, semoga bermanfaat</summary></entry><entry><title type="html">Memeriksa mode PHP</title><link href="https://susilolab.github.io/php/2020/11/11/memeriksa-mode-php.html" rel="alternate" type="text/html" title="Memeriksa mode PHP" /><published>2020-11-11T06:00:00+07:00</published><updated>2020-11-11T06:00:00+07:00</updated><id>https://susilolab.github.io/php/2020/11/11/memeriksa-mode-php</id><content type="html" xml:base="https://susilolab.github.io/php/2020/11/11/memeriksa-mode-php.html">&lt;p&gt;Kali ini saya ingin berbagi sedikit tip bagaimana cara mengetahui apakah php sedang berjalan di &lt;code class=&quot;highlighter-rouge&quot;&gt;commandline&lt;/code&gt; atau web. Kita dapat menggunakan fungsi
&lt;code class=&quot;highlighter-rouge&quot;&gt;php_sapi_name&lt;/code&gt;, fungsi ini akan mengembalikan string mode yang sedang berjalan. Nilai kembaliannya bisa berupa &lt;code class=&quot;highlighter-rouge&quot;&gt;cli&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;cli-server&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;cgi-fcgi&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;embed&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm-fcgi&lt;/code&gt;,
&lt;code class=&quot;highlighter-rouge&quot;&gt;litespeed&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;nsapi&lt;/code&gt; dan &lt;code class=&quot;highlighter-rouge&quot;&gt;phpdbg&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Coba salin kode berikut dan jalankan dengan mengetikan pada terminal &lt;code class=&quot;highlighter-rouge&quot;&gt;php cli.php&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;php_sapi_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Maka akan menghasilkan output &lt;code class=&quot;highlighter-rouge&quot;&gt;cli&lt;/code&gt;. Jika php dijalankan dari nginx dengan mode fpm maka akan menghasilkan output &lt;code class=&quot;highlighter-rouge&quot;&gt;fpm-fcgi&lt;/code&gt;.
Fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;php_sapi_name&lt;/code&gt; ini dapat berguna pada saat kita mengembangkan aplikasi berbasis web dan menambahkan sistem queue yang berbasis cli. Karena pada saat 
php berjalan di command line beberapa fungsi tidak dapat berjalan seperti &lt;code class=&quot;highlighter-rouge&quot;&gt;session&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Sekian, semoga bermanfaat&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Kali ini saya ingin berbagi sedikit tip bagaimana cara mengetahui apakah php sedang berjalan di commandline atau web. Kita dapat menggunakan fungsi php_sapi_name, fungsi ini akan mengembalikan string mode yang sedang berjalan. Nilai kembaliannya bisa berupa cli, cli-server, cgi-fcgi, embed, fpm-fcgi, litespeed, nsapi dan phpdbg. Coba salin kode berikut dan jalankan dengan mengetikan pada terminal php cli.php &amp;lt;?php echo php_sapi_name(), &quot;\n&quot;; Maka akan menghasilkan output cli. Jika php dijalankan dari nginx dengan mode fpm maka akan menghasilkan output fpm-fcgi. Fungsi php_sapi_name ini dapat berguna pada saat kita mengembangkan aplikasi berbasis web dan menambahkan sistem queue yang berbasis cli. Karena pada saat php berjalan di command line beberapa fungsi tidak dapat berjalan seperti session. Sekian, semoga bermanfaat</summary></entry><entry><title type="html">Mengenal fungsi filter, map dan reduce di Elixir</title><link href="https://susilolab.github.io/elixir/2020/11/10/mengenal-filter-map-dan-reduce-di-elixir.html" rel="alternate" type="text/html" title="Mengenal fungsi filter, map dan reduce di Elixir" /><published>2020-11-10T07:00:00+07:00</published><updated>2020-11-10T07:00:00+07:00</updated><id>https://susilolab.github.io/elixir/2020/11/10/mengenal-filter-map-dan-reduce-di-elixir</id><content type="html" xml:base="https://susilolab.github.io/elixir/2020/11/10/mengenal-filter-map-dan-reduce-di-elixir.html">&lt;p&gt;Elixir adalah bahasa pemrograman fungsional, pada saat mengembangkan aplikasi tidak lepas dengan ketiga fungsi tersebut. Nah kali ini saya
ingin berbagi sedikit ilmu tentang 3 fungsi yaitu &lt;code class=&quot;highlighter-rouge&quot;&gt;filter&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt; dan &lt;code class=&quot;highlighter-rouge&quot;&gt;reduce&lt;/code&gt;, apa perbedaannya dan kapan harus menggunakannya.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;filter(enumerable, fun)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;filter&lt;/code&gt; berguna untuk menyaring data sesuai dengan parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;fun&lt;/code&gt; dan mengembalikan hanya nilai yang benar(sesuai argumen &lt;code class=&quot;highlighter-rouge&quot;&gt;fun&lt;/code&gt;).
Perlu diperhatikan bahwa fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;filter&lt;/code&gt; tidak merubah &lt;strong&gt;tipe data&lt;/strong&gt; tetapi hanya merubah &lt;strong&gt;jumlah data&lt;/strong&gt;. Misalkan kita ingin mencari semua angka
genap dari sebuah list(array), maka kodenya seperti ini:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elixir&quot; data-lang=&quot;elixir&quot;&gt;&lt;span class=&quot;no&quot;&gt;Enum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inspect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bagaimana kalau bentuk datanya berupa list map atau struct?. Penggunaannya akan tetap sama seperti pada tipe data list.
Misal kita akan mencari data dari sebuah list map &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt; yang &lt;code class=&quot;highlighter-rouge&quot;&gt;group_id&lt;/code&gt; nya sama dengan 2.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elixir&quot; data-lang=&quot;elixir&quot;&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;%{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;group_id:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Agus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;%{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;group_id:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Susilo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Enum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inspect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# output: [%{group_id: 2, id: 2, name: &quot;Susilo&quot;}]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;map(enumerable, fun)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt; berguna untuk menerapakan argumen &lt;code class=&quot;highlighter-rouge&quot;&gt;fun&lt;/code&gt; ke semua elemen pada argumen &lt;code class=&quot;highlighter-rouge&quot;&gt;enumerable&lt;/code&gt;. Berbeda dengan fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;filter&lt;/code&gt; yang tidak merubah tipe data, fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt; akan merubah tipe data tetapi tidak merubah jumlah elemennya.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elixir&quot; data-lang=&quot;elixir&quot;&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Enum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inspect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# output: [2, 4, 6]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Contoh untuk data list map, dapat dilihat bahwa bentuk data berubah dari map menjadi tuple.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elixir&quot; data-lang=&quot;elixir&quot;&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;%{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;group_id:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Agus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;%{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;group_id:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Susilo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Enum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inspect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# output: [{1, &quot;Agus&quot;}, {2, &quot;Susilo&quot;}]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;reduce(enumerable, acc, fun)&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;reduce&lt;/code&gt; akan merubah jumlah elemen pada hasil dan merubah tipe datanya, namun tidak selalu fungsi harus merubah 
tipe data.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elixir&quot; data-lang=&quot;elixir&quot;&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;%{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;group_id:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Agus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;%{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;group_id:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Susilo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Enum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;acc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inspect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# output: [{2, &quot;Susilo&quot;}]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Pada contoh kode di atas fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;reduce&lt;/code&gt; merubah tipe data dari &lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt; menjadi &lt;code class=&quot;highlighter-rouge&quot;&gt;tuple&lt;/code&gt; dan merubah jumlah data dari 2 menjadi cuma 1 data saja.&lt;/p&gt;

&lt;p&gt;Setelah kita tahu perbedaan dan kapan penggunaan fungsi-fungsi di atas, semoga kode kita dapat lebih berkualitas dan benar.&lt;/p&gt;

&lt;p&gt;Sekian, semoga bermanfaat.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><category term="elixir" /><summary type="html">Elixir adalah bahasa pemrograman fungsional, pada saat mengembangkan aplikasi tidak lepas dengan ketiga fungsi tersebut. Nah kali ini saya ingin berbagi sedikit ilmu tentang 3 fungsi yaitu filter, map dan reduce, apa perbedaannya dan kapan harus menggunakannya. filter(enumerable, fun) Fungsi filter berguna untuk menyaring data sesuai dengan parameter fun dan mengembalikan hanya nilai yang benar(sesuai argumen fun). Perlu diperhatikan bahwa fungsi filter tidak merubah tipe data tetapi hanya merubah jumlah data. Misalkan kita ingin mencari semua angka genap dari sebuah list(array), maka kodenya seperti ini: Enum.filter([1, 2, 3, 4, 5], fn x -&amp;gt; rem(x, 2) == 0 end) |&amp;gt; IO.inspect() Bagaimana kalau bentuk datanya berupa list map atau struct?. Penggunaannya akan tetap sama seperti pada tipe data list. Misal kita akan mencari data dari sebuah list map User yang group_id nya sama dengan 2. user = [ %{id: 1, group_id: 1, name: &quot;Agus&quot;}, %{id: 2, group_id: 2, name: &quot;Susilo&quot;} ] Enum.filter(user, fn x -&amp;gt; x.group_id == 2 end) |&amp;gt; IO.inspect() # output: [%{group_id: 2, id: 2, name: &quot;Susilo&quot;}] map(enumerable, fun) Fungsi map berguna untuk menerapakan argumen fun ke semua elemen pada argumen enumerable. Berbeda dengan fungsi filter yang tidak merubah tipe data, fungsi map akan merubah tipe data tetapi tidak merubah jumlah elemennya. num = [1, 2, 3] Enum.map(num, fn x -&amp;gt; x * 2 end) |&amp;gt; IO.inspect() # output: [2, 4, 6] Contoh untuk data list map, dapat dilihat bahwa bentuk data berubah dari map menjadi tuple. user = [ %{id: 1, group_id: 1, name: &quot;Agus&quot;}, %{id: 2, group_id: 2, name: &quot;Susilo&quot;} ] Enum.map(user, fn x -&amp;gt; {x.id, x.name}) |&amp;gt; IO.inspect() # output: [{1, &quot;Agus&quot;}, {2, &quot;Susilo&quot;}] reduce(enumerable, acc, fun) Fungsi reduce akan merubah jumlah elemen pada hasil dan merubah tipe datanya, namun tidak selalu fungsi harus merubah tipe data. user = [ %{id: 1, group_id: 1, name: &quot;Agus&quot;}, %{id: 2, group_id: 2, name: &quot;Susilo&quot;} ] Enum.reduce(user, [], fn item, acc -&amp;gt; if item.id == 1 do acc else acc ++ [{item.id, item.name}] end end) |&amp;gt; IO.inspect() # output: [{2, &quot;Susilo&quot;}] Pada contoh kode di atas fungsi reduce merubah tipe data dari map menjadi tuple dan merubah jumlah data dari 2 menjadi cuma 1 data saja. Setelah kita tahu perbedaan dan kapan penggunaan fungsi-fungsi di atas, semoga kode kita dapat lebih berkualitas dan benar. Sekian, semoga bermanfaat.</summary></entry><entry><title type="html">Memeriksa Instansi Klas dengan instanceof</title><link href="https://susilolab.github.io/php/2020/11/09/memeriksa-instansi-klas-dengan-instanceof.html" rel="alternate" type="text/html" title="Memeriksa Instansi Klas dengan instanceof" /><published>2020-11-09T06:00:00+07:00</published><updated>2020-11-09T06:00:00+07:00</updated><id>https://susilolab.github.io/php/2020/11/09/memeriksa-instansi-klas-dengan-instanceof</id><content type="html" xml:base="https://susilolab.github.io/php/2020/11/09/memeriksa-instansi-klas-dengan-instanceof.html">&lt;p&gt;&lt;img src=&quot;/assets/img/2020-10-13-instanceof.png&quot; alt=&quot;new-mix-project&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Assalamu’alaikum, kali ini saya akan membagi tips singkat bagaimana memeriksa suatu klas itu instance dari klas apa.
Kenapa hal itu penting? atau kenapa kita harus tahu itu?, jawabannya adalah kadang kita butuh kondisi dimana suatu fungsi hanya boleh
berjalan jika suatu klas instace dari klas ini atau itu. Saya beri contoh pada framework Yii 2 dimana fungsi perlu mengetahui
apakah aplikasi sedang berjalan di konsol atau diweb karena pada Yii beberapa komponen tidak dirancang untuk berjalan pada mode
konsol seperti komponen user dan session. Untuk melakukan pengecekan tersebut kita bisa memakai fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;instanceof&lt;/code&gt; bawaan dari &lt;code class=&quot;highlighter-rouge&quot;&gt;PHP&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Instanceof A&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Bukan instanceof dari A&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;instanceof&lt;/code&gt; ini sering saya gunakan pada framework Yii 2 di semua kelas yang akan diakses/dijalankan pada mode cli(command line), karena
Yii 2 memiliki extension &lt;code class=&quot;highlighter-rouge&quot;&gt;yii-queue&lt;/code&gt; di mana extension akan berjalan pada konsol dan pada saat aplikasi konsol berjalan tentu aplikasi tersebut
akan mengakses model-model ataupun komponen. Untuk itu perlu memastikan bahwa model-model atau komponen tersebut tidak mengakses komponen yang dirancang
khusus untuk web seperti &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Session&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Request&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Respon&lt;/code&gt; dll. Kalau saya sendiri akan membuang semua fungsi yang berhubungan dengan web
pada model &lt;code class=&quot;highlighter-rouge&quot;&gt;ActiveRecord&lt;/code&gt; dan mengalihkannya ke file controller.&lt;/p&gt;

&lt;p&gt;Sekian, semoga bermanfaat&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Assalamu’alaikum, kali ini saya akan membagi tips singkat bagaimana memeriksa suatu klas itu instance dari klas apa. Kenapa hal itu penting? atau kenapa kita harus tahu itu?, jawabannya adalah kadang kita butuh kondisi dimana suatu fungsi hanya boleh berjalan jika suatu klas instace dari klas ini atau itu. Saya beri contoh pada framework Yii 2 dimana fungsi perlu mengetahui apakah aplikasi sedang berjalan di konsol atau diweb karena pada Yii beberapa komponen tidak dirancang untuk berjalan pada mode konsol seperti komponen user dan session. Untuk melakukan pengecekan tersebut kita bisa memakai fungsi instanceof bawaan dari PHP. &amp;lt;?php class A {} $a = new A(); if ($a instanceof A) { echo &quot;Instanceof A\n&quot;; } else { echo &quot;Bukan instanceof dari A\n&quot;; } Fungsi instanceof ini sering saya gunakan pada framework Yii 2 di semua kelas yang akan diakses/dijalankan pada mode cli(command line), karena Yii 2 memiliki extension yii-queue di mana extension akan berjalan pada konsol dan pada saat aplikasi konsol berjalan tentu aplikasi tersebut akan mengakses model-model ataupun komponen. Untuk itu perlu memastikan bahwa model-model atau komponen tersebut tidak mengakses komponen yang dirancang khusus untuk web seperti User, Session, Request, Respon dll. Kalau saya sendiri akan membuang semua fungsi yang berhubungan dengan web pada model ActiveRecord dan mengalihkannya ke file controller. Sekian, semoga bermanfaat</summary></entry><entry><title type="html">Mengenal Closure pada PHP</title><link href="https://susilolab.github.io/php/2020/09/25/mengenal-closure-pada-php.html" rel="alternate" type="text/html" title="Mengenal Closure pada PHP" /><published>2020-09-25T06:00:00+07:00</published><updated>2020-09-25T06:00:00+07:00</updated><id>https://susilolab.github.io/php/2020/09/25/mengenal-closure-pada-php</id><content type="html" xml:base="https://susilolab.github.io/php/2020/09/25/mengenal-closure-pada-php.html">&lt;p&gt;Assalamu’alaikum, semoga hari Anda menyenangkan karena saya akan mengenalkan apa itu closure, terutama closure
pada PHP. Closure atau bisa disebut juga anonymous function adalah fungsi yang tidak memiliki nama.
closures sangat berguna sebagai nilai dari parameter callback, tetapi juga berguna pada penggunaan lain.
untuk lebih jelasnya kita lihat contoh dibawah&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$hello&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'world'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Untuk memanggil closure gunakan tanda kurung tutup setelah nama variabel. karena closure sebenarnya sama seperti
fungsi pada umumnya, maka kita juga dapat memberikan parameter pada closure.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$hello&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' world'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Contoh lain penggunaan closures, &lt;code class=&quot;highlighter-rouge&quot;&gt;array_walk&lt;/code&gt; berguna untuk menerapkan fungsi ke setiap elemen pada array.
jika parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;$userdata&lt;/code&gt; diisi maka data akan dilewatkan ke fungsi pada parameter ketiga.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$fruits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'a'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Apel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'b'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Belimbing'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'c'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Cerry'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;array_walk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$fruits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'. '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Nama parameter tidak harus sama dengan contoh diatas tetapi urutan data tetap sama yaitu nilai array,
kunci dan userdata jika ada.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nb&quot;&gt;array_walk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$fruits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$prefix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;. &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$prefix&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$item&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'buah'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Jika parameter userdata disertakan maka parameter pertama perlu dilewatkan sebagai referensi bukan sebagai nilai.
agar nilainya dapat dirubah oleh userdata.&lt;/p&gt;

&lt;p&gt;lihatlah perbedaannya jika tidak menggunakan closure&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$prefix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;. &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$prefix&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$item&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;array_walk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$fruits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'test_print'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'buah'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;sama kan?&lt;/p&gt;

&lt;p&gt;Perlu diingat bahwa variabel diluar closure tidak dapat diakses, untuk dapat mengakses variabel diluar closure gunakan keyword &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;/code&gt; dan agar variabel diluar closures dapat dirubah didalam closures lewatkan parameter sebagai referensi.
gunakan tanda &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt; sebelum parameter use. lihat contoh dibawah ini&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$products&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]];&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$tax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;array_walk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$products&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$tax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$qty&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

    &lt;span class=&quot;nv&quot;&gt;$total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$qty&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$tax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Terlihat bahwa variabel &lt;code class=&quot;highlighter-rouge&quot;&gt;$tax&lt;/code&gt; dapat dibaca didalam closures, dan juga variabel &lt;code class=&quot;highlighter-rouge&quot;&gt;$total&lt;/code&gt; dapat berubah nilainya.&lt;/p&gt;

&lt;p&gt;sekian dari saya, semoga bermanfaat. jika ada punya pemikiran lain silahkan merespon :)&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Assalamu’alaikum, semoga hari Anda menyenangkan karena saya akan mengenalkan apa itu closure, terutama closure pada PHP. Closure atau bisa disebut juga anonymous function adalah fungsi yang tidak memiliki nama. closures sangat berguna sebagai nilai dari parameter callback, tetapi juga berguna pada penggunaan lain. untuk lebih jelasnya kita lihat contoh dibawah $hello = function() { echo 'world'; }; $hello(); Untuk memanggil closure gunakan tanda kurung tutup setelah nama variabel. karena closure sebenarnya sama seperti fungsi pada umumnya, maka kita juga dapat memberikan parameter pada closure. $hello = function($msg) { echo $msg . ' world'; }; $hello('hello'); Contoh lain penggunaan closures, array_walk berguna untuk menerapkan fungsi ke setiap elemen pada array. jika parameter $userdata diisi maka data akan dilewatkan ke fungsi pada parameter ketiga. $fruits = ['a' =&amp;gt; 'Apel', 'b' =&amp;gt; 'Belimbing', 'c' =&amp;gt; 'Cerry']; array_walk($fruits, function($item, $key) { echo $key . '. ' . $item . &quot;\n&quot;; }); Nama parameter tidak harus sama dengan contoh diatas tetapi urutan data tetap sama yaitu nilai array, kunci dan userdata jika ada. array_walk($fruits, function(&amp;amp;$item, $key, $prefix) { echo &quot;$key. $prefix $item\n&quot;; }, 'buah'); Jika parameter userdata disertakan maka parameter pertama perlu dilewatkan sebagai referensi bukan sebagai nilai. agar nilainya dapat dirubah oleh userdata. lihatlah perbedaannya jika tidak menggunakan closure function test_print(&amp;amp;$item, $key, $prefix) { echo &quot;$key. $prefix $item\n&quot;; } array_walk($fruits, 'test_print', 'buah'); sama kan? Perlu diingat bahwa variabel diluar closure tidak dapat diakses, untuk dapat mengakses variabel diluar closure gunakan keyword use dan agar variabel diluar closures dapat dirubah didalam closures lewatkan parameter sebagai referensi. gunakan tanda &amp;amp; sebelum parameter use. lihat contoh dibawah ini $products = [ [2, 1000], [3, 2000], [2, 3000]]; $tax = 0.05; $total = 0.00; array_walk($products, function($product, $key) use($tax, &amp;amp;$total) { $qty = $product[0]; $price = $product[1]; $total += ($qty * $price) * ($tax+1.0); }); echo round($total, 2); Terlihat bahwa variabel $tax dapat dibaca didalam closures, dan juga variabel $total dapat berubah nilainya. sekian dari saya, semoga bermanfaat. jika ada punya pemikiran lain silahkan merespon :)</summary></entry><entry><title type="html">Status service systemd Elixir activating terus</title><link href="https://susilolab.github.io/linux/2020/09/24/status-service-systemd-elixir-activating-terus.html" rel="alternate" type="text/html" title="Status service systemd Elixir activating terus" /><published>2020-09-24T07:00:00+07:00</published><updated>2020-09-24T07:00:00+07:00</updated><id>https://susilolab.github.io/linux/2020/09/24/status-service-systemd-elixir-activating-terus</id><content type="html" xml:base="https://susilolab.github.io/linux/2020/09/24/status-service-systemd-elixir-activating-terus.html">&lt;p&gt;&lt;img src=&quot;/assets/img/20200806-elixir-systemd.png&quot; alt=&quot;elixir-systemd&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jadi ini ceritanya saya ada pekerjaan untuk merubah salah satu fungsi pada aplikasi di kantor ke bahasa Elixir,
pada saat aplikasi sudah siap dideploy ke server production status servisnya tidak normal, selalu &lt;code class=&quot;highlighter-rouge&quot;&gt;activating&lt;/code&gt; terus.
Sebelumnya saya mencoba mengirim data ke servis untuk memastikan apakah aplikasinya jalan apa tidak. Ternyata aplikasinya jalan,
itu artinya tidak ada masalah diaplikasi.&lt;/p&gt;

&lt;p&gt;Kemudian saya coba otak-atik service di systemdnya, setelah beberapa lama baru ketahuan setelah tak coba didatacenter.
Penyebabnya ada pada &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt; service pada file konfigurasinya. Awalnya saya pakai type &lt;code class=&quot;highlighter-rouge&quot;&gt;forking&lt;/code&gt; dan setelah ganti ke type &lt;code class=&quot;highlighter-rouge&quot;&gt;simple&lt;/code&gt;,
Alhamdulillah normal.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-conf&quot; data-lang=&quot;conf&quot;&gt;[&lt;span class=&quot;n&quot;&gt;Unit&lt;/span&gt;]
...

[&lt;span class=&quot;n&quot;&gt;Service&lt;/span&gt;]
&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;=&lt;span class=&quot;n&quot;&gt;simple&lt;/span&gt;
...

[&lt;span class=&quot;n&quot;&gt;Install&lt;/span&gt;]
&lt;span class=&quot;n&quot;&gt;WantedBy&lt;/span&gt; = &lt;span class=&quot;n&quot;&gt;multi&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/20200924-elixir-systemd.png&quot; alt=&quot;elixir-systemd&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Alasan kenapa setelah saya ganti typenya ke &lt;code class=&quot;highlighter-rouge&quot;&gt;simple&lt;/code&gt; menjadi normal karena type simple cocok jika aplikasi yang akan dijadikan
service memiliki karakteristik aplikasinya jalan dan prompt tidak mengembalikan apa-apa sampai kita tekan &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl+C&lt;/code&gt; atau menghentikan servisnya.&lt;/p&gt;

&lt;p&gt;Type &lt;code class=&quot;highlighter-rouge&quot;&gt;forking&lt;/code&gt; cocok jika karakteristik aplikasi pada saat jalan langsung mengembalikan sesuatu dan servis tetep jalan.&lt;/p&gt;

&lt;p&gt;Sekian, semoga bermanfaat.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Jadi ini ceritanya saya ada pekerjaan untuk merubah salah satu fungsi pada aplikasi di kantor ke bahasa Elixir, pada saat aplikasi sudah siap dideploy ke server production status servisnya tidak normal, selalu activating terus. Sebelumnya saya mencoba mengirim data ke servis untuk memastikan apakah aplikasinya jalan apa tidak. Ternyata aplikasinya jalan, itu artinya tidak ada masalah diaplikasi. Kemudian saya coba otak-atik service di systemdnya, setelah beberapa lama baru ketahuan setelah tak coba didatacenter. Penyebabnya ada pada type service pada file konfigurasinya. Awalnya saya pakai type forking dan setelah ganti ke type simple, Alhamdulillah normal. [Unit] ... [Service] Type=simple ... [Install] WantedBy = multi-user.target Alasan kenapa setelah saya ganti typenya ke simple menjadi normal karena type simple cocok jika aplikasi yang akan dijadikan service memiliki karakteristik aplikasinya jalan dan prompt tidak mengembalikan apa-apa sampai kita tekan Ctrl+C atau menghentikan servisnya. Type forking cocok jika karakteristik aplikasi pada saat jalan langsung mengembalikan sesuatu dan servis tetep jalan. Sekian, semoga bermanfaat.</summary></entry><entry><title type="html">Perulangan terbalik pada rust</title><link href="https://susilolab.github.io/rust/2020/09/23/perulangan-terbalik-pada-rust.html" rel="alternate" type="text/html" title="Perulangan terbalik pada rust" /><published>2020-09-23T07:00:00+07:00</published><updated>2020-09-23T07:00:00+07:00</updated><id>https://susilolab.github.io/rust/2020/09/23/perulangan-terbalik-pada-rust</id><content type="html" xml:base="https://susilolab.github.io/rust/2020/09/23/perulangan-terbalik-pada-rust.html">&lt;p&gt;Kali ini saya ingin berbagi sedikit tip bagaimana melakukan loop secara terbalik pada Rust.
Biasanya kita akan melakukan loop seperti ini:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bagaimana jika ingin loop dari 5 s/d 0 ?. Mungkin kita akan berpikiran seperti ini&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Jika dijalankan kode di atas tidak akan jalan. Lalu bagaimana cara yang benar jika ingin perulangannya terbalik ?. 
Kita bisa menggunakan unit jangkuan dan fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;rev()&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.rev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Kode di atas akan jalan dengan sukses dan menghasilkan keluaran seperti berikut ini:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;4
3
2
1
0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Demikian tips singkat kali ini semoga bermanfaat.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Kali ini saya ingin berbagi sedikit tip bagaimana melakukan loop secara terbalik pada Rust. Biasanya kita akan melakukan loop seperti ini: ... for i in 0..5 { println!(&quot;{}&quot;, i); } ... Bagaimana jika ingin loop dari 5 s/d 0 ?. Mungkin kita akan berpikiran seperti ini ... for i in 5..0 { println!(&quot;{}&quot;, i); } ... Jika dijalankan kode di atas tidak akan jalan. Lalu bagaimana cara yang benar jika ingin perulangannya terbalik ?. Kita bisa menggunakan unit jangkuan dan fungsi rev(). ... for i in (0..5).rev() { println!(&quot;{}&quot;, i); } ... Kode di atas akan jalan dengan sukses dan menghasilkan keluaran seperti berikut ini: 4 3 2 1 0 Demikian tips singkat kali ini semoga bermanfaat.</summary></entry><entry><title type="html">Membuat Script Shell di Deno</title><link href="https://susilolab.github.io/deno/2020/09/21/membuat-script-shell-di-deno.html" rel="alternate" type="text/html" title="Membuat Script Shell di Deno" /><published>2020-09-21T05:00:00+07:00</published><updated>2020-09-21T05:00:00+07:00</updated><id>https://susilolab.github.io/deno/2020/09/21/membuat-script-shell-di-deno</id><content type="html" xml:base="https://susilolab.github.io/deno/2020/09/21/membuat-script-shell-di-deno.html">&lt;p&gt;Shebang adalah tanda &lt;code class=&quot;highlighter-rouge&quot;&gt;#!&lt;/code&gt; pada shell script di linux, shell bash/zsh/yang lain menggunakan shebang untuk mendeteksi script tersebut akan dijalankan dengan perintah apa. Awal shell script biasanya seperti ini &lt;code class=&quot;highlighter-rouge&quot;&gt;#!/usr/bin/env nama_perintah&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Contoh
Shell script berikut ini akan dijalankan menggunakan &lt;code class=&quot;highlighter-rouge&quot;&gt;php&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;#!/usr/bin/env php
&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;phpversion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Maka jika shell script di atas dijalankan shell akan menggunakan perintah &lt;code class=&quot;highlighter-rouge&quot;&gt;php&lt;/code&gt; untuk menjalankannya.&lt;/p&gt;

&lt;p&gt;Shell script berikut ini akan dijalankan menggunakan &lt;code class=&quot;highlighter-rouge&quot;&gt;python&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env python3
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;langs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'PHP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Javascript'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Rust'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Elixir'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Go'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lang&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;langs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Maka jika shell script di atas dijalankan shell akan menggunakan perintah &lt;code class=&quot;highlighter-rouge&quot;&gt;python3&lt;/code&gt; untuk menjalankannya dan seterusnya.&lt;/p&gt;

&lt;p&gt;Kasus kali ini agak berbeda ketika saya mencoba membuat shell dengan Deno sebagai executornya. Pernah mencoba membuat shell script agar Deno langsung bisa dijalankan dengan perintah shell seperti ini &lt;code class=&quot;highlighter-rouge&quot;&gt;./scrip_name&lt;/code&gt; ?. Namun karena Deno ada tambahan perizinan dan command &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt; maka jika shell script kita seperti di bawah akan terjadi error.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env deno&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Bagaimana agar shell script kita sama seperti pada saat kita menjalankan &lt;code class=&quot;highlighter-rouge&quot;&gt;deno run --allow-read --unstable read_json.ts&lt;/code&gt; ?. Setelah saya cari di google ternyata ada tambahan argumen &lt;code class=&quot;highlighter-rouge&quot;&gt;-S&lt;/code&gt; pada perintah &lt;code class=&quot;highlighter-rouge&quot;&gt;env&lt;/code&gt; agar shell script dapat menerima argumen tambahan dari Deno.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#!/usr/bin/env -S deno run --allow-read --unstable
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;readJson&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https://deno.land/std@0.54.0/fs/mod.ts&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;readJson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;hello.json&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Sekian, semoga bermanfaat.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><category term="deno" /><category term="typescript" /><summary type="html">Shebang adalah tanda #! pada shell script di linux, shell bash/zsh/yang lain menggunakan shebang untuk mendeteksi script tersebut akan dijalankan dengan perintah apa. Awal shell script biasanya seperti ini #!/usr/bin/env nama_perintah. Contoh Shell script berikut ini akan dijalankan menggunakan php #!/usr/bin/env php &amp;lt;?php echo phpversion(); Maka jika shell script di atas dijalankan shell akan menggunakan perintah php untuk menjalankannya. Shell script berikut ini akan dijalankan menggunakan python #!/usr/bin/env python3 langs = ['PHP', 'Javascript', 'Rust', 'Elixir', 'Go'] for lang in langs: print(lang) Maka jika shell script di atas dijalankan shell akan menggunakan perintah python3 untuk menjalankannya dan seterusnya. Kasus kali ini agak berbeda ketika saya mencoba membuat shell dengan Deno sebagai executornya. Pernah mencoba membuat shell script agar Deno langsung bisa dijalankan dengan perintah shell seperti ini ./scrip_name ?. Namun karena Deno ada tambahan perizinan dan command run maka jika shell script kita seperti di bawah akan terjadi error. #!/usr/bin/env deno Bagaimana agar shell script kita sama seperti pada saat kita menjalankan deno run --allow-read --unstable read_json.ts ?. Setelah saya cari di google ternyata ada tambahan argumen -S pada perintah env agar shell script dapat menerima argumen tambahan dari Deno. #!/usr/bin/env -S deno run --allow-read --unstable import { readJson } from &quot;https://deno.land/std@0.54.0/fs/mod.ts&quot;; const content = await readJson(&quot;hello.json&quot;); console.log(content); Sekian, semoga bermanfaat.</summary></entry><entry><title type="html">Menulis Syntax Kode Template Jekyll di dalam Contoh Kode</title><link href="https://susilolab.github.io/ruby/2020/05/25/menulis-syntax-kode-template-jekyll-di-dalam-contoh-kode.html" rel="alternate" type="text/html" title="Menulis Syntax Kode Template Jekyll di dalam Contoh Kode" /><published>2020-05-25T05:00:00+07:00</published><updated>2020-05-25T05:00:00+07:00</updated><id>https://susilolab.github.io/ruby/2020/05/25/menulis-syntax-kode-template-jekyll-di-dalam-contoh-kode</id><content type="html" xml:base="https://susilolab.github.io/ruby/2020/05/25/menulis-syntax-kode-template-jekyll-di-dalam-contoh-kode.html">&lt;p&gt;Buat temen-temen yang pake jekyll untuk menulis blognya pasti tahu syntax dari template jekyll. Nah pernahkah temen-temen ingin men-share kode dari template jekyll?. Sudah mencari-cari digoogle tapi belum ketemu?. Kali saya ingin berbagi bagaimana men-share kode dari syntax template jekyll ke blog.&lt;/p&gt;

&lt;p&gt;Untuk bisa menuliskan kode dari jekyll kita bisa memakai syntax &lt;code class=&quot;highlighter-rouge&quot;&gt;raw&lt;/code&gt; dan &lt;code class=&quot;highlighter-rouge&quot;&gt;endraw&lt;/code&gt;, karena saya belum menemukan bagaimana men-share kode &lt;code class=&quot;highlighter-rouge&quot;&gt;raw&lt;/code&gt; di dalam &lt;code class=&quot;highlighter-rouge&quot;&gt;raw&lt;/code&gt; maka saya pake screenshot saja. Jadi setelah syntax kode &lt;code class=&quot;highlighter-rouge&quot;&gt;highlight&lt;/code&gt; kita bisa tambahkan &lt;code class=&quot;highlighter-rouge&quot;&gt;raw&lt;/code&gt; kemudian baru menulis kode template. &lt;code class=&quot;highlighter-rouge&quot;&gt;raw&lt;/code&gt; akan memproses apa yang ada di dalamnya sesuai format, tanpa merubah isinya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/20200522-syntax-jekyll.png&quot; alt=&quot;mix-deps-get&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Contoh outputnya bisa dilihat pada postingan saya berikut &lt;a href=&quot;/ruby/2020/05/21/link-internal-post-pada-artikel-di-jekyll.html&quot;&gt;Link Internal Post pada Artikel di Jekyll&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sekian semoga bermanfaat.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Buat temen-temen yang pake jekyll untuk menulis blognya pasti tahu syntax dari template jekyll. Nah pernahkah temen-temen ingin men-share kode dari template jekyll?. Sudah mencari-cari digoogle tapi belum ketemu?. Kali saya ingin berbagi bagaimana men-share kode dari syntax template jekyll ke blog. Untuk bisa menuliskan kode dari jekyll kita bisa memakai syntax raw dan endraw, karena saya belum menemukan bagaimana men-share kode raw di dalam raw maka saya pake screenshot saja. Jadi setelah syntax kode highlight kita bisa tambahkan raw kemudian baru menulis kode template. raw akan memproses apa yang ada di dalamnya sesuai format, tanpa merubah isinya. Contoh outputnya bisa dilihat pada postingan saya berikut Link Internal Post pada Artikel di Jekyll Sekian semoga bermanfaat.</summary></entry><entry><title type="html">Mengenal Trait di PHP</title><link href="https://susilolab.github.io/php/2020/05/23/mengenal-trait-php.html" rel="alternate" type="text/html" title="Mengenal Trait di PHP" /><published>2020-05-23T00:00:00+07:00</published><updated>2020-05-23T00:00:00+07:00</updated><id>https://susilolab.github.io/php/2020/05/23/mengenal-trait-php</id><content type="html" xml:base="https://susilolab.github.io/php/2020/05/23/mengenal-trait-php.html">&lt;p&gt;Trait adalah mekanisme untuk penggunaan kembali kode dalam single inheritance. Trait dimaksudkan untuk mengurangi beberapa keterbatasan dari turunan tunggal dengan memungkinkan pengembang untuk menggunakan kembali serangkain fungsi-fungsi secara bebas pada beberapa klas yang independen yang hidup dalam hirarki klas yang berbeda.&lt;/p&gt;

&lt;p&gt;Trait mirip dengan klas, hanya saja trait dimaksudkan untuk mengelompokan fungsi menjadi kecil dan konsisten. Kita tidak bisa meng-instansi trait pada dirinya sendiri tetapi kita bisa menggunakannya tanpa harus menurukannya(inheritance).&lt;/p&gt;

&lt;p&gt;Daftar Isi:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#precedence&quot;&gt;Precedence&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#trait-multiple&quot;&gt;Trait Multiple&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#conflict-resolution&quot;&gt;Resolusi Konflik&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#visibility&quot;&gt;Merubah visibility metode&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#composed&quot;&gt;Trait disusun dari Trait&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#abstract-trait&quot;&gt;Anggota Trait Abstract&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#static-trait&quot;&gt;Anggota Static Trait&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#property&quot;&gt;Property&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Contoh trait:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app\traits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Foo&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Untuk menggunakan trait pada klas kita cukup gunakan keyword &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;/code&gt; didalam definisi klas.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\app\traits\Foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// kita dapat menggunakan fungsi dari trait Foo &lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// secara langsung menggunakan $this&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;world&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' world!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;hal-mendahului-precedence&quot;&gt;&lt;a name=&quot;precedence&quot;&gt;&lt;/a&gt;Hal mendahului/ Precedence&lt;/h4&gt;

&lt;p&gt;Anggota turunan dari klas dasar ditumpuki oleh anggota yang disisipi oleh Trait. Urutan precedence adalah bahwa member dari klas saat ini ditumpuk oleh trait yang disisipkan.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Contoh&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Fungsi turunan dari klas dasar (&lt;code class=&quot;highlighter-rouge&quot;&gt;Base&lt;/code&gt;) ditumpuk oleh fungsi yang disisipkan pada klas &lt;code class=&quot;highlighter-rouge&quot;&gt;MyHelloWorld&lt;/code&gt; yaitu dari trait &lt;code class=&quot;highlighter-rouge&quot;&gt;SayWorld&lt;/code&gt;. Aturan ini akan sama untuk fungsi yang didefinisikan di dalam klas &lt;code class=&quot;highlighter-rouge&quot;&gt;MyHelloWorld&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Base&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SayWorld&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'World!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyHelloWorld&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SayWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyHelloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// output:&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// World&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Contoh lain dari urutan precedence&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloWorld&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello World!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DuniaTidakCukup&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;HelloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Halo Dunia!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DuniaTidakCukup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Contoh di atas akan menghasilkan keluaran:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Halo Dunia!&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;trait-multiple&quot;&gt;&lt;a name=&quot;trait-multiple&quot;&gt;&lt;/a&gt;Trait Multiple&lt;/h4&gt;

&lt;p&gt;Multiple trait dapat disisipkan ke dalam klas dengan mendaftarkannya pada statemen &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;/code&gt;, dipisahkan dengan koma.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Hello&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;World&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'World'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyHelloWorld&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;, World&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayExclamationMark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyHelloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sayWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sayExclamationMark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;resolusi-konflik&quot;&gt;&lt;a name=&quot;conflict-resolution&quot;&gt;&lt;/a&gt;Resolusi Konflik&lt;/h4&gt;

&lt;p&gt;Jika dua Trait disisipkan dengan nama yang sama maka akan terjadi kesalahan fatal, jika masalah tidak dipecahkan secara eksplisit. Untuk memecahkan konflik penamaan antara Trait pada klas yang sama, operator &lt;code class=&quot;highlighter-rouge&quot;&gt;insteadof&lt;/code&gt; diperlukan untuk memilih tepat satu dari method yang konflik. Karena hal ini hanya boleh membuat satu pengecualian, operator &lt;code class=&quot;highlighter-rouge&quot;&gt;as&lt;/code&gt; dapat digunakan untuk menambah alias ke suatu method. Perlu dicatat bahwa operator &lt;code class=&quot;highlighter-rouge&quot;&gt;as&lt;/code&gt; tidak merubah nama method dan tidak mempengaruhi method lain.&lt;/p&gt;

&lt;p&gt;Contoh&lt;/p&gt;

&lt;p&gt;Pada contoh ini, klas &lt;code class=&quot;highlighter-rouge&quot;&gt;Talker&lt;/code&gt; menggunakan trait &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt; dan &lt;code class=&quot;highlighter-rouge&quot;&gt;B&lt;/code&gt;. Karena trait &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt; dan &lt;code class=&quot;highlighter-rouge&quot;&gt;B&lt;/code&gt; memiliki konflik, maka klas ini akan perlu mendefinisikan penggunaan method &lt;code class=&quot;highlighter-rouge&quot;&gt;smallTalk&lt;/code&gt; dari trait &lt;code class=&quot;highlighter-rouge&quot;&gt;B&lt;/code&gt; dan method &lt;code class=&quot;highlighter-rouge&quot;&gt;bigTalk&lt;/code&gt; dari trait &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Klas &lt;code class=&quot;highlighter-rouge&quot;&gt;Alias_Talker&lt;/code&gt; menggunakan operator &lt;code class=&quot;highlighter-rouge&quot;&gt;as&lt;/code&gt; untuk dapat menggunakan method &lt;code class=&quot;highlighter-rouge&quot;&gt;bigTalk&lt;/code&gt; dari trait &lt;code class=&quot;highlighter-rouge&quot;&gt;B&lt;/code&gt; dengan nama alias &lt;code class=&quot;highlighter-rouge&quot;&gt;talk&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;smallTalk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bigTalk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;B&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;smallTalk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'b'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bigTalk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Talker&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;, B {
        B::smallTalk insteadof A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bigTalk&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;insteadof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Aliased_Talker&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;, B {
        B::smallTalk insteadof A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bigTalk&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;insteadof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bigTalk&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;talk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;merubah-visibility-metode&quot;&gt;&lt;a name=&quot;visibility&quot;&gt;&lt;/a&gt;Merubah visibility metode&lt;/h4&gt;

&lt;p&gt;Dengan menggunakan syntax &lt;code class=&quot;highlighter-rouge&quot;&gt;as&lt;/code&gt; method pada trait dapat dirubah visibilitynya pada klas yang menggunakan trait.&lt;/p&gt;

&lt;p&gt;Contoh&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloWorld&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello world!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Merubah visibility fungsi sayHello&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyClass1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;HelloWorld&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; { sayHello&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;protected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Alias method dengan perubahan visibility&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Visibility sayHello tetap tidak berubah&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyClass2&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;HelloWorld&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; { sayHello&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;private&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; myPrivateHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;trait-disusun-dari-trait&quot;&gt;&lt;a name=&quot;composed&quot;&gt;&lt;/a&gt;Trait disusun dari Trait&lt;/h4&gt;

&lt;p&gt;Seperti pada klas yang dapat menggunakan trait, jadi trait juga dapat menggunakan trait lain. Dengan menggunakan satu atau lebih trait di dalam definisi trait, trait ini dapat disusun sebagian atau semuanya dari anggota yang mendefinisikan pada trait lain.&lt;/p&gt;

&lt;p&gt;Contoh&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Hello&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;World&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'World'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloWorld&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;, World&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyHelloWorld&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;HelloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyHelloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sayWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;anggota-trait-abstract&quot;&gt;&lt;a name=&quot;abstract-trait&quot;&gt;&lt;/a&gt;Anggota Trait Abstract&lt;/h4&gt;

&lt;p&gt;Trait mendukung penggunaan abstract method untuk memaksa kebutuhan pada class yang menggunakan trait.&lt;/p&gt;

&lt;p&gt;Contoh abstract method&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Hello&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sayHelloWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyHelloWorld&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$world&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;world&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;world&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;anggota-static-trait&quot;&gt;&lt;a name=&quot;static-trait&quot;&gt;&lt;/a&gt;Anggota Static Trait&lt;/h4&gt;

&lt;p&gt;Trait dapat mendefinisikan static property dan static method&lt;/p&gt;

&lt;p&gt;Contoh static variabel&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Counter&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;C1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;C2&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;C1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// echo 1&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;C2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// echo 1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Contoh static method&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StaticExample&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Doing Something'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Example&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;StaticExample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Example&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;property&quot;&gt;&lt;a name=&quot;property&quot;&gt;&lt;/a&gt;Property&lt;/h4&gt;

&lt;p&gt;Di dalam Trait kita juga dapat mendefinisikan &lt;code class=&quot;highlighter-rouge&quot;&gt;property&lt;/code&gt; sama seperti pada klas.&lt;/p&gt;

&lt;p&gt;Contoh&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;kd&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PropertiesTrait&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PropertiesExample&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PropertiesTrait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PropertiesExample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;sekian.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;sumber: php.net&lt;/em&gt;&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Trait adalah mekanisme untuk penggunaan kembali kode dalam single inheritance. Trait dimaksudkan untuk mengurangi beberapa keterbatasan dari turunan tunggal dengan memungkinkan pengembang untuk menggunakan kembali serangkain fungsi-fungsi secara bebas pada beberapa klas yang independen yang hidup dalam hirarki klas yang berbeda. Trait mirip dengan klas, hanya saja trait dimaksudkan untuk mengelompokan fungsi menjadi kecil dan konsisten. Kita tidak bisa meng-instansi trait pada dirinya sendiri tetapi kita bisa menggunakannya tanpa harus menurukannya(inheritance). Daftar Isi: Precedence Trait Multiple Resolusi Konflik Merubah visibility metode Trait disusun dari Trait Anggota Trait Abstract Anggota Static Trait Property Contoh trait: &amp;lt;?php namespace app\traits; trait Foo { public function hello() { return 'Hello'; } } Untuk menggunakan trait pada klas kita cukup gunakan keyword use didalam definisi klas. &amp;lt;?php class User { use \app\traits\Foo; // kita dapat menggunakan fungsi dari trait Foo // secara langsung menggunakan $this public function world() { echo $this-&amp;gt;hello() . ' world!'; } } Hal mendahului/ Precedence Anggota turunan dari klas dasar ditumpuki oleh anggota yang disisipi oleh Trait. Urutan precedence adalah bahwa member dari klas saat ini ditumpuk oleh trait yang disisipkan. Contoh Fungsi turunan dari klas dasar (Base) ditumpuk oleh fungsi yang disisipkan pada klas MyHelloWorld yaitu dari trait SayWorld. Aturan ini akan sama untuk fungsi yang didefinisikan di dalam klas MyHelloWorld. &amp;lt;?php class Base { public function sayHello() { echo 'Hello '; } } trait SayWorld { public function sayHello() { echo 'World!'; } } class MyHelloWorld extends Base { use SayWorld; } $o = new MyHelloWorld(); $o-&amp;gt;sayHello(); // output: // World Contoh lain dari urutan precedence &amp;lt;?php trait HelloWorld { public function sayHello() { echo 'Hello World!'; } } class DuniaTidakCukup { use HelloWorld; public function sayHello() { echo 'Halo Dunia!'; } } $o = new DuniaTidakCukup(); $o-&amp;gt;sayHello(); Contoh di atas akan menghasilkan keluaran: Halo Dunia! Trait Multiple Multiple trait dapat disisipkan ke dalam klas dengan mendaftarkannya pada statemen use, dipisahkan dengan koma. &amp;lt;?php trait Hello { public function sayHello() { echo 'Hello '; } } trait World { public function sayWorld() { echo 'World'; } } class MyHelloWorld { use Hello, World; public function sayExclamationMark() { echo '!'; } } $o = new MyHelloWorld(); $o-&amp;gt;sayHello(); $o-&amp;gt;sayWorld(); $o-&amp;gt;sayExclamationMark(); Resolusi Konflik Jika dua Trait disisipkan dengan nama yang sama maka akan terjadi kesalahan fatal, jika masalah tidak dipecahkan secara eksplisit. Untuk memecahkan konflik penamaan antara Trait pada klas yang sama, operator insteadof diperlukan untuk memilih tepat satu dari method yang konflik. Karena hal ini hanya boleh membuat satu pengecualian, operator as dapat digunakan untuk menambah alias ke suatu method. Perlu dicatat bahwa operator as tidak merubah nama method dan tidak mempengaruhi method lain. Contoh Pada contoh ini, klas Talker menggunakan trait A dan B. Karena trait A dan B memiliki konflik, maka klas ini akan perlu mendefinisikan penggunaan method smallTalk dari trait B dan method bigTalk dari trait A. Klas Alias_Talker menggunakan operator as untuk dapat menggunakan method bigTalk dari trait B dengan nama alias talk. &amp;lt;?php trait A { public function smallTalk() { echo 'a'; } public function bigTalk() { echo 'A'; } } trait B { public function smallTalk() { echo 'b'; } public function bigTalk() { echo 'B'; } } class Talker { use A, B { B::smallTalk insteadof A; A::bigTalk insteadof B; } } class Aliased_Talker { use A, B { B::smallTalk insteadof A; A::bigTalk insteadof B; B::bigTalk as talk; } } Merubah visibility metode Dengan menggunakan syntax as method pada trait dapat dirubah visibilitynya pada klas yang menggunakan trait. Contoh &amp;lt;?php trait HelloWorld { public function sayHello() { echo 'Hello world!'; } } // Merubah visibility fungsi sayHello class MyClass1 { use HelloWorld { sayHello as protected; } } // Alias method dengan perubahan visibility // Visibility sayHello tetap tidak berubah class MyClass2 { use HelloWorld { sayHello as private myPrivateHello; } } Trait disusun dari Trait Seperti pada klas yang dapat menggunakan trait, jadi trait juga dapat menggunakan trait lain. Dengan menggunakan satu atau lebih trait di dalam definisi trait, trait ini dapat disusun sebagian atau semuanya dari anggota yang mendefinisikan pada trait lain. Contoh &amp;lt;?php trait Hello { public function sayHello() { echo 'Hello'; } } trait World { public function sayWorld() { echo 'World'; } } trait HelloWorld { use Hello, World; } class MyHelloWorld { use HelloWorld; } $o = new MyHelloWorld(); $o-&amp;gt;sayHello(); $o-&amp;gt;sayWorld(); Anggota Trait Abstract Trait mendukung penggunaan abstract method untuk memaksa kebutuhan pada class yang menggunakan trait. Contoh abstract method &amp;lt;?php trait Hello { public function sayHelloWorld() { echo 'Hello' . $this-&amp;gt;getWorld(); } abstract public function getWorld(); } class MyHelloWorld { private $world; use Hello; public function getWorld() { return $this-&amp;gt;world; } public function setWorld($val) { $this-&amp;gt;world = $val; } } Anggota Static Trait Trait dapat mendefinisikan static property dan static method Contoh static variabel &amp;lt;?php trait Counter { public function inc() { static $c = 0; $c = $c + 1; echo &quot;$c\n&quot;; } } class C1 { use Counter; } class C2 { use Counter; } $o = new C1(); $o-&amp;gt;inc(); // echo 1 $p = new C2(); $p-&amp;gt;inc(); // echo 1 Contoh static method &amp;lt;?php trait StaticExample { public static function doSomething() { return 'Doing Something'; } } class Example { use StaticExample; } Example::doSomething(); Property Di dalam Trait kita juga dapat mendefinisikan property sama seperti pada klas. Contoh trait PropertiesTrait { public $x = 1; } class PropertiesExample { use PropertiesTrait; } $ex = new PropertiesExample(); $ex-&amp;gt;x; sekian. sumber: php.net</summary></entry></feed>