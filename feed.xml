<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="http://localhost:4040/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4040/" rel="alternate" type="text/html" /><updated>2020-05-19T20:57:48+07:00</updated><id>http://localhost:4040/feed.xml</id><title type="html">susilolab</title><subtitle>“Sebaik-baik manusia adalah yang paling bermanfaat bagi manusia” (HR. Ahmad, ath-Thabrani, ad-Daruqutni)</subtitle><author><name>Agus Susilo</name></author><entry><title type="html">Passing argument to app when using cargo run</title><link href="http://localhost:4040/rust/2020/05/19/passing-argument-to-app-when-using-cargo-run.html" rel="alternate" type="text/html" title="Passing argument to app when using cargo run" /><published>2020-05-19T03:00:00+07:00</published><updated>2020-05-19T03:00:00+07:00</updated><id>http://localhost:4040/rust/2020/05/19/passing-argument-to-app-when-using-cargo-run</id><content type="html" xml:base="http://localhost:4040/rust/2020/05/19/passing-argument-to-app-when-using-cargo-run.html">&lt;p&gt;Pernahkah membuat aplikasi cli dengan clap kemudian ingin menjalankan dengan &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo run --help&lt;/code&gt; tetapi output yang keluar malah helpnya dari cargo ?. Ternyata cargo punya syntax agar argument yang kita lewatkan ditujukan ke aplikasi bukan untuk cargo. Cukup tambahkan &lt;code class=&quot;highlighter-rouge&quot;&gt;--&lt;/code&gt; sebelum argument yang ada pada aplikasi.&lt;/p&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cargo run &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--help&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cargo run &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;app.toml &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Maka argument setelah setelah tanda &lt;code class=&quot;highlighter-rouge&quot;&gt;--&lt;/code&gt; hanya akan diproses oleh aplikasi yang kita kembangkan.&lt;/p&gt;

&lt;p&gt;Sekian, semoga bermanfaat.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Pernahkah membuat aplikasi cli dengan clap kemudian ingin menjalankan dengan cargo run --help tetapi output yang keluar malah helpnya dari cargo ?. Ternyata cargo punya syntax agar argument yang kita lewatkan ditujukan ke aplikasi bukan untuk cargo. Cukup tambahkan -- sebelum argument yang ada pada aplikasi. Contoh: $ cargo run -- --help $ cargo run -- --config=app.toml -v Maka argument setelah setelah tanda -- hanya akan diproses oleh aplikasi yang kita kembangkan. Sekian, semoga bermanfaat.</summary></entry><entry><title type="html">Cara Aman Mendapatkan data dari POST/GET pada Yii2</title><link href="http://localhost:4040/yii2/2020/05/15/cara-aman-mendapatkan-data-dari-post-get-pada-yii2.html" rel="alternate" type="text/html" title="Cara Aman Mendapatkan data dari POST/GET pada Yii2" /><published>2020-05-15T04:00:00+07:00</published><updated>2020-05-15T04:00:00+07:00</updated><id>http://localhost:4040/yii2/2020/05/15/cara-aman-mendapatkan-data-dari-post-get-pada-yii2</id><content type="html" xml:base="http://localhost:4040/yii2/2020/05/15/cara-aman-mendapatkan-data-dari-post-get-pada-yii2.html">&lt;p&gt;Yii2 menyertakan fungsi-fungsi yang biasa sering kita gunakan secara lengkap dan aman, biasanya kita sering menggunakan fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;$_GET['nama_var']&lt;/code&gt; dan &lt;code class=&quot;highlighter-rouge&quot;&gt;$_POST['nama_var']&lt;/code&gt; untuk mendapatkan data dari user yang dikirim melalui post/get. namun cara tersebut kurang aman karena tidak adanya nilai default jika variabelnya kosong.&lt;/p&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;SELECT * FROM user WHERE id = &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Agar variabel &lt;code class=&quot;highlighter-rouge&quot;&gt;$id&lt;/code&gt; lebih aman maka gunakan fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;get&lt;/code&gt; atau &lt;code class=&quot;highlighter-rouge&quot;&gt;post&lt;/code&gt; yang terdapat pada class &lt;code class=&quot;highlighter-rouge&quot;&gt;yii\web\Request&lt;/code&gt; yang secara global terdapat pada &lt;code class=&quot;highlighter-rouge&quot;&gt;Yii::$app-&amp;gt;request&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Yii&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Atau bisa ditambahkan kondisi untuk memeriksa variabel id&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// if ((int)$id &amp;lt; 1) {&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//     throw new \yii\web\HttpException(403, 'ID tidak benar');&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// }&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;SELECT * FROM user WHERE id = &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Untuk query-nya agar lebih aman biasakan pakai punyanya Yii2 yaitu class &lt;code class=&quot;highlighter-rouge&quot;&gt;yii\db\Command&lt;/code&gt; atau &lt;code class=&quot;highlighter-rouge&quot;&gt;yii\db\Query&lt;/code&gt; karena minim kemungkinan terkena SQLInjection.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Yii&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Yii&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;db&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'SELECT * FROM user WHERE id = :id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;':id'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;queryOne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Untuk variabel &lt;code class=&quot;highlighter-rouge&quot;&gt;$_POST&lt;/code&gt; juga sama dengan get, tinggal ganti fungsi get dengan post.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Yii&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Demikian semoga dapat bermanfaat dan terima kasih sudah mampir ke blog saya ini.&lt;/p&gt;

&lt;p&gt;Sekian.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Yii2 menyertakan fungsi-fungsi yang biasa sering kita gunakan secara lengkap dan aman, biasanya kita sering menggunakan fungsi $_GET['nama_var'] dan $_POST['nama_var'] untuk mendapatkan data dari user yang dikirim melalui post/get. namun cara tersebut kurang aman karena tidak adanya nilai default jika variabelnya kosong. Contoh: $id = $_GET['id']; $query = &quot;SELECT * FROM user WHERE id = $id&quot;; Agar variabel $id lebih aman maka gunakan fungsi get atau post yang terdapat pada class yii\web\Request yang secara global terdapat pada Yii::$app-&amp;gt;request. $id = Yii::$app-&amp;gt;request-&amp;gt;get('id', 0); // Atau bisa ditambahkan kondisi untuk memeriksa variabel id // if ((int)$id &amp;lt; 1) { // throw new \yii\web\HttpException(403, 'ID tidak benar'); // } $query = &quot;SELECT * FROM user WHERE id = $id&quot;; Untuk query-nya agar lebih aman biasakan pakai punyanya Yii2 yaitu class yii\db\Command atau yii\db\Query karena minim kemungkinan terkena SQLInjection. $id = Yii::$app-&amp;gt;request-&amp;gt;get('id', 0); $result = Yii::$app-&amp;gt;db -&amp;gt;createCommand('SELECT * FROM user WHERE id = :id', [':id' =&amp;gt; $id]) -&amp;gt;queryOne(); Untuk variabel $_POST juga sama dengan get, tinggal ganti fungsi get dengan post. $id = Yii::$app-&amp;gt;request-&amp;gt;post('id', 0); Demikian semoga dapat bermanfaat dan terima kasih sudah mampir ke blog saya ini. Sekian.</summary></entry><entry><title type="html">Mengenal Tipe Data Dasar pada Rust</title><link href="http://localhost:4040/rust/2020/05/15/mengenal-tipe-data-dasar-pada-rust.html" rel="alternate" type="text/html" title="Mengenal Tipe Data Dasar pada Rust" /><published>2020-05-15T03:00:00+07:00</published><updated>2020-05-15T03:00:00+07:00</updated><id>http://localhost:4040/rust/2020/05/15/mengenal-tipe-data-dasar-pada-rust</id><content type="html" xml:base="http://localhost:4040/rust/2020/05/15/mengenal-tipe-data-dasar-pada-rust.html">&lt;p&gt;Rust memiliki beberapa tipe data dasar antara lain&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;booleans - &lt;code class=&quot;highlighter-rouge&quot;&gt;bool&lt;/code&gt; untuk data berupa benar/salah true dan false&lt;/li&gt;
  &lt;li&gt;integer tak bertanda - &lt;code class=&quot;highlighter-rouge&quot;&gt;u8&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;u32&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;u64&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;u128&lt;/code&gt; untuk mewakili bilangan bulat positif&lt;/li&gt;
  &lt;li&gt;integer bertanda - &lt;code class=&quot;highlighter-rouge&quot;&gt;i8&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;i32&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;i64&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;i128&lt;/code&gt; untuk mewakili bilangan bulat positif dan negatif&lt;/li&gt;
  &lt;li&gt;pointer sized integer - &lt;code class=&quot;highlighter-rouge&quot;&gt;usize&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;isize&lt;/code&gt; untuk mewakili data yang berindex dan memiliki ukuran dimemori&lt;/li&gt;
  &lt;li&gt;bilangan pecah - &lt;code class=&quot;highlighter-rouge&quot;&gt;f32&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;f64&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;terkait text - &lt;code class=&quot;highlighter-rouge&quot;&gt;str&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;chr&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;tuple - &lt;code class=&quot;highlighter-rouge&quot;&gt;(value, value, ...)&lt;/code&gt; untuk data berurutan dengan ukuran tetap&lt;/li&gt;
  &lt;li&gt;slices - &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;[T]&lt;/code&gt; untuk mewakili data berurutan pada memori atau biasa dikenal dengan nama array/larik&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Untuk tipe data text mungkin akan lebih komplek dari pada yang biasa kamu gunakan pada bahasa pemrogramana lain dan tidak akan dibahas disini.&lt;/p&gt;

&lt;p&gt;Catatan bahwa tipe data numerik dapat ditulis tipenya secara eksplisit dengan menambahkan tipe setelah angka. (contoh: 12u32)&lt;/p&gt;

&lt;p&gt;Contoh kodenya&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angka&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nama&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Agus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Untuk membuat variabel Rust memiliki keyword &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt; yang berguna untuk mendefinisikan variabel dan default variabelnya immutable atau tidak dapat dirubah.&lt;/p&gt;

&lt;p&gt;Rust memiliki fitur Type Inference yang sangat berguna bagi pengembang, jadi kita boleh membuat variabel tanpa menyebutkan tipe datanya seperti pada contoh di atas.&lt;/p&gt;

&lt;p&gt;Contoh kode lengkap:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angka&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// defaultnya i32&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nama&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Agus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;// defaultnya &amp;amp;str&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angka_lain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20u32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;usize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1u&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jutaan&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1_000_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bil_pecah&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;f64&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello world!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tuple&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slices&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{} {} {} {} {} {} {} {:?} {:?}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;angka&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;nama&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;angka_lain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;memsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jutaan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bil_pecah&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tuple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;slices&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Pada variabel &lt;code class=&quot;highlighter-rouge&quot;&gt;jutaan&lt;/code&gt; di atas Rust juga membolehkan menulis angka dengan menambahkan underscore agar angka lebih mudah terbaca.&lt;/p&gt;

&lt;p&gt;Selain tipe data yang saya sebutkan di atas Rust masih memiliki tipe data lain seperti &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Vector&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;HashMap&lt;/code&gt;. Insya Allah pada kesempatan berikutnya saya akan membahasa tentang konversi dari tipe data satu ke tipe data lain dan juga tentang &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;str&lt;/code&gt; dan &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Semoga pengenalan tipe data ini dapat bermanfaat. sekian.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Rust memiliki beberapa tipe data dasar antara lain booleans - bool untuk data berupa benar/salah true dan false integer tak bertanda - u8, u32, u64, u128 untuk mewakili bilangan bulat positif integer bertanda - i8, i32, i64, i128 untuk mewakili bilangan bulat positif dan negatif pointer sized integer - usize, isize untuk mewakili data yang berindex dan memiliki ukuran dimemori bilangan pecah - f32, f64 terkait text - str, chr tuple - (value, value, ...) untuk data berurutan dengan ukuran tetap slices - &amp;amp;[T] untuk mewakili data berurutan pada memori atau biasa dikenal dengan nama array/larik Untuk tipe data text mungkin akan lebih komplek dari pada yang biasa kamu gunakan pada bahasa pemrogramana lain dan tidak akan dibahas disini. Catatan bahwa tipe data numerik dapat ditulis tipenya secara eksplisit dengan menambahkan tipe setelah angka. (contoh: 12u32) Contoh kodenya let angka = 10; let nama = &quot;Agus&quot;; Untuk membuat variabel Rust memiliki keyword let yang berguna untuk mendefinisikan variabel dan default variabelnya immutable atau tidak dapat dirubah. Rust memiliki fitur Type Inference yang sangat berguna bagi pengembang, jadi kita boleh membuat variabel tanpa menyebutkan tipe datanya seperti pada contoh di atas. Contoh kode lengkap: let angka = 10; // defaultnya i32 let nama = &quot;Agus&quot;; // defaultnya &amp;amp;str let angka_lain = 20u32; let memsize: usize = 1usize; let jutaan = 1_000_000; let bil_pecah: f64 = 1.00; let hello: String = String::from(&quot;Hello world!&quot;); let tuple = (1, 2, 3); let slices = &amp;amp;[1, 2, 3]; println!(&quot;{} {} {} {} {} {} {} {:?} {:?}&quot;, angka, nama, angka_lain, memsize, jutaan, bil_pecah, hello, tuple, slices ); Pada variabel jutaan di atas Rust juga membolehkan menulis angka dengan menambahkan underscore agar angka lebih mudah terbaca. Selain tipe data yang saya sebutkan di atas Rust masih memiliki tipe data lain seperti String, Vector, HashMap. Insya Allah pada kesempatan berikutnya saya akan membahasa tentang konversi dari tipe data satu ke tipe data lain dan juga tentang &amp;amp;str dan String Semoga pengenalan tipe data ini dapat bermanfaat. sekian.</summary></entry><entry><title type="html">Mengenal Bahasa Pemrograman Rust</title><link href="http://localhost:4040/rust/2020/05/14/mengenal-bahasa-pemrograman-rust.html" rel="alternate" type="text/html" title="Mengenal Bahasa Pemrograman Rust" /><published>2020-05-14T08:00:00+07:00</published><updated>2020-05-14T08:00:00+07:00</updated><id>http://localhost:4040/rust/2020/05/14/mengenal-bahasa-pemrograman-rust</id><content type="html" xml:base="http://localhost:4040/rust/2020/05/14/mengenal-bahasa-pemrograman-rust.html">&lt;p&gt;Rust adalah bahasa pemrograman multi-paradigma yang fokus pada performa dan keamanan terutama &lt;code class=&quot;highlighter-rouge&quot;&gt;safe concurrency&lt;/code&gt;, 
Rust secara syntax mirip C++ tetapi menyediakan kemanan memory tanpa menggunakan Garbage Collector pada pengelolaan memorinya. (wikipedia)&lt;/p&gt;

&lt;p&gt;Menurut website resmi rust-lang.org yang lama, rust adalah&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;itu artinya Rust berjalan sangat cepat, mencegah segfaults dan menjamin keamanan thread tanpa garbage collector.&lt;/p&gt;

&lt;p&gt;dengan beberapa fitur seperti&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;zero-cost abstractions&lt;/li&gt;
  &lt;li&gt;move semantics&lt;/li&gt;
  &lt;li&gt;guaranteed memory safety&lt;/li&gt;
  &lt;li&gt;threads without data races&lt;/li&gt;
  &lt;li&gt;trait-based generics&lt;/li&gt;
  &lt;li&gt;pattern matching&lt;/li&gt;
  &lt;li&gt;type inference&lt;/li&gt;
  &lt;li&gt;minimal runtime&lt;/li&gt;
  &lt;li&gt;efficient C bindings&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;menginstall-rust&quot;&gt;Menginstall Rust&lt;/h3&gt;

&lt;p&gt;Salah satu yang membuat saya tertarik termasuk pada instalasinya yang sangat mudah dan rust juga menyediakan &lt;a href=&quot;https://play.rust-lang.org/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Rust Playground&lt;/code&gt;&lt;/a&gt; sebagai tempat mencoba kode rust tanpa harus menginstal dikomputermu.&lt;/p&gt;

&lt;h4 id=&quot;rustup-installer-rust-dan-alat-pengelola-versi&quot;&gt;Rustup: Installer rust dan alat pengelola versi&lt;/h4&gt;

&lt;p&gt;Cara install paling adalah mudah adalah menggunakan rustup yang merupakan installer resmi dari rust-lang. Installer ini mendukung 3 sistem operasi seperti linux, mac dan windows. Jika kamu menggunakan sistem operasi berbasis unix, cukup copas kode berikut ke terminal Anda&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;curl &lt;span class=&quot;nt&quot;&gt;--proto&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'=https'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--tlsv1&lt;/span&gt;.2 &lt;span class=&quot;nt&quot;&gt;-sSf&lt;/span&gt; https://sh.rustup.rs | sh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Jika kamu menggunakan windows 64bit download dan jalankan file berikut &lt;a href=&quot;https://win.rustup.rs/x86_64&quot;&gt;rustup-init.exe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Jika kamu menggunakan windows 32bit download dan jalankan file berikut &lt;a href=&quot;https://win.rustup.rs/i686&quot;&gt;rustup-init.exe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Setelah instalasi selesai kamu bisa memeriksa di terminal untuk memastikan apakah Rust sudah terinstall atau belum dengan mengetik perintah berikut ini, jika outputnya seperti pada gambar berikut ini maka instalasi Rust sukses.
&lt;img src=&quot;/assets/img/20200406-rustup-show.png&quot; alt=&quot;rustup-show&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;hello-world&quot;&gt;Hello World&lt;/h4&gt;

&lt;p&gt;Untuk pengenalan dasar rust kita akan membuat aplikasi sederhana yang hanya akan mencetak tulisan &lt;code class=&quot;highlighter-rouge&quot;&gt;Hello World&lt;/code&gt; pada konsole.&lt;/p&gt;

&lt;p&gt;Buat file dengan &lt;code class=&quot;highlighter-rouge&quot;&gt;hello.rs&lt;/code&gt; kemudian ketikan kode seperti berikut ini.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Kemudian kompile dengan mengetikan perintah berikut ini pada terminal.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rustc hello.rs&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Lalu jalankan dengan perintah&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./hello
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;Hello World&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;cargo&quot;&gt;Cargo&lt;/h4&gt;

&lt;p&gt;Untuk aplikasi sederhana penggunaan file tunggal tidak ada masalah namun untuk aplikasi besar disarankan untuk menggunakan aplikasi bernama &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo&lt;/code&gt; adalah alat untuk membangun aplikasi dan pengelola paket bawaan dari Rust. Dengan adanya cargo membuat aplikasi kecil ataupun besar menjadi mudah.&lt;/p&gt;

&lt;p&gt;Nah untuk pengenalan kita akan membuat aplikasi sederhana dengan menggunakan cargo dan aplikasi ini hanya akan mencetak &lt;code class=&quot;highlighter-rouge&quot;&gt;Hello, world!&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ok berikut ini perintah dari cargo yang akan kita gunakan&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt; untuk membuat project baru&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt; untuk menjalankan project&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Buat project dengan nama &lt;code class=&quot;highlighter-rouge&quot;&gt;hello_rust&lt;/code&gt; dengan mengetik perintah berikut ini ke terminal&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cargo new hello_rust&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Maka cargo akan mengenerate-kan project seperti ini&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;hello_rust
|-- Cargo.toml
|-- src
   |-- main.rs&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Cargo.toml&lt;/code&gt; adalah file manifest dari Rust, dimana menyimpan metadata project kita dan dependecy-nya.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;main.rs&lt;/code&gt; adalah file dimana aplikasi kita akan ditulis.&lt;/p&gt;

&lt;p&gt;Kita langsung bisa menjalankan aplikasi dengan mengetik&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cargo run
   Compiling hello_rust v0.1.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/tmp/hello_rust&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    Finished dev &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;unoptimized + debuginfo] target&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.63s
     Running &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;target/debug/hello_rust&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
Hello, world!&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Cukup sekian dari saya tentang pengenalan bahasa pemrograman Rust, semoga bermanfaat.&lt;/p&gt;

&lt;p&gt;Jika kamu berkenan membaca artikel dengan bahasa inggris saya sarankan langsung ke &lt;a href=&quot;https://www.rust-lang.org/learn&quot;&gt;website resmi rust&lt;/a&gt; untuk mempelajari lebih lanjut tentang rust&lt;/p&gt;

&lt;p&gt;Wassalam.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Rust adalah bahasa pemrograman multi-paradigma yang fokus pada performa dan keamanan terutama safe concurrency, Rust secara syntax mirip C++ tetapi menyediakan kemanan memory tanpa menggunakan Garbage Collector pada pengelolaan memorinya. (wikipedia) Menurut website resmi rust-lang.org yang lama, rust adalah Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety. itu artinya Rust berjalan sangat cepat, mencegah segfaults dan menjamin keamanan thread tanpa garbage collector. dengan beberapa fitur seperti zero-cost abstractions move semantics guaranteed memory safety threads without data races trait-based generics pattern matching type inference minimal runtime efficient C bindings Menginstall Rust Salah satu yang membuat saya tertarik termasuk pada instalasinya yang sangat mudah dan rust juga menyediakan Rust Playground sebagai tempat mencoba kode rust tanpa harus menginstal dikomputermu. Rustup: Installer rust dan alat pengelola versi Cara install paling adalah mudah adalah menggunakan rustup yang merupakan installer resmi dari rust-lang. Installer ini mendukung 3 sistem operasi seperti linux, mac dan windows. Jika kamu menggunakan sistem operasi berbasis unix, cukup copas kode berikut ke terminal Anda curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh Jika kamu menggunakan windows 64bit download dan jalankan file berikut rustup-init.exe Jika kamu menggunakan windows 32bit download dan jalankan file berikut rustup-init.exe Setelah instalasi selesai kamu bisa memeriksa di terminal untuk memastikan apakah Rust sudah terinstall atau belum dengan mengetik perintah berikut ini, jika outputnya seperti pada gambar berikut ini maka instalasi Rust sukses. Hello World Untuk pengenalan dasar rust kita akan membuat aplikasi sederhana yang hanya akan mencetak tulisan Hello World pada konsole. Buat file dengan hello.rs kemudian ketikan kode seperti berikut ini. fn main() { println!(&quot;Hello World&quot;); } Kemudian kompile dengan mengetikan perintah berikut ini pada terminal. $ rustc hello.rs Lalu jalankan dengan perintah $ ./hello $ Hello World Cargo Untuk aplikasi sederhana penggunaan file tunggal tidak ada masalah namun untuk aplikasi besar disarankan untuk menggunakan aplikasi bernama cargo. cargo adalah alat untuk membangun aplikasi dan pengelola paket bawaan dari Rust. Dengan adanya cargo membuat aplikasi kecil ataupun besar menjadi mudah. Nah untuk pengenalan kita akan membuat aplikasi sederhana dengan menggunakan cargo dan aplikasi ini hanya akan mencetak Hello, world!. Ok berikut ini perintah dari cargo yang akan kita gunakan new untuk membuat project baru run untuk menjalankan project Buat project dengan nama hello_rust dengan mengetik perintah berikut ini ke terminal $ cargo new hello_rust Maka cargo akan mengenerate-kan project seperti ini hello_rust |-- Cargo.toml |-- src |-- main.rs Cargo.toml adalah file manifest dari Rust, dimana menyimpan metadata project kita dan dependecy-nya. main.rs adalah file dimana aplikasi kita akan ditulis. Kita langsung bisa menjalankan aplikasi dengan mengetik $ cargo run Compiling hello_rust v0.1.0 (/tmp/hello_rust) Finished dev [unoptimized + debuginfo] target(s) in 0.63s Running `target/debug/hello_rust` Hello, world! Cukup sekian dari saya tentang pengenalan bahasa pemrograman Rust, semoga bermanfaat. Jika kamu berkenan membaca artikel dengan bahasa inggris saya sarankan langsung ke website resmi rust untuk mempelajari lebih lanjut tentang rust Wassalam.</summary></entry><entry><title type="html">Cargo run multi binary</title><link href="http://localhost:4040/rust/2020/04/18/cargo-run-multi-binary.html" rel="alternate" type="text/html" title="Cargo run multi binary" /><published>2020-04-18T08:00:00+07:00</published><updated>2020-04-18T08:00:00+07:00</updated><id>http://localhost:4040/rust/2020/04/18/cargo-run-multi-binary</id><content type="html" xml:base="http://localhost:4040/rust/2020/04/18/cargo-run-multi-binary.html">&lt;p&gt;Pada saat kita menjalankan &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo run&lt;/code&gt; maka secara default &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo&lt;/code&gt; akan mencari file dengan nama &lt;code class=&quot;highlighter-rouge&quot;&gt;main.rs&lt;/code&gt;, bagaimana jika kita ingin menjalankan aplikasi yang berbeda nama file, misal kita ingin agar cargo dapat menjalankan file &lt;code class=&quot;highlighter-rouge&quot;&gt;publisher.rs&lt;/code&gt; atau &lt;code class=&quot;highlighter-rouge&quot;&gt;subscriber.rs&lt;/code&gt; pada saat kita ketik perintah &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo run&lt;/code&gt;. Maka kita bisa menggunakan parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;--bin nama_binary&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cargo run &lt;span class=&quot;nt&quot;&gt;--bin&lt;/span&gt; publisher
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cargo run &lt;span class=&quot;nt&quot;&gt;--bin&lt;/span&gt; subscriber&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Agar cargo mengenali pada saat kita menambahkan parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;--bin nama_binary&lt;/code&gt; maka perlu ditambahkan setingan pada file &lt;code class=&quot;highlighter-rouge&quot;&gt;Cargo.toml&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;[package]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;rabbit&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;authors&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Agus Susilo &amp;lt;smartgdi@gmail.com&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;edition&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;2018&quot;&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;[[bin]]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;publisher&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;src/publisher.rs&quot;&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;[[bin]]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;subscriber&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;src/subscriber.rs&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Dengan begini cargo akan mengetahui binary mana yang harus dijalankan selain pada &lt;code class=&quot;highlighter-rouge&quot;&gt;main.rs&lt;/code&gt;. Kita dapat mendefinisikan nama binary sebanyak mungkin.&lt;/p&gt;

&lt;p&gt;Sekian, semoga bermanfaat.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Pada saat kita menjalankan cargo run maka secara default cargo akan mencari file dengan nama main.rs, bagaimana jika kita ingin menjalankan aplikasi yang berbeda nama file, misal kita ingin agar cargo dapat menjalankan file publisher.rs atau subscriber.rs pada saat kita ketik perintah cargo run. Maka kita bisa menggunakan parameter --bin nama_binary: $ cargo run --bin publisher $ cargo run --bin subscriber Agar cargo mengenali pada saat kita menambahkan parameter --bin nama_binary maka perlu ditambahkan setingan pada file Cargo.toml. [package] name = &quot;rabbit&quot; version = &quot;0.1.0&quot; authors = [&quot;Agus Susilo &amp;lt;smartgdi@gmail.com&amp;gt;&quot;] edition = &quot;2018&quot; [[bin]] name = &quot;publisher&quot; path = &quot;src/publisher.rs&quot; [[bin]] name = &quot;subscriber&quot; path = &quot;src/subscriber.rs&quot; Dengan begini cargo akan mengetahui binary mana yang harus dijalankan selain pada main.rs. Kita dapat mendefinisikan nama binary sebanyak mungkin. Sekian, semoga bermanfaat.</summary></entry><entry><title type="html">Setting PATH linux pada shell zsh</title><link href="http://localhost:4040/linux/2020/04/18/setting-path-linux-pada-shell-zsh.html" rel="alternate" type="text/html" title="Setting PATH linux pada shell zsh" /><published>2020-04-18T08:00:00+07:00</published><updated>2020-04-18T08:00:00+07:00</updated><id>http://localhost:4040/linux/2020/04/18/setting-path-linux-pada-shell-zsh</id><content type="html" xml:base="http://localhost:4040/linux/2020/04/18/setting-path-linux-pada-shell-zsh.html">&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt; merupakan variabel shell yang akan menjadi acuan saat kita menjalankan perintah pada terminal dilinux. Shell akan mencari file binary dengan melihat variabel PATH. Misal kita ingin membuat custom command dengan program bash sederhana yang akan menjalankan aplikasi composer tanpa harus harus menyebut command php. contoh:&lt;/p&gt;

&lt;p&gt;simpan dengan nama &lt;code class=&quot;highlighter-rouge&quot;&gt;composer&lt;/code&gt; dan letakkan di $HOME/bin&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

php &lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.local/bin/composer.phar &lt;span class=&quot;nv&quot;&gt;$*&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Agar command &lt;code class=&quot;highlighter-rouge&quot;&gt;composer&lt;/code&gt; yang kita buat di atas dapat dijalankan difolder mana saja maka perlu kita tambahkan pada variabel &lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt;. untuk shell bash bisa kita tambahkan pada file &lt;code class=&quot;highlighter-rouge&quot;&gt;$HOME/.bashrc&lt;/code&gt; atau &lt;code class=&quot;highlighter-rouge&quot;&gt;$HOME/.bash_profile&lt;/code&gt; dan untuk shell zsh semua setingan ada pada lokasi &lt;code class=&quot;highlighter-rouge&quot;&gt;$HOME/.zshrc&lt;/code&gt; atau &lt;code class=&quot;highlighter-rouge&quot;&gt;$HOME/.zprofile&lt;/code&gt;, Kita tinggal menambahkan dengan syntax seperti berikut ini&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/bin:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Kemudian agar zsh/ bash mereload file konfigurasi baru gunakan perintah &lt;code class=&quot;highlighter-rouge&quot;&gt;source ~/.zshrc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;sekian&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">PATH merupakan variabel shell yang akan menjadi acuan saat kita menjalankan perintah pada terminal dilinux. Shell akan mencari file binary dengan melihat variabel PATH. Misal kita ingin membuat custom command dengan program bash sederhana yang akan menjalankan aplikasi composer tanpa harus harus menyebut command php. contoh: simpan dengan nama composer dan letakkan di $HOME/bin #!/bin/bash php $HOME/.local/bin/composer.phar $* Agar command composer yang kita buat di atas dapat dijalankan difolder mana saja maka perlu kita tambahkan pada variabel PATH. untuk shell bash bisa kita tambahkan pada file $HOME/.bashrc atau $HOME/.bash_profile dan untuk shell zsh semua setingan ada pada lokasi $HOME/.zshrc atau $HOME/.zprofile, Kita tinggal menambahkan dengan syntax seperti berikut ini export PATH=$HOME/bin:$PATH Kemudian agar zsh/ bash mereload file konfigurasi baru gunakan perintah source ~/.zshrc. sekian</summary></entry><entry><title type="html">Hg pull dan push dengan switch config antara default dan remote</title><link href="http://localhost:4040/bash/cli/2020/04/14/hg-pull-push-switch-config.html" rel="alternate" type="text/html" title="Hg pull dan push dengan switch config antara default dan remote" /><published>2020-04-14T08:00:00+07:00</published><updated>2020-04-14T08:00:00+07:00</updated><id>http://localhost:4040/bash/cli/2020/04/14/hg-pull-push-switch-config</id><content type="html" xml:base="http://localhost:4040/bash/cli/2020/04/14/hg-pull-push-switch-config.html">&lt;p&gt;Ingin switch konfigurasi saat menjalankan hg pull dan push?. Misalkan kita punya 2 konfigurasi &lt;code class=&quot;highlighter-rouge&quot;&gt;default&lt;/code&gt; dan &lt;code class=&quot;highlighter-rouge&quot;&gt;remote&lt;/code&gt; maka kita dapat menjalankan hg pull dan push seperi berikut ini&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hg pull remote &lt;span class=&quot;nt&quot;&gt;--debug&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hg push default &lt;span class=&quot;nt&quot;&gt;--debug&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Letak konfig tsb ada di file hgrc&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;paths]
default &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ssh://username@192.168.1.100//home/username
remote &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ssh://username@example.com:5022//home/username&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Ingin switch konfigurasi saat menjalankan hg pull dan push?. Misalkan kita punya 2 konfigurasi default dan remote maka kita dapat menjalankan hg pull dan push seperi berikut ini $ hg pull remote --debug $ hg push default --debug Letak konfig tsb ada di file hgrc [paths] default = ssh://username@192.168.1.100//home/username remote = ssh://username@example.com:5022//home/username</summary></entry><entry><title type="html">Mengkompress file dengan tar di linux</title><link href="http://localhost:4040/bash/cli/2020/03/31/mengkompress-file-dengan-tar-di-linux.html" rel="alternate" type="text/html" title="Mengkompress file dengan tar di linux" /><published>2020-03-31T08:00:00+07:00</published><updated>2020-03-31T08:00:00+07:00</updated><id>http://localhost:4040/bash/cli/2020/03/31/mengkompress-file-dengan-tar-di-linux</id><content type="html" xml:base="http://localhost:4040/bash/cli/2020/03/31/mengkompress-file-dengan-tar-di-linux.html">&lt;p&gt;Bismillah,
Pernahkah temen-temen semua ingin mengkompress file di server linux tapi ndak tahu perintahnya apa?. Nah disini saya ingin berbagi tips bagaimana caranya mengkompres file/folder kedalam format tertentu dengan perintah &lt;code class=&quot;highlighter-rouge&quot;&gt;tar&lt;/code&gt;, berikut ini cara mengkompres file/folder dengan format mulai dari &lt;code class=&quot;highlighter-rouge&quot;&gt;.tar&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;tar.bz2&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;tar.gz&lt;/code&gt; dan &lt;code class=&quot;highlighter-rouge&quot;&gt;tar.xz&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;tarbz2&quot;&gt;tar.bz2&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;cjf nama_file.tar.bz2 nama_folder/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;ekstrak-file-tarbz2&quot;&gt;ekstrak file tar.bz2&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-jxvf&lt;/span&gt; nama_file.tar.bz2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;targz&quot;&gt;tar.gz&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;czf nama_file.tar.gz nama_folder/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;ekstrak-file-targz&quot;&gt;ekstrak file tar.gz&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-zxvf&lt;/span&gt; nama_file.tar.gz&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;tar&quot;&gt;.tar&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;cf nama_file.tar nama_folder/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;ekstrak-file-tar&quot;&gt;ekstrak file .tar&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-xvf&lt;/span&gt; nama_file.tar&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;tarxz&quot;&gt;tar.xz&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;cfJ nama_file.tar.xz folders/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-cvJf&lt;/span&gt; nama_file.tar.xz folders/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;ekstrak-file-tarxz&quot;&gt;ekstrak file tar.xz&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-xJf&lt;/span&gt; p.tar.xz&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Dari ke-4 format di atas yang paling kecil rasio kompresnya yaitu &lt;code class=&quot;highlighter-rouge&quot;&gt;tar.xz&lt;/code&gt; tetapi tidak didukung oleh windows. Jika kamu memilih kecepatan namun tidak terlalu memikirkan masalah ukuran file maka &lt;code class=&quot;highlighter-rouge&quot;&gt;tar.gz&lt;/code&gt; paling pas karena selain cepat juga hasil kompresnya lumayan kecil.&lt;/p&gt;

&lt;h4 id=&quot;tips-menghafal-perintah-di-atas&quot;&gt;Tips menghafal perintah di atas&lt;/h4&gt;
&lt;p&gt;Coba perhatikan perintah di atas semuanya menggunakan parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;cf&lt;/code&gt; tinggal kita menghafalkan huruf selain &lt;code class=&quot;highlighter-rouge&quot;&gt;c&lt;/code&gt; dan &lt;code class=&quot;highlighter-rouge&quot;&gt;f&lt;/code&gt; yaitu:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;j&lt;/td&gt;
      &lt;td&gt;Untuk format .tar.bz2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;z&lt;/td&gt;
      &lt;td&gt;Untuk format .tar.gz&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;J&lt;/td&gt;
      &lt;td&gt;Untuk format .tar.xz&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;_&lt;/td&gt;
      &lt;td&gt;Cuma c dan f, untuk format .tar&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Semoga bermanfaat, sekian.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Bismillah, Pernahkah temen-temen semua ingin mengkompress file di server linux tapi ndak tahu perintahnya apa?. Nah disini saya ingin berbagi tips bagaimana caranya mengkompres file/folder kedalam format tertentu dengan perintah tar, berikut ini cara mengkompres file/folder dengan format mulai dari .tar, tar.bz2, tar.gz dan tar.xz. tar.bz2 $ tar cjf nama_file.tar.bz2 nama_folder/ ekstrak file tar.bz2 $ tar -jxvf nama_file.tar.bz2 tar.gz $ tar czf nama_file.tar.gz nama_folder/ ekstrak file tar.gz tar -zxvf nama_file.tar.gz .tar $ tar cf nama_file.tar nama_folder/ ekstrak file .tar $ tar -xvf nama_file.tar tar.xz $ tar cfJ nama_file.tar.xz folders/ $ tar -cvJf nama_file.tar.xz folders/ ekstrak file tar.xz $ tar -xJf p.tar.xz Dari ke-4 format di atas yang paling kecil rasio kompresnya yaitu tar.xz tetapi tidak didukung oleh windows. Jika kamu memilih kecepatan namun tidak terlalu memikirkan masalah ukuran file maka tar.gz paling pas karena selain cepat juga hasil kompresnya lumayan kecil. Tips menghafal perintah di atas Coba perhatikan perintah di atas semuanya menggunakan parameter cf tinggal kita menghafalkan huruf selain c dan f yaitu: j Untuk format .tar.bz2 z Untuk format .tar.gz J Untuk format .tar.xz _ Cuma c dan f, untuk format .tar Semoga bermanfaat, sekian.</summary></entry><entry><title type="html">Menulis NIF Rust dengan Rustler</title><link href="http://localhost:4040/elixir/2020/03/29/menulis-nif-rust-dengan-rustler.html" rel="alternate" type="text/html" title="Menulis NIF Rust dengan Rustler" /><published>2020-03-29T08:00:00+07:00</published><updated>2020-03-29T08:00:00+07:00</updated><id>http://localhost:4040/elixir/2020/03/29/menulis-nif-rust-dengan-rustler</id><content type="html" xml:base="http://localhost:4040/elixir/2020/03/29/menulis-nif-rust-dengan-rustler.html">&lt;p&gt;Kali ini saya ingin berbagi pengetahuan mengenai cara menulis NIF dengan &lt;code class=&quot;highlighter-rouge&quot;&gt;Rustler&lt;/code&gt; tapi sebelum itu saya ingin mengenalkan apa itu &lt;code class=&quot;highlighter-rouge&quot;&gt;NIF&lt;/code&gt;. NIF kependekan dari Native Implemented Function yaitu memanggil fungsi dari pustaka luar. Kenapa harus menggunakan NIF? alasan pertama karena beberapa fungsi pada pustaka tertentu tidak ada di elixir, alasan kedua yaitu agar performa aplikasi meningkat. NIF biasanya dibuat dengan bahasa C namun kali ini saya ingin menggunakan bahasa Rust karena alasan keamanan dan kecepatan. Pustaka rustler mengklaim library yang ditulis tidak akan menyebabkan virtual mesin BEAM crash sehingga kita tidak perlu khawatir dan fokus ke penulisan pustaka.&lt;/p&gt;

&lt;p&gt;Ok kita mulai saja, pertama buat project elixir dengan command mix. Pertama-tama buat project elixir dengan nama hello_nif&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mix new hello_nif&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/2019-10-14-new-mix-project.png&quot; alt=&quot;new-mix-project&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lalu tambahkan pustaka &lt;em&gt;rustler&lt;/em&gt; ke file mix.exs&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elixir&quot; data-lang=&quot;elixir&quot;&gt;&lt;span class=&quot;k&quot;&gt;defp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deps&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:rustler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;~&amp;gt; 0.21.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Kemudian jalankan mix deps.get&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mix deps.get&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/2019-10-14-mix-deps-get.png&quot; alt=&quot;mix-deps-get&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah itu compile project elixir dengan mix compile agar mix task dari rustler muncul&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mix compile&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/2019-10-14-mix-compile.png&quot; alt=&quot;mix-compile&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kemudian kita akan memulai membuat pustaka nif. Untuk nama modul kita samakan dengan nama project elixir yaitu &lt;strong&gt;HelloNif&lt;/strong&gt; dan nama libnya &lt;strong&gt;hello_nif&lt;/strong&gt;. rustler akan membuatkan rust project yang akan mengkompile otomatis saat kita menjalankan &lt;code class=&quot;highlighter-rouge&quot;&gt;mix compile&lt;/code&gt; atau &lt;code class=&quot;highlighter-rouge&quot;&gt;iex -S mix&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mix rustler.new
This is the name of the Elixir module the NIF module will be registered to.
Module name &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; HelloNif
This is the name used &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the generated Rust crate. The default is most likely fine.
Library name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;hellonif&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; hello_nif
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; creating native/hello_nif/.cargo/config
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; creating native/hello_nif/README.md
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; creating native/hello_nif/Cargo.toml
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; creating native/hello_nif/src/lib.rs
Ready to go! See /home/susilo/var/Elixir/hello_nif/native/hello_nif/README.md &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;further instructions.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Maka akan ada folder native/hello_nif didalam folder project elixir, folder ini akan berisi pustaka nif yang kita buat dengan perintah &lt;code class=&quot;highlighter-rouge&quot;&gt;mix rustler.new&lt;/code&gt;. source code dari lib.rs kurang lebih akan seperti dibawah ini&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;nd&quot;&gt;#[macro_use]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rustler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;rustler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Encoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Term&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;mod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;atoms&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;rustler_atoms!&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;atom&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;//atom error;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;//atom __true__ = &quot;true&quot;;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;//atom __false__ = &quot;false&quot;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;rustler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;rustler_export_nifs!&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;Elixir.HelloNif&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;add&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;'a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;'a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Term&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;'a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Term&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;'a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i64&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i64&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nf&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;atoms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Kode diatas hanya ada satu fungsi yaitu &lt;code class=&quot;highlighter-rouge&quot;&gt;add&lt;/code&gt; dengan 2 parameter berupa angka. &lt;code class=&quot;highlighter-rouge&quot;&gt;rustler_atoms!&lt;/code&gt; berguna untuk membuat atom elixir dan &lt;code class=&quot;highlighter-rouge&quot;&gt;rustler::rustler_export_nifs!&lt;/code&gt; berguna untuk mengexport modul dan fungsinya sehingga dapat diakses dari elixir.&lt;/p&gt;

&lt;p&gt;Langkah selanjutnya adalah menambah informasi agar mix dapat mengkompile pustaka yang kita buat. tambahkan custom compiler dan daftar pustaka nif ke dalam fungsi project, lalu buat fungsi rustler_crates yang memuat lokasi pustaka nif.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elixir&quot; data-lang=&quot;elixir&quot;&gt;&lt;span class=&quot;k&quot;&gt;defmodule&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HelloNif&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MixProject&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Mix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Project&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;project&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;compilers:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:rustler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Mix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compilers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;rustler_crates:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rustler_crates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;defp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rustler_crates&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;hello_nif:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;path:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;native/hello_nif&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;mode:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Mix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:prod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:release&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)],&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Langkah selanjutnya adalah menambahkan &lt;code class=&quot;highlighter-rouge&quot;&gt;use Rustler&lt;/code&gt; dan definisi nama fungsi pada modul &lt;code class=&quot;highlighter-rouge&quot;&gt;HelloNif&lt;/code&gt; sehingga fungsi yang dibuat dengan rust dapat diakses di dalam elixir.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elixir&quot; data-lang=&quot;elixir&quot;&gt;&lt;span class=&quot;k&quot;&gt;defmodule&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HelloNif&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rustler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;otp_app:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:hello_nif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;crate:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:hello_nif&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:erlang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nif_error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:nif_not_loaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hello&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:world&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Kemudian kita bisa mengujinya menggunakan interaktif elixir atau &lt;code class=&quot;highlighter-rouge&quot;&gt;iex&lt;/code&gt; dengan cara mengetikan perintah berikut ini pada terminal&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;iex &lt;span class=&quot;nt&quot;&gt;-S&lt;/span&gt; mix&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Pada saat kita menjalankan perintah &lt;code class=&quot;highlighter-rouge&quot;&gt;iex -S mix&lt;/code&gt; library dari rustler akan otomatis mengkompile pustaka yang kita tulis dengan bahasa pemrograman rust.
&lt;img src=&quot;/assets/img/2020-03-25-iex-smix.png&quot; alt=&quot;mix-compile&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah rustler selesai mengkompile pustaka maka konsol &lt;code class=&quot;highlighter-rouge&quot;&gt;iex&lt;/code&gt; juga akan muncul. nah setelah muncul kita bisa mencoba mengakses fungsi yang telah kita buat dengan rust.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;iex&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;)&amp;gt;&lt;/span&gt; HelloNif.add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1, 2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;:ok, 3&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
iex&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2&lt;span class=&quot;o&quot;&gt;)&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Jika tidak ada error maka akan keluar pesan berupa tuple atom &lt;code class=&quot;highlighter-rouge&quot;&gt;:ok&lt;/code&gt; dan angka 3.&lt;/p&gt;

&lt;p&gt;Sekian semoga bermanfaat.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Kali ini saya ingin berbagi pengetahuan mengenai cara menulis NIF dengan Rustler tapi sebelum itu saya ingin mengenalkan apa itu NIF. NIF kependekan dari Native Implemented Function yaitu memanggil fungsi dari pustaka luar. Kenapa harus menggunakan NIF? alasan pertama karena beberapa fungsi pada pustaka tertentu tidak ada di elixir, alasan kedua yaitu agar performa aplikasi meningkat. NIF biasanya dibuat dengan bahasa C namun kali ini saya ingin menggunakan bahasa Rust karena alasan keamanan dan kecepatan. Pustaka rustler mengklaim library yang ditulis tidak akan menyebabkan virtual mesin BEAM crash sehingga kita tidak perlu khawatir dan fokus ke penulisan pustaka. Ok kita mulai saja, pertama buat project elixir dengan command mix. Pertama-tama buat project elixir dengan nama hello_nif $ mix new hello_nif Lalu tambahkan pustaka rustler ke file mix.exs defp deps do [ {:rustler, &quot;~&amp;gt; 0.21.0&quot;} ] end Kemudian jalankan mix deps.get $ mix deps.get Setelah itu compile project elixir dengan mix compile agar mix task dari rustler muncul $ mix compile Kemudian kita akan memulai membuat pustaka nif. Untuk nama modul kita samakan dengan nama project elixir yaitu HelloNif dan nama libnya hello_nif. rustler akan membuatkan rust project yang akan mengkompile otomatis saat kita menjalankan mix compile atau iex -S mix $ mix rustler.new This is the name of the Elixir module the NIF module will be registered to. Module name &amp;gt; HelloNif This is the name used for the generated Rust crate. The default is most likely fine. Library name (hellonif) &amp;gt; hello_nif * creating native/hello_nif/.cargo/config * creating native/hello_nif/README.md * creating native/hello_nif/Cargo.toml * creating native/hello_nif/src/lib.rs Ready to go! See /home/susilo/var/Elixir/hello_nif/native/hello_nif/README.md for further instructions. Maka akan ada folder native/hello_nif didalam folder project elixir, folder ini akan berisi pustaka nif yang kita buat dengan perintah mix rustler.new. source code dari lib.rs kurang lebih akan seperti dibawah ini #[macro_use] extern crate rustler; use rustler::{Encoder, Env, Error, Term}; mod atoms { rustler_atoms! { atom ok; //atom error; //atom __true__ = &quot;true&quot;; //atom __false__ = &quot;false&quot;; } } rustler::rustler_export_nifs! { &quot;Elixir.HelloNif&quot;, [ (&quot;add&quot;, 2, add) ], None } fn add&amp;lt;'a&amp;gt;(env: Env&amp;lt;'a&amp;gt;, args: &amp;amp;[Term&amp;lt;'a&amp;gt;]) -&amp;gt; Result&amp;lt;Term&amp;lt;'a&amp;gt;, Error&amp;gt; { let num1: i64 = args[0].decode()?; let num2: i64 = args[1].decode()?; Ok((atoms::ok(), num1 + num2).encode(env)) } Kode diatas hanya ada satu fungsi yaitu add dengan 2 parameter berupa angka. rustler_atoms! berguna untuk membuat atom elixir dan rustler::rustler_export_nifs! berguna untuk mengexport modul dan fungsinya sehingga dapat diakses dari elixir. Langkah selanjutnya adalah menambah informasi agar mix dapat mengkompile pustaka yang kita buat. tambahkan custom compiler dan daftar pustaka nif ke dalam fungsi project, lalu buat fungsi rustler_crates yang memuat lokasi pustaka nif. defmodule HelloNif.MixProject do use Mix.Project def project do [ ... compilers: [:rustler] ++ Mix.compilers(), rustler_crates: rustler_crates(), ... ] end defp rustler_crates do [ hello_nif: [path: &quot;native/hello_nif&quot;, mode: if(Mix.env() == :prod, do: :release, else: :debug)], ] end end Langkah selanjutnya adalah menambahkan use Rustler dan definisi nama fungsi pada modul HelloNif sehingga fungsi yang dibuat dengan rust dapat diakses di dalam elixir. defmodule HelloNif do use Rustler, otp_app: :hello_nif, crate: :hello_nif def add(_a, _b), do: :erlang.nif_error(:nif_not_loaded) def hello do :world end end Kemudian kita bisa mengujinya menggunakan interaktif elixir atau iex dengan cara mengetikan perintah berikut ini pada terminal $ iex -S mix Pada saat kita menjalankan perintah iex -S mix library dari rustler akan otomatis mengkompile pustaka yang kita tulis dengan bahasa pemrograman rust. Setelah rustler selesai mengkompile pustaka maka konsol iex juga akan muncul. nah setelah muncul kita bisa mencoba mengakses fungsi yang telah kita buat dengan rust. iex(1)&amp;gt; HelloNif.add(1, 2) {:ok, 3} iex(2)&amp;gt; Jika tidak ada error maka akan keluar pesan berupa tuple atom :ok dan angka 3. Sekian semoga bermanfaat.</summary></entry><entry><title type="html">Menggunakan Gnome Terminal sebagai default shell pada Tortoisehg</title><link href="http://localhost:4040/linux/2020/03/23/menggunakan-gnome-terminal-pada-tortoisehg.html" rel="alternate" type="text/html" title="Menggunakan Gnome Terminal sebagai default shell pada Tortoisehg" /><published>2020-03-23T08:00:00+07:00</published><updated>2020-03-23T08:00:00+07:00</updated><id>http://localhost:4040/linux/2020/03/23/menggunakan-gnome-terminal-pada-tortoisehg</id><content type="html" xml:base="http://localhost:4040/linux/2020/03/23/menggunakan-gnome-terminal-pada-tortoisehg.html">&lt;p&gt;Tortoisehg merupakan front-end GUI untuk &lt;em&gt;mercurial&lt;/em&gt; dan disini saya ingin berbagi bagaimana cara menseting &lt;code class=&quot;highlighter-rouge&quot;&gt;gnome-terminal&lt;/code&gt; sebagai default shell yang sebelumnya menggunakan default &lt;code class=&quot;highlighter-rouge&quot;&gt;xterm&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Caranya cukup mudah, buka Tortoisehg kemudian klik menu &lt;code class=&quot;highlighter-rouge&quot;&gt;File -&amp;gt; Settings&lt;/code&gt; kemudian klik ListBox &lt;code class=&quot;highlighter-rouge&quot;&gt;TortoiseHg&lt;/code&gt; lalu pada inputbox berlabel &lt;code class=&quot;highlighter-rouge&quot;&gt;Shell&lt;/code&gt; ketikan &lt;code class=&quot;highlighter-rouge&quot;&gt;gnome-terminal %(root)s. %(reponame)s&lt;/code&gt; kemudian klik Ok. tutup tortoisehg Anda dan buka lagi.
&lt;img src=&quot;/assets/img/02-20200325-gnome-shell-tortoisehg.png&quot; alt=&quot;mencoba-setingan-baru&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Untuk mencobanya klik kanan pada salah satu repo di &lt;code class=&quot;highlighter-rouge&quot;&gt;Repostory Registry&lt;/code&gt; kemudian klik terminal, jika tidak ada kendala gnome-terminal akan muncul.
&lt;img src=&quot;/assets/img/01-20200325-gnome-shell-tortoisehg.png&quot; alt=&quot;mencoba-setingan-baru&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sekian&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Tortoisehg merupakan front-end GUI untuk mercurial dan disini saya ingin berbagi bagaimana cara menseting gnome-terminal sebagai default shell yang sebelumnya menggunakan default xterm. Caranya cukup mudah, buka Tortoisehg kemudian klik menu File -&amp;gt; Settings kemudian klik ListBox TortoiseHg lalu pada inputbox berlabel Shell ketikan gnome-terminal %(root)s. %(reponame)s kemudian klik Ok. tutup tortoisehg Anda dan buka lagi. Untuk mencobanya klik kanan pada salah satu repo di Repostory Registry kemudian klik terminal, jika tidak ada kendala gnome-terminal akan muncul. Sekian</summary></entry></feed>