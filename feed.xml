<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-09-02T11:19:09+07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">susilolab</title><subtitle>“Sebaik-baik manusia adalah yang paling bermanfaat bagi manusia” (HR. Ahmad, ath-Thabrani, ad-Daruqutni)</subtitle><author><name>Agus Susilo</name></author><entry><title type="html">Memecah file dengan 7z cli dilinux</title><link href="http://localhost:4000/bash/cli/2019/09/02/split-file-di-7z-cli.html" rel="alternate" type="text/html" title="Memecah file dengan 7z cli dilinux" /><published>2019-09-02T08:00:00+07:00</published><updated>2019-09-02T08:00:00+07:00</updated><id>http://localhost:4000/bash/cli/2019/09/02/split-file-di-7z-cli</id><content type="html" xml:base="http://localhost:4000/bash/cli/2019/09/02/split-file-di-7z-cli.html">&lt;p&gt;Kadang kita butuh memecah file menjadi beberapa bagian agar dapat disalin ke flash disk terutama flash disk yang formatnya fat32. Fat32 hanya mampu menyalin file maksimal file berukuran 4GB. Berikut ini cara memecah file menggunakan 7z cli di linux:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;7z a &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-mx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0 &lt;span class=&quot;nt&quot;&gt;-v2500m&lt;/span&gt; namafile.7z folder_berkas/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Penjelasan parameternya&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;a&lt;/td&gt;
      &lt;td&gt;Perintah menambah berkas pada 7z&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-y&lt;/td&gt;
      &lt;td&gt;Kita paksa 7z agar mengiyakan semua konfirmasi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-mx=0&lt;/td&gt;
      &lt;td&gt;Tingkatan kompresi antara 0 s/d 7. 0 brarti tanpa kompresi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-v2500m&lt;/td&gt;
      &lt;td&gt;Berapa ukuran tiap file yang dipecah. ukuran bisa dalam b, k, m dan g&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nama_file.7z&lt;/td&gt;
      &lt;td&gt;Nama file yang diinginkan&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;folder_berkas/&lt;/td&gt;
      &lt;td&gt;Folder yang akan dipecah&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Khusus parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt; gunakan ukuran dibawahnya misal kita ingin memecah file menjadi 2G perfile maka gunakan ukuran &lt;code class=&quot;highlighter-rouge&quot;&gt;-v1900m&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;semoga bermanfaat&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Kadang kita butuh memecah file menjadi beberapa bagian agar dapat disalin ke flash disk terutama flash disk yang formatnya fat32. Fat32 hanya mampu menyalin file maksimal file berukuran 4GB. Berikut ini cara memecah file menggunakan 7z cli di linux: $ 7z a -y -mx=0 -v2500m namafile.7z folder_berkas/ Penjelasan parameternya a Perintah menambah berkas pada 7z -y Kita paksa 7z agar mengiyakan semua konfirmasi -mx=0 Tingkatan kompresi antara 0 s/d 7. 0 brarti tanpa kompresi -v2500m Berapa ukuran tiap file yang dipecah. ukuran bisa dalam b, k, m dan g nama_file.7z Nama file yang diinginkan folder_berkas/ Folder yang akan dipecah Khusus parameter -v gunakan ukuran dibawahnya misal kita ingin memecah file menjadi 2G perfile maka gunakan ukuran -v1900m semoga bermanfaat</summary></entry><entry><title type="html">Baca file di Elixir dengan with</title><link href="http://localhost:4000/elixir/2019/09/01/baca-file-di-elixir-dengan-with.html" rel="alternate" type="text/html" title="Baca file di Elixir dengan with" /><published>2019-09-01T15:00:00+07:00</published><updated>2019-09-01T15:00:00+07:00</updated><id>http://localhost:4000/elixir/2019/09/01/baca-file-di-elixir-dengan-with</id><content type="html" xml:base="http://localhost:4000/elixir/2019/09/01/baca-file-di-elixir-dengan-with.html">&lt;p&gt;Kita tahu elixir kebanyakan menggunakan kembalian berupa tuple &lt;code class=&quot;highlighter-rouge&quot;&gt;{:ok, hasil}&lt;/code&gt; jika sukses dan tuple &lt;code class=&quot;highlighter-rouge&quot;&gt;{:error, alasan}&lt;/code&gt; jika error pada fungsinya. Contoh kita akan membaca file dengan &lt;code class=&quot;highlighter-rouge&quot;&gt;File.read&lt;/code&gt; &lt;strong&gt;tanpa&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;with&lt;/code&gt; dan yang kedua &lt;strong&gt;dengan&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;with&lt;/code&gt;. Buat file &lt;code class=&quot;highlighter-rouge&quot;&gt;file_read_with.exs&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elixir&quot; data-lang=&quot;elixir&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Kode diatas jika file yang dibaca tidak ada maka akan error, untuk itu kita gunakan &lt;code class=&quot;highlighter-rouge&quot;&gt;with&lt;/code&gt; untuk menangani jika terjadi kondisi error.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elixir&quot; data-lang=&quot;elixir&quot;&gt;&lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hello.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reason&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Error read file: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reason&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;sekian.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Kita tahu elixir kebanyakan menggunakan kembalian berupa tuple {:ok, hasil} jika sukses dan tuple {:error, alasan} jika error pada fungsinya. Contoh kita akan membaca file dengan File.read tanpa with dan yang kedua dengan with. Buat file file_read_with.exs {:ok, content} = File.read(&quot;hello.txt&quot;) IO.puts content Kode diatas jika file yang dibaca tidak ada maka akan error, untuk itu kita gunakan with untuk menangani jika terjadi kondisi error. with {:ok, item} &amp;lt;- File.read(&quot;hello.txt&quot;) do IO.puts item else {:error, reason} -&amp;gt; IO.puts &quot;Error read file: #{reason}&quot; end sekian.</summary></entry><entry><title type="html">Run command di Elixir</title><link href="http://localhost:4000/elixir/2019/09/01/run-command-di-elixir.html" rel="alternate" type="text/html" title="Run command di Elixir" /><published>2019-09-01T15:00:00+07:00</published><updated>2019-09-01T15:00:00+07:00</updated><id>http://localhost:4000/elixir/2019/09/01/run-command-di-elixir</id><content type="html" xml:base="http://localhost:4000/elixir/2019/09/01/run-command-di-elixir.html">&lt;p&gt;Cara menjalankan command cli di elixir bisa langsung dicoba di&lt;code class=&quot;highlighter-rouge&quot;&gt;iex&lt;/code&gt; atau buat file elixir script(&lt;code class=&quot;highlighter-rouge&quot;&gt;.exs&lt;/code&gt;)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elixir&quot; data-lang=&quot;elixir&quot;&gt;&lt;span class=&quot;n&quot;&gt;iex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ls&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/home/agus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Desktop&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Documents&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Downloads&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Music&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Pictures&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Public&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Templates&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Videos&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Perintah &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; ini akan mengembalikan koleksi &lt;code class=&quot;highlighter-rouge&quot;&gt;tuple hasil&lt;/code&gt; dan &lt;code class=&quot;highlighter-rouge&quot;&gt;kode exit&lt;/code&gt;. Jika command yang dijalankan tidak ada didalam var &lt;strong&gt;PATH&lt;/strong&gt; maka elixir akan menampilkan error seperti ini:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elixir&quot; data-lang=&quot;elixir&quot;&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ErlangError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Erlang&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;error:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:enoent&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elixir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;ex:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;791&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ls1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/home/agus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Untuk mengolah hasil dari &lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; bisa menggunakan patter matching elixir, kemudian split file menggunakan fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;String.split&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elixir&quot; data-lang=&quot;elixir&quot;&gt;&lt;span class=&quot;n&quot;&gt;iex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exit_code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ls&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/home/agus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;iex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Desktop&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Documents&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Downloads&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Music&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Pictures&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Public&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s2&quot;&gt;&quot;Templates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Videos&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Nah setelah displit maka hasilnya sudah berupa &lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt; dan dapat diproses oleh fungsi lain dengan mudah.&lt;/p&gt;

&lt;p&gt;sekian.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Cara menjalankan command cli di elixir bisa langsung dicoba diiex atau buat file elixir script(.exs) iex(1)&amp;gt; System.cmd(&quot;ls&quot;, [&quot;/home/agus&quot;]) {&quot;Desktop\nDocuments\nDownloads\nMusic\nPictures\nPublic\nTemplates\nVideos\n&quot;, 0} Perintah cmd ini akan mengembalikan koleksi tuple hasil dan kode exit. Jika command yang dijalankan tidak ada didalam var PATH maka elixir akan menampilkan error seperti ini: ** (ErlangError) Erlang error: :enoent (elixir) lib/system.ex:791: System.cmd(&quot;ls1&quot;, [&quot;/home/agus&quot;], []) Untuk mengolah hasil dari cmd bisa menggunakan patter matching elixir, kemudian split file menggunakan fungsi String.split iex(1)&amp;gt; {res, exit_code} = System.cmd(&quot;ls&quot;, [&quot;/home/agus&quot;]) iex(2)&amp;gt; res |&amp;gt; String.split [&quot;Desktop&quot;, &quot;Documents&quot;, &quot;Downloads&quot;, &quot;Music&quot;, &quot;Pictures&quot;, &quot;Public&quot;, &quot;Templates&quot;, &quot;Videos&quot;] Nah setelah displit maka hasilnya sudah berupa list dan dapat diproses oleh fungsi lain dengan mudah. sekian.</summary></entry><entry><title type="html">Menseting dan menggunakan Job Queue pada Yii2</title><link href="http://localhost:4000/yii2/2019/08/31/menseting-dan-menggunakan-jobqueue-yii2.html" rel="alternate" type="text/html" title="Menseting dan menggunakan Job Queue pada Yii2" /><published>2019-08-31T18:30:00+07:00</published><updated>2019-08-31T18:30:00+07:00</updated><id>http://localhost:4000/yii2/2019/08/31/menseting-dan-menggunakan-jobqueue-yii2</id><content type="html" xml:base="http://localhost:4000/yii2/2019/08/31/menseting-dan-menggunakan-jobqueue-yii2.html">&lt;p&gt;Pada Yii2 sudah didukung dengan ektensi job queue yang memungkinkan kita menjalankan tugas secara asynkron via antrian. Job Queue pada yii2 mendukung &lt;strong&gt;DB&lt;/strong&gt;, &lt;strong&gt;Redis&lt;/strong&gt;, &lt;strong&gt;RabbitMQ&lt;/strong&gt;, &lt;strong&gt;AMQP&lt;/strong&gt;, &lt;strong&gt;BeansTalk&lt;/strong&gt;, &lt;strong&gt;ActiveMQ&lt;/strong&gt; dan &lt;strong&gt;Gearman&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Saya hanya akan sedikit berbagi job queue dengan redis sebagai backendnya. Saya list apa-apa yang akan kita lakukan.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Install ektensi yii2-queue&lt;/li&gt;
  &lt;li&gt;Seting queue di web.php dan console.php&lt;/li&gt;
  &lt;li&gt;Membuat klas tugas&lt;/li&gt;
  &lt;li&gt;Menjalankan queue cli&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pertama kita install dulu ektensi yii2-queue&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;php composer.phar require &lt;span class=&quot;nt&quot;&gt;--prefer-dist&lt;/span&gt; yiisoft/yii2-queue&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Kemudian kita perlu memasukan setingan yii2-queue ke file config console dan web&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// masukan pada file web.php dan console.php&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;'components'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'queue'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'class'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\yii\queue\redis\Queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'as log'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\yii\queue\LogBehavior&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Untuk file &lt;code class=&quot;highlighter-rouge&quot;&gt;console.php&lt;/code&gt; kita juga perlu memasukan queue ke konfig bootstrap seperti ini&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// console.log&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;'bootstrap'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'queue'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Langkah berikutnya adalah membuat klas job/tugas yang akan kita kirim ke queue yang harus dipisah menjadi klas. Klas ini wajib mendefinisikan fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;execute&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app\jobs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;yii\base\BaseObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DownloadJob&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BaseObject&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\yii\queue\JobInterface&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;file_put_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file_get_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Setelah kita membuat klas tugas maka kita dapat mengirim tugas dari mana saja seperti dari model, controller, module, view dll. Cara mengirim tugas ke queue seperti berikut ini:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Yii&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\app\jobs\Download&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'url'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'https://example.com/image.png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'file'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/tmp/image.png'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Langkah terakhir yang harus dilakukan adalah menjalankan console queue melalui terminal atau bisa dengan membuat service dilinux. cara menjalankan consolenya seperti dibawah. buka terminal lalu masuk ke folder dimana yii/yii.bat berada.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# jalankan semua queue dan exit setelah tidak ada queue&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yii queue/run &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# jalankan semua queue dan loop&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yii queue/listen &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Dengan adanya job queue akan mengurangi beban webserver dalam memproses request dan job queue tidak terkena timeout dari php. Contoh kasusnya bisa untuk mengirim email ke user secara masal atau mengenerate file xls yang jumlah barisnya ribuan atau pekerjaan yang sifatnya logging.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Pada Yii2 sudah didukung dengan ektensi job queue yang memungkinkan kita menjalankan tugas secara asynkron via antrian. Job Queue pada yii2 mendukung DB, Redis, RabbitMQ, AMQP, BeansTalk, ActiveMQ dan Gearman. Saya hanya akan sedikit berbagi job queue dengan redis sebagai backendnya. Saya list apa-apa yang akan kita lakukan. Install ektensi yii2-queue Seting queue di web.php dan console.php Membuat klas tugas Menjalankan queue cli Pertama kita install dulu ektensi yii2-queue $ php composer.phar require --prefer-dist yiisoft/yii2-queue Kemudian kita perlu memasukan setingan yii2-queue ke file config console dan web // masukan pada file web.php dan console.php ... 'components' =&amp;gt; [ 'queue' =&amp;gt; [ 'class' =&amp;gt; \yii\queue\redis\Queue::class, 'as log' =&amp;gt; \yii\queue\LogBehavior::class, ], ], ... Untuk file console.php kita juga perlu memasukan queue ke konfig bootstrap seperti ini // console.log ... 'bootstrap' =&amp;gt; [ 'queue', ], ... Langkah berikutnya adalah membuat klas job/tugas yang akan kita kirim ke queue yang harus dipisah menjadi klas. Klas ini wajib mendefinisikan fungsi execute. &amp;lt;?php namespace app\jobs; use yii\base\BaseObject; class DownloadJob extends BaseObject implements \yii\queue\JobInterface { public $url; public $file; public function execute($queue) { file_put_contents($this-&amp;gt;file, file_get_contents($this-&amp;gt;url)); } } Setelah kita membuat klas tugas maka kita dapat mengirim tugas dari mana saja seperti dari model, controller, module, view dll. Cara mengirim tugas ke queue seperti berikut ini: Yii::$app-&amp;gt;queue-&amp;gt;push(new \app\jobs\Download([ 'url' =&amp;gt; 'https://example.com/image.png', 'file' =&amp;gt; '/tmp/image.png' ])); Langkah terakhir yang harus dilakukan adalah menjalankan console queue melalui terminal atau bisa dengan membuat service dilinux. cara menjalankan consolenya seperti dibawah. buka terminal lalu masuk ke folder dimana yii/yii.bat berada. # jalankan semua queue dan exit setelah tidak ada queue $ yii queue/run -v # jalankan semua queue dan loop $ yii queue/listen -v Dengan adanya job queue akan mengurangi beban webserver dalam memproses request dan job queue tidak terkena timeout dari php. Contoh kasusnya bisa untuk mengirim email ke user secara masal atau mengenerate file xls yang jumlah barisnya ribuan atau pekerjaan yang sifatnya logging.</summary></entry><entry><title type="html">Menambah parameter pada routes helper Phoenix</title><link href="http://localhost:4000/elixir/2019/08/31/menambah-parameter-routes-helper-phoenix.html" rel="alternate" type="text/html" title="Menambah parameter pada routes helper Phoenix" /><published>2019-08-31T13:47:42+07:00</published><updated>2019-08-31T13:47:42+07:00</updated><id>http://localhost:4000/elixir/2019/08/31/menambah-parameter-routes-helper-phoenix</id><content type="html" xml:base="http://localhost:4000/elixir/2019/08/31/menambah-parameter-routes-helper-phoenix.html">&lt;p&gt;Tips singkat ini saya dapat saat membuat aplikasi todo sederhana dengan phoenix. kasusnya saya menambah custom rute &lt;code class=&quot;highlighter-rouge&quot;&gt;get /profile/edit/:id&lt;/code&gt; dengan parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;:id&lt;/code&gt;. awalnya saya pikir harus pakai key dan value.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erb&quot; data-lang=&quot;erb&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Edit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;to: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;user_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:edit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ternyata tidak dikenali oleh phoenix, akhirnya saya hapus key &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; dan sukses.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erb&quot; data-lang=&quot;erb&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Edit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;to: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;user_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:edit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;sekian.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Tips singkat ini saya dapat saat membuat aplikasi todo sederhana dengan phoenix. kasusnya saya menambah custom rute get /profile/edit/:id dengan parameter :id. awalnya saya pikir harus pakai key dan value. &amp;lt;%= link &quot;Edit&quot;, to: Routes.user_path(@conn, :edit, id: @user.id) %&amp;gt; Ternyata tidak dikenali oleh phoenix, akhirnya saya hapus key id dan sukses. &amp;lt;%= link &quot;Edit&quot;, to: Routes.user_path(@conn, :edit, @user.id) %&amp;gt; sekian.</summary></entry><entry><title type="html">Memanggil action controller tanpa request ke http di Yii2</title><link href="http://localhost:4000/yii2/2019/08/28/memanggil-action-controller-tanpa-request-http-di-yii2.html" rel="alternate" type="text/html" title="Memanggil action controller tanpa request ke http di Yii2" /><published>2019-08-28T19:44:42+07:00</published><updated>2019-08-28T19:44:42+07:00</updated><id>http://localhost:4000/yii2/2019/08/28/memanggil-action-controller-tanpa-request-http-di-yii2</id><content type="html" xml:base="http://localhost:4000/yii2/2019/08/28/memanggil-action-controller-tanpa-request-http-di-yii2.html">&lt;p&gt;Pernahkan kamu suatu kali ingin menjalankan aksi pada controller tanpa request ke http dengan browser atau curl.
Hanya sekedar ingin mengurangi waktu request ke server atau kamu tidak ingin membuat kode lagi hanya untuk mengambil data dari hasil proses controller tadi. Nah cara tersebut ternyata mudah kita lakukan di Yii2.&lt;/p&gt;

&lt;p&gt;Misal kita ingin memanggil action &lt;strong&gt;MenuProfile&lt;/strong&gt; dicontroller &lt;strong&gt;MenuController&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app\controllers\v1\MenuController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SiteController&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Controller&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;actionIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MenuController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'menu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Yii&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'menu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;runAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'menu-profile'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Variabel &lt;code class=&quot;highlighter-rouge&quot;&gt;$app&lt;/code&gt; berisi instance klas &lt;strong&gt;MenuController&lt;/strong&gt; dengan argumen sesuai dengan konstruktor klas induk &lt;code class=&quot;highlighter-rouge&quot;&gt;yii\web\Controller&lt;/code&gt; yaitu &lt;code class=&quot;highlighter-rouge&quot;&gt;public void __construct ( $id, $module, $config = [] )&lt;/code&gt; penjelasan argumennya sebagai berikut:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$id&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;id controller misalnya &lt;code class=&quot;highlighter-rouge&quot;&gt;menu&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$module&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;modul dari controller dan bisa diisi dengan &lt;code class=&quot;highlighter-rouge&quot;&gt;Yii::$app-&amp;gt;module&lt;/code&gt; atau &lt;code class=&quot;highlighter-rouge&quot;&gt;Yii::$app&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$config&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;bersifat opsional dan isinya berupa variabel public dari klas yang dipanggil atau klas induk dari klas yang dipanggil.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Kemudian fungsi &lt;strong&gt;runAction&lt;/strong&gt; memiliki 2 buah parameter yaitu &lt;strong&gt;nama action&lt;/strong&gt; (nama action formatnya akan dirubah ke lowercase stripped) dan parameter kedua yaitu argumen dari fungsi action yang dipanggil. misalnya seperti ini:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;actionMenuProfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// kode dari menu-profile	&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Maka parameter yang dapat disertakan adalah &lt;code class=&quot;highlighter-rouge&quot;&gt;['id' =&amp;gt; 1]&lt;/code&gt; contoh &lt;code class=&quot;highlighter-rouge&quot;&gt;$app-&amp;gt;runAction('menu-profile', ['id' =&amp;gt; 1])&lt;/code&gt;;&lt;/p&gt;

&lt;p&gt;sekian.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Pernahkan kamu suatu kali ingin menjalankan aksi pada controller tanpa request ke http dengan browser atau curl. Hanya sekedar ingin mengurangi waktu request ke server atau kamu tidak ingin membuat kode lagi hanya untuk mengambil data dari hasil proses controller tadi. Nah cara tersebut ternyata mudah kita lakukan di Yii2. Misal kita ingin memanggil action MenuProfile dicontroller MenuController &amp;lt;?php use app\controllers\v1\MenuController; class SiteController extends Controller { public function actionIndex() { $app = new MenuController('menu', Yii::$app, ['id' =&amp;gt; 'menu']); return $app-&amp;gt;runAction('menu-profile'); } } Variabel $app berisi instance klas MenuController dengan argumen sesuai dengan konstruktor klas induk yii\web\Controller yaitu public void __construct ( $id, $module, $config = [] ) penjelasan argumennya sebagai berikut: $id id controller misalnya menu $module modul dari controller dan bisa diisi dengan Yii::$app-&amp;gt;module atau Yii::$app $config bersifat opsional dan isinya berupa variabel public dari klas yang dipanggil atau klas induk dari klas yang dipanggil. Kemudian fungsi runAction memiliki 2 buah parameter yaitu nama action (nama action formatnya akan dirubah ke lowercase stripped) dan parameter kedua yaitu argumen dari fungsi action yang dipanggil. misalnya seperti ini: &amp;lt;?php public function actionMenuProfile($id) { // kode dari menu-profile } Maka parameter yang dapat disertakan adalah ['id' =&amp;gt; 1] contoh $app-&amp;gt;runAction('menu-profile', ['id' =&amp;gt; 1]); sekian.</summary></entry><entry><title type="html">Event Global Yii2</title><link href="http://localhost:4000/yii2/2019/03/06/event-global-yii2.html" rel="alternate" type="text/html" title="Event Global Yii2" /><published>2019-03-06T10:14:42+07:00</published><updated>2019-03-06T10:14:42+07:00</updated><id>http://localhost:4000/yii2/2019/03/06/event-global-yii2</id><content type="html" xml:base="http://localhost:4000/yii2/2019/03/06/event-global-yii2.html">&lt;p&gt;Event pada &lt;code class=&quot;highlighter-rouge&quot;&gt;yii2&lt;/code&gt; telah ditulis ulang dari versi sebelumnya dan disempurnakan sehingga lebih mudah dan dapat digunakan secara global. Nah kali ini saya ingin berbagai sedikit tip bagaimana membuat event secara global di Yii2. Saya asumsikan bahwa kamu sudah memiliki pengetahuan tentang dasar-dasar &lt;strong&gt;PHP7&lt;/strong&gt; dan &lt;strong&gt;Yii2&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Secara sederhana event pada yii2 mirip event pada &lt;strong&gt;jquery&lt;/strong&gt; dan cara pemakaiannya pun mirip. Untuk listening pada event tertentu kita gunakan &lt;strong&gt;on&lt;/strong&gt; dan untuk mentrigger event menggunakan fungsi &lt;strong&gt;trigger&lt;/strong&gt;. Detil fungsi on dan trigger dapat dilihat dibawah ini:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$append&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Tiga parameter utama pada fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;on&lt;/code&gt; wajib ada, sedangkan selebihnya boleh diabaikan. Karena kita akan fokus pada bagaimana menggunakan event yii2 secara global maka kita hanya akan menggunakan 3 parameter pertama. contoh penggunaan event secara umum seperti berikut:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// SiteController.php&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;yii\base\Event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EVENT_HELLO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;EVENT_HELLO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'helloLog'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;actionIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;EVENT_HELLO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'index'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;helloLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Yii&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'---Hello world---'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Pada contoh di atas kita mengimport klas &lt;code class=&quot;highlighter-rouge&quot;&gt;Event&lt;/code&gt; kemudian membuat konstanta nama event. Lalu pada fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt; kita mendaftarkan event melalui fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;on&lt;/code&gt; dengan nama fungsi yang akan dijalankan setelah event ditrigger yaitu &lt;code class=&quot;highlighter-rouge&quot;&gt;helloLog&lt;/code&gt;. Selanjutnya pada fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;actionIndex&lt;/code&gt; kita mentrigger event &lt;code class=&quot;highlighter-rouge&quot;&gt;EVENT_HELLO&lt;/code&gt; memakai fungsi trigger.&lt;/p&gt;

&lt;p&gt;Perhatikan parameter ketiga, karena fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;helloLog&lt;/code&gt; bertipe static maka nama klasnya menggunakan &lt;code class=&quot;highlighter-rouge&quot;&gt;self::className&lt;/code&gt;. Jika menggunakan fungsi yang bukan static kita bisa menggunakan &lt;code class=&quot;highlighter-rouge&quot;&gt;$this&lt;/code&gt; seperti ini:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;EVENT_HELLO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'helloLog'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Kemudian jalankan dengan mengakses controller site, jika tidak ada error maka akan ada log error dengan pesan hello world pada file &lt;code class=&quot;highlighter-rouge&quot;&gt;runtime/logs/app.log&lt;/code&gt; seperti berikut ini:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/001-2019-03-06-event-globalyii2.png&quot; alt=&quot;event-global&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Semoga dengan penjelasan dan contoh di atas kita sudah bisa memahami dasar-dasar event pada &lt;code class=&quot;highlighter-rouge&quot;&gt;yii2&lt;/code&gt;, sekarang kita bikin event listenernya secara global sehingga kita dapat memicu/mentriggernya dari mana saja(model/controller/module). Agar event dapat didaftarkan secara global pada saat aplikasinya jalan maka kita akan menggunakan BootstrapInterface. kita akan bikin klas implementasi dari BootstrapInterface.&lt;/p&gt;

&lt;p&gt;Pertama kita bikin klas dengan nama &lt;code class=&quot;highlighter-rouge&quot;&gt;EventAutoLoader.php&lt;/code&gt; pada folder &lt;code class=&quot;highlighter-rouge&quot;&gt;nama_app/components&lt;/code&gt;, Klas ini berguna agar aplikasi dapat memuat konfigurasi event-event pada saat proses booting aplikasi. klas ini turunan dari &lt;code class=&quot;highlighter-rouge&quot;&gt;BootstrapInterface&lt;/code&gt; yang hanya memiliki satu definisi fungsi yang harus di implementasikan pada klas turunan.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app\components&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Yii&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;yii\base\BootstrapInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;yii\base\Event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EventAutoLoader&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BootstrapInterface&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bootstrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;$eventConfigFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Yii&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAlias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'@app'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/config/event-config.php'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$eventConfigFile&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'class'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'event'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'callback'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Kemudian buka file &lt;code class=&quot;highlighter-rouge&quot;&gt;config/web.php&lt;/code&gt; dan tambahkan klas yang baru saja kita buat pada config &lt;code class=&quot;highlighter-rouge&quot;&gt;bootstrap&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;s1&quot;&gt;'bootstrap'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'app\components\EventAutoLoader'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Tak lupa buat file dengan nama event-config.php pada folder config untuk menyimpan semua event dan event handler. Dan isinya kurang lebih seperti ini:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app\controllers\SiteController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'class'&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SiteController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'event'&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SiteController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;EVENT_HELLO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'callback'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SiteController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'helloLog'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Sampai tahap ini kita sudah mendaftarkan event secara global dan event tersebut dapat kita dari mana saja, karena klas &lt;code class=&quot;highlighter-rouge&quot;&gt;EventAutoLoader&lt;/code&gt; akan dijalankan pada saat aplikasi booting pertama kali. Untuk memastikan bahwa event dapat dipanggil dari mana saja, kita akan membuat controller baru dengan nama &lt;code class=&quot;highlighter-rouge&quot;&gt;HelloController&lt;/code&gt; dan mentrigger event yang ada di &lt;code class=&quot;highlighter-rouge&quot;&gt;SiteController&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app\controllers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Yii&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;yii\web\Controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;yii\base\Event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;app\controllers\SiteController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloController&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Controller&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;actionIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;$event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SiteController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SiteController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;EVENT_HELLO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Kemudian akses hello controller melalui browser, jika semua lancar maka akan ada pesan Hello world di &lt;code class=&quot;highlighter-rouge&quot;&gt;app.log&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/002-2019-03-06-event-globalyii2.png&quot; alt=&quot;event-global&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sekian untuk artikel kali semoga bermanfaat. Insya Allah pada artikel berikutnya saya akan membahas sedikit bagaimana melewatkan data pada event yang telah kita buat. Apabila kamu mempunyai saran dan kritik untuk artikel jangan sungkan2 untuk berkomentar dibawah.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Event pada yii2 telah ditulis ulang dari versi sebelumnya dan disempurnakan sehingga lebih mudah dan dapat digunakan secara global. Nah kali ini saya ingin berbagai sedikit tip bagaimana membuat event secara global di Yii2. Saya asumsikan bahwa kamu sudah memiliki pengetahuan tentang dasar-dasar PHP7 dan Yii2. Secara sederhana event pada yii2 mirip event pada jquery dan cara pemakaiannya pun mirip. Untuk listening pada event tertentu kita gunakan on dan untuk mentrigger event menggunakan fungsi trigger. Detil fungsi on dan trigger dapat dilihat dibawah ini: Event::on($class, $name, $handle, $data = null, $append = true); Event::trigger($class, $name, $event = null); Tiga parameter utama pada fungsi on wajib ada, sedangkan selebihnya boleh diabaikan. Karena kita akan fokus pada bagaimana menggunakan event yii2 secara global maka kita hanya akan menggunakan 3 parameter pertama. contoh penggunaan event secara umum seperti berikut: // SiteController.php ... use yii\base\Event; ... const EVENT_HELLO = 'hello'; public function init() { parent::init(); Event::on(self::className(), self::EVENT_HELLO, [self::className(), 'helloLog']); } public function actionIndex() { $event = new Event(); Event::trigger(self::className(), self::EVENT_HELLO, $event); return $this-&amp;gt;render('index'); } public static function helloLog() { Yii::error('---Hello world---'); } ... Pada contoh di atas kita mengimport klas Event kemudian membuat konstanta nama event. Lalu pada fungsi init kita mendaftarkan event melalui fungsi on dengan nama fungsi yang akan dijalankan setelah event ditrigger yaitu helloLog. Selanjutnya pada fungsi actionIndex kita mentrigger event EVENT_HELLO memakai fungsi trigger. Perhatikan parameter ketiga, karena fungsi helloLog bertipe static maka nama klasnya menggunakan self::className. Jika menggunakan fungsi yang bukan static kita bisa menggunakan $this seperti ini: Event::on(self::className(), self::EVENT_HELLO, [$this, 'helloLog']); Kemudian jalankan dengan mengakses controller site, jika tidak ada error maka akan ada log error dengan pesan hello world pada file runtime/logs/app.log seperti berikut ini: Semoga dengan penjelasan dan contoh di atas kita sudah bisa memahami dasar-dasar event pada yii2, sekarang kita bikin event listenernya secara global sehingga kita dapat memicu/mentriggernya dari mana saja(model/controller/module). Agar event dapat didaftarkan secara global pada saat aplikasinya jalan maka kita akan menggunakan BootstrapInterface. kita akan bikin klas implementasi dari BootstrapInterface. Pertama kita bikin klas dengan nama EventAutoLoader.php pada folder nama_app/components, Klas ini berguna agar aplikasi dapat memuat konfigurasi event-event pada saat proses booting aplikasi. klas ini turunan dari BootstrapInterface yang hanya memiliki satu definisi fungsi yang harus di implementasikan pada klas turunan. &amp;lt;?php namespace app\components; use Yii; use yii\base\BootstrapInterface; use yii\base\Event; class EventAutoLoader implements BootstrapInterface { public function bootstrap($app) { $eventConfigFile = require(Yii::getAlias('@app') . '/config/event-config.php'); foreach ($eventConfigFile as $config) { Event::on($config['class'], $config['event'], $config['callback']); } } } Kemudian buka file config/web.php dan tambahkan klas yang baru saja kita buat pada config bootstrap. 'bootstrap' =&amp;gt; [ ... 'app\components\EventAutoLoader', ... ], Tak lupa buat file dengan nama event-config.php pada folder config untuk menyimpan semua event dan event handler. Dan isinya kurang lebih seperti ini: &amp;lt;?php use app\controllers\SiteController; return [ [ 'class' =&amp;gt; SiteController::className(), 'event' =&amp;gt; SiteController::EVENT_HELLO, 'callback' =&amp;gt; [SiteController::className(), 'helloLog'], ] ]; Sampai tahap ini kita sudah mendaftarkan event secara global dan event tersebut dapat kita dari mana saja, karena klas EventAutoLoader akan dijalankan pada saat aplikasi booting pertama kali. Untuk memastikan bahwa event dapat dipanggil dari mana saja, kita akan membuat controller baru dengan nama HelloController dan mentrigger event yang ada di SiteController. &amp;lt;?php namespace app\controllers; use Yii; use yii\web\Controller; use yii\base\Event; use app\controllers\SiteController; class HelloController extends Controller { public function actionIndex() { $event = new Event(); Event::trigger(SiteController::className(), SiteController::EVENT_HELLO, $event); } } Kemudian akses hello controller melalui browser, jika semua lancar maka akan ada pesan Hello world di app.log Sekian untuk artikel kali semoga bermanfaat. Insya Allah pada artikel berikutnya saya akan membahas sedikit bagaimana melewatkan data pada event yang telah kita buat. Apabila kamu mempunyai saran dan kritik untuk artikel jangan sungkan2 untuk berkomentar dibawah.</summary></entry><entry><title type="html">Mengenal Gorm</title><link href="http://localhost:4000/go/golang/2019/03/06/mengenal-gorm.html" rel="alternate" type="text/html" title="Mengenal Gorm" /><published>2019-03-06T08:00:00+07:00</published><updated>2019-03-06T08:00:00+07:00</updated><id>http://localhost:4000/go/golang/2019/03/06/mengenal-gorm</id><content type="html" xml:base="http://localhost:4000/go/golang/2019/03/06/mengenal-gorm.html">&lt;p&gt;Gorm adalah pustaka ORM untuk golang, ORM itu singkatan dari object-relational mapping walaupun sebenarnya golang bukan bahasa OOP seperti pada umumnya. Alasan kenapa saya menggunakan gorm adalah karena kita tidak perlu merubah tipe data dari mysql ke struk, apalagi jika field struk tersebut ada yang null maka kita harus menggunakan tipe data yang nullable.&lt;/p&gt;

&lt;p&gt;Contohnya string nullable, int nullable dll. Akan sangat repot sekali jika kolomnya banyak, oleh karena itu saya memakai gorm untuk memudahkan hal tersebut.&lt;/p&gt;

&lt;h4 id=&quot;install&quot;&gt;Install&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;go get github.com/jinzhu/gorm&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Untuk contoh saya akan membuat tabel &lt;code class=&quot;highlighter-rouge&quot;&gt;posts&lt;/code&gt;, silahkan buat tabel posts dengan aplikasi favorit Anda.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;primary&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auto_increment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;published&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;tinyint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Setelah kita selesai membuat tabel posts, maka kita akan membuat folder gorm. Karena akun github saya adalah susilolab maka saya akan membuat folder di &lt;code class=&quot;highlighter-rouge&quot;&gt;github.com/susilolab/blog/gorm&lt;/code&gt; dan kita membuat file &lt;code class=&quot;highlighter-rouge&quot;&gt;main.go&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;koneksi-ke-database-mysql&quot;&gt;Koneksi ke database mysql&lt;/h4&gt;

&lt;p&gt;kita akan mencoba menghubungkan ke database mysql. Kita juga membutuhkan pustaka driver mysql selain gorm untuk menghubungkan ke database. Ok, pertama kita bikin paket main dan import paket &lt;code class=&quot;highlighter-rouge&quot;&gt;fmt&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;log&lt;/code&gt;, driver &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; dan &lt;code class=&quot;highlighter-rouge&quot;&gt;gorm&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Dan buat struk &lt;code class=&quot;highlighter-rouge&quot;&gt;Post&lt;/code&gt;, struk ini untuk mewakili dari table &lt;code class=&quot;highlighter-rouge&quot;&gt;posts&lt;/code&gt;. Struk pada Go konsepnya mirip klas pada PHP. Berikut potongan kodenya:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;fmt&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;log&quot;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;github.com/go-sql-driver/mysql&quot;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;github.com/jinzhu/gorm&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Post&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Title&lt;/span&gt;     &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Body&lt;/span&gt;      &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Published&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;koneksi-database&quot;&gt;Koneksi database&lt;/h4&gt;

&lt;p&gt;Kemudian pada fungsi main kita buat koneksi ke database dengan memanggil fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;gorm.Open&lt;/code&gt;, fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;Open&lt;/code&gt; akan mengembalikan struk &lt;code class=&quot;highlighter-rouge&quot;&gt;gorm.DB&lt;/code&gt; dan &lt;code class=&quot;highlighter-rouge&quot;&gt;err&lt;/code&gt;. Jika err tidak sama dengan nil munculkan pesan error dan exit, cukup tuliskan &lt;code class=&quot;highlighter-rouge&quot;&gt;log.Fatalln&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;Defer.Close()&lt;/code&gt; setelah error handling berguna untuk menutup koneksi mysql.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;root:password@tcp(127.0.0.1:3306)/blog?charset=utf8&amp;amp;parseTime=True&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gorm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mysql&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Fatalln&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;query-data&quot;&gt;Query Data&lt;/h4&gt;

&lt;p&gt;Kemudian kita bisa memulai query data, kita akan mencoba mengambil semua data yang ada pada tabel &lt;code class=&quot;highlighter-rouge&quot;&gt;posts&lt;/code&gt;, perlu di ingat bahwa gorm akan menggangap nama tabel semua dalam bentuk jamak kecuali kita mengaktifkan mode singular atau menyebutkan nama tabel dengan fungsi Table. Misalnya struk &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt; maka nama tabelnya akan dianggap &lt;code class=&quot;highlighter-rouge&quot;&gt;users&lt;/code&gt;, struk &lt;code class=&quot;highlighter-rouge&quot;&gt;UserGroup&lt;/code&gt; namanya tabelnya akan dianggap &lt;code class=&quot;highlighter-rouge&quot;&gt;user_groups&lt;/code&gt; dll. Pertama kita bikin slice &lt;code class=&quot;highlighter-rouge&quot;&gt;Post&lt;/code&gt; dengan nama &lt;code class=&quot;highlighter-rouge&quot;&gt;posts&lt;/code&gt; untuk menampung datanya.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;n&quot;&gt;posts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RecordNotFound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Fatalln&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;record tidak ada&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;range&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;posts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;mendapat-data-pertama-dan-terakhir&quot;&gt;Mendapat data pertama dan terakhir&lt;/h4&gt;

&lt;p&gt;Untuk mendapatkan record pertama kita bisa menggunakan fungsi First dan untuk data terakhir menggunakan fungsi Last&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Post&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastPost&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Post&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastPost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;insert-data-ke-tabel&quot;&gt;Insert data ke tabel&lt;/h4&gt;

&lt;p&gt;Untuk insert data ke tabel ada 2 cara, pertama menggunakan fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;Create&lt;/code&gt; dan yang kedua dengan fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;NewRecord&lt;/code&gt;. Fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;Create&lt;/code&gt; akan mengembalikan struk &lt;code class=&quot;highlighter-rouge&quot;&gt;gorm.DB&lt;/code&gt;, untuk melihat errornya bisa melalui property &lt;code class=&quot;highlighter-rouge&quot;&gt;Error&lt;/code&gt;. Sedangkan &lt;code class=&quot;highlighter-rouge&quot;&gt;NewRecord&lt;/code&gt; akan mengembalikan nilai true jika sukses dan false jika gagal.&lt;/p&gt;

&lt;p&gt;Pertama buat struk Post dan isi field-fieldnya.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;n&quot;&gt;Post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;belajar gorm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;awesome&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Published&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data sukses disimpan.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;update&quot;&gt;Update&lt;/h4&gt;

&lt;p&gt;Update dapat dilakukan dengan memanggil fungsi &lt;code class=&quot;highlighter-rouge&quot;&gt;Save&lt;/code&gt;, setelah kita mencari recordnya terlebih dahulu.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RecordNotFound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Fatalln&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Record not found.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Belajar ORM dengan Gorm&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Sekian dari saya dan semoga bermanfaat. Untuk dokumentasi lengkapnya dapat Anda baca disini &lt;a href=&quot;https://gorm.io&quot;&gt;gorm.io&lt;/a&gt;.&lt;/p&gt;</content><author><name>Agus Susilo</name></author><summary type="html">Gorm adalah pustaka ORM untuk golang, ORM itu singkatan dari object-relational mapping walaupun sebenarnya golang bukan bahasa OOP seperti pada umumnya. Alasan kenapa saya menggunakan gorm adalah karena kita tidak perlu merubah tipe data dari mysql ke struk, apalagi jika field struk tersebut ada yang null maka kita harus menggunakan tipe data yang nullable. Contohnya string nullable, int nullable dll. Akan sangat repot sekali jika kolomnya banyak, oleh karena itu saya memakai gorm untuk memudahkan hal tersebut. Install $ go get github.com/jinzhu/gorm Untuk contoh saya akan membuat tabel posts, silahkan buat tabel posts dengan aplikasi favorit Anda. create table posts( id int(11) not null primary key auto_increment, title varchar(100) not null, body text, published tinyint(1) unsigned default 0 ); Setelah kita selesai membuat tabel posts, maka kita akan membuat folder gorm. Karena akun github saya adalah susilolab maka saya akan membuat folder di github.com/susilolab/blog/gorm dan kita membuat file main.go. Koneksi ke database mysql kita akan mencoba menghubungkan ke database mysql. Kita juga membutuhkan pustaka driver mysql selain gorm untuk menghubungkan ke database. Ok, pertama kita bikin paket main dan import paket fmt, log, driver mysql dan gorm. Dan buat struk Post, struk ini untuk mewakili dari table posts. Struk pada Go konsepnya mirip klas pada PHP. Berikut potongan kodenya: package main import ( &quot;fmt&quot; &quot;log&quot; _ &quot;github.com/go-sql-driver/mysql&quot; &quot;github.com/jinzhu/gorm&quot; ) type Post struct { ID int Title string Body string Published int } Koneksi database Kemudian pada fungsi main kita buat koneksi ke database dengan memanggil fungsi gorm.Open, fungsi Open akan mengembalikan struk gorm.DB dan err. Jika err tidak sama dengan nil munculkan pesan error dan exit, cukup tuliskan log.Fatalln. Defer.Close() setelah error handling berguna untuk menutup koneksi mysql. func main() { conn := &quot;root:password@tcp(127.0.0.1:3306)/blog?charset=utf8&amp;amp;parseTime=True&quot; db, err := gorm.Open(&quot;mysql&quot;, conn) if err != nil { log.Fatalln(err) } defer db.Close() } Query Data Kemudian kita bisa memulai query data, kita akan mencoba mengambil semua data yang ada pada tabel posts, perlu di ingat bahwa gorm akan menggangap nama tabel semua dalam bentuk jamak kecuali kita mengaktifkan mode singular atau menyebutkan nama tabel dengan fungsi Table. Misalnya struk User maka nama tabelnya akan dianggap users, struk UserGroup namanya tabelnya akan dianggap user_groups dll. Pertama kita bikin slice Post dengan nama posts untuk menampung datanya. posts := make([]Post, 0) if db.Find(&amp;amp;posts).RecordNotFound() { log.Fatalln(&quot;record tidak ada&quot;) } for _, val := range posts { fmt.Println(val.Title) } Mendapat data pertama dan terakhir Untuk mendapatkan record pertama kita bisa menggunakan fungsi First dan untuk data terakhir menggunakan fungsi Last var post Post db.First(&amp;amp;post) db.First(&amp;amp;post, 10) var lastPost Post db.Last(&amp;amp;lastPost) Insert data ke tabel Untuk insert data ke tabel ada 2 cara, pertama menggunakan fungsi Create dan yang kedua dengan fungsi NewRecord. Fungsi Create akan mengembalikan struk gorm.DB, untuk melihat errornya bisa melalui property Error. Sedangkan NewRecord akan mengembalikan nilai true jika sukses dan false jika gagal. Pertama buat struk Post dan isi field-fieldnya. Post := Post{ID: 2, Title: &quot;belajar gorm&quot;, Body: &quot;awesome&quot;, Published: 1} if err := db.Create().Error; err == nil { fmt.Println(&quot;data sukses disimpan.&quot;); } Update Update dapat dilakukan dengan memanggil fungsi Save, setelah kita mencari recordnya terlebih dahulu. post := Post{} if db.First(&amp;amp;post, 1).RecordNotFound() { log.Fatalln(&quot;Record not found.&quot;) } post.Title = &quot;Belajar ORM dengan Gorm&quot; db.Save(&amp;amp;post) Sekian dari saya dan semoga bermanfaat. Untuk dokumentasi lengkapnya dapat Anda baca disini gorm.io.</summary></entry></feed>